%{ /* -*- C -*- */
  // Author: Markus Schordan 2014.
using namespace std;
#include <string>
#include <vector>
#include <iostream> 

int indent = 0;
void indent_line();
%}
%option yylineno noyywrap

quoted \"([^\"\\]*(\\.[^\"\\]*)*)\"
singlequoted \'([^\'\\]*(\\.[^\'\\]*)*)\'
variable [A-Z][A-Za-z_]*
int \-?[0-9]+
node [a-z][A-Za-z_]*\_node
annotation [a-z][A-Za-z_]*annotation
atom [a-z][A-Za-z_]*
comma \,
open_par1 [(]
open_par2 [\[]
close_par [)\]]

%%

[ \t\n]
{quoted} {cout << yytext;}
{singlequoted} {cout << yytext;}
{variable} {cout << yytext;}
{int} {cout << yytext;}
{node} {cout << "\n"; indent_line(); cout << yytext;}
{annotation} { cout << yytext;}
{atom} {cout << yytext;}
{open_par2} {indent++; cout << yytext;}
{open_par1} {indent++; cout << yytext << "\n"; indent_line();}
{close_par} {indent--; cout << yytext << "\n"; indent_line();}
{comma} {cout << ",";}
. {cout << yytext;}

%%

void indent_line() {
	for(int j = 0; j < indent; j++) {
		cout << "   :";
	}
}

int main(int argc, char**argv) {
  ++argv, --argc;  /* skip over program name */
  if ( argc > 0 )
    yyin = fopen( argv[0], "r" );
  else
    yyin = stdin;
  yylex();
}
