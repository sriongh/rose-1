=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80480a0:mov    eax, ebx
Symbolic@0x16d7cd0 insn@0x080480a0[0]: startInstruction(mov    eax, ebx)
Symbolic@0x16d7cd0 insn@0x080480a0[0]: number_(32, 2) = {defs={0x080480a0}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480a0[0]: number_(32, 134512800) = {defs={0x080480a0}, expr=0x080480a0[32]}
Symbolic@0x16d7cd0 insn@0x080480a0[0]: add({defs={0x080480a0}, expr=0x080480a0[32]}, {defs={0x080480a0}, expr=2[32]}) = {defs={0x080480a0}, expr=0x080480a2[32]}
Symbolic@0x16d7cd0 insn@0x080480a0[0]: writeRegister(eip, {defs={0x080480a0}, expr=0x080480a2[32]})
Symbolic@0x16d7cd0 insn@0x080480a0[0]: readRegister(ebx) = ebx_0[32]
Symbolic@0x16d7cd0 insn@0x080480a0[0]: writeRegister(eax, ebx_0[32])
Symbolic@0x16d7cd0 insn@0x080480a0[0]: finishInstruction(mov    eax, ebx)
registers:
  eax    = ebx_0[32]
  eip    = {defs={0x080480a0}, expr=0x080480a2[32]}
memory:

0x80480a2:mov    eax, eax
Symbolic@0x16d7cd0 insn@0x080480a2[1]: startInstruction(mov    eax, eax)
Symbolic@0x16d7cd0 insn@0x080480a2[1]: number_(32, 2) = {defs={0x080480a2}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480a2[1]: number_(32, 134512802) = {defs={0x080480a2}, expr=0x080480a2[32]}
Symbolic@0x16d7cd0 insn@0x080480a2[1]: add({defs={0x080480a2}, expr=0x080480a2[32]}, {defs={0x080480a2}, expr=2[32]}) = {defs={0x080480a2}, expr=0x080480a4[32]}
Symbolic@0x16d7cd0 insn@0x080480a2[1]: writeRegister(eip, {defs={0x080480a2}, expr=0x080480a4[32]})
Symbolic@0x16d7cd0 insn@0x080480a2[1]: readRegister(eax) = ebx_0[32]
Symbolic@0x16d7cd0 insn@0x080480a2[1]: writeRegister(eax, ebx_0[32])
Symbolic@0x16d7cd0 insn@0x080480a2[1]: finishInstruction(mov    eax, eax)
registers:
  eax    = ebx_0[32]
  eip    = {defs={0x080480a2}, expr=0x080480a4[32]}
memory:

0x80480a4:je     0x080480da<<Insn>>
Symbolic@0x16d7cd0 insn@0x080480a4[2]: startInstruction(je     0x080480da<<Insn>>)
Symbolic@0x16d7cd0 insn@0x080480a4[2]: number_(32, 2) = {defs={0x080480a4}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480a4[2]: number_(32, 134512804) = {defs={0x080480a4}, expr=0x080480a4[32]}
Symbolic@0x16d7cd0 insn@0x080480a4[2]: add({defs={0x080480a4}, expr=0x080480a4[32]}, {defs={0x080480a4}, expr=2[32]}) = {defs={0x080480a4}, expr=0x080480a6[32]}
Symbolic@0x16d7cd0 insn@0x080480a4[2]: writeRegister(eip, {defs={0x080480a4}, expr=0x080480a6[32]})
Symbolic@0x16d7cd0 insn@0x080480a4[2]: readRegister(zf) = zf_0[1]
Symbolic@0x16d7cd0 insn@0x080480a4[2]: readRegister(eip) = {defs={0x080480a4}, expr=0x080480a6[32]}
Symbolic@0x16d7cd0 insn@0x080480a4[2]: number_(32, 134512858) = {defs={0x080480a4}, expr=0x080480da[32]}
Symbolic@0x16d7cd0 insn@0x080480a4[2]: ite(zf_0[1], {defs={0x080480a4}, expr=0x080480da[32]}, {defs={0x080480a4}, expr=0x080480a6[32]}) = {defs={0x080480a4}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480a6[32])}
Symbolic@0x16d7cd0 insn@0x080480a4[2]: writeRegister(eip, {defs={0x080480a4}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480a6[32])})
Symbolic@0x16d7cd0 insn@0x080480a4[2]: finishInstruction(je     0x080480da<<Insn>>)
registers:
  eax    = ebx_0[32]
  eip    = {defs={0x080480a4}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480a6[32])}
memory:
Symbolic@0x16d7cd0 insn@0x080480a4[2]: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80480a6:add    eax, eax
Symbolic@0x16d7cd0 insn@0x080480a6[0]: startInstruction(add    eax, eax)
Symbolic@0x16d7cd0 insn@0x080480a6[0]: number_(32, 2) = {defs={0x080480a6}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: number_(32, 134512806) = {defs={0x080480a6}, expr=0x080480a6[32]}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: add({defs={0x080480a6}, expr=0x080480a6[32]}, {defs={0x080480a6}, expr=2[32]}) = {defs={0x080480a6}, expr=0x080480a8[32]}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: writeRegister(eip, {defs={0x080480a6}, expr=0x080480a8[32]})
Symbolic@0x16d7cd0 insn@0x080480a6[0]: boolean_(0) = {defs={0x080480a6}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: readRegister(eax) = eax_0[32]
Symbolic@0x16d7cd0 insn@0x080480a6[0]: readRegister(eax) = eax_0[32]
Symbolic@0x16d7cd0 insn@0x080480a6[0]: addWithCarries(eax_0[32], eax_0[32], {defs={0x080480a6}, expr=0[1]}) = {defs={0x080480a6}, expr=(add[32] eax_0[32] eax_0[32])}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: also returns: {defs={0x080480a6}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32]))))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: extract({defs={0x080480a6}, expr=(add[32] eax_0[32] eax_0[32])}, 0, 8) = {defs={0x080480a6}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: extract({defs={0x080480a6}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32]))}, 1, 2) = {defs={0x080480a6}, expr=(extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: extract({defs={0x080480a6}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32]))}, 0, 1) = {defs={0x080480a6}, expr=(extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: xor_({defs={0x080480a6}, expr=(extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32]))}, {defs={0x080480a6}, expr=(extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32]))}) = {defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: extract({defs={0x080480a6}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32]))}, 3, 4) = {defs={0x080480a6}, expr=(extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: extract({defs={0x080480a6}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32]))}, 2, 3) = {defs={0x080480a6}, expr=(extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: xor_({defs={0x080480a6}, expr=(extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32]))}, {defs={0x080480a6}, expr=(extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32]))}) = {defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: extract({defs={0x080480a6}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32]))}, 5, 6) = {defs={0x080480a6}, expr=(extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: extract({defs={0x080480a6}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32]))}, 4, 5) = {defs={0x080480a6}, expr=(extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: xor_({defs={0x080480a6}, expr=(extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32]))}, {defs={0x080480a6}, expr=(extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32]))}) = {defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: extract({defs={0x080480a6}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32]))}, 7, 8) = {defs={0x080480a6}, expr=(extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: extract({defs={0x080480a6}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32]))}, 6, 7) = {defs={0x080480a6}, expr=(extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: xor_({defs={0x080480a6}, expr=(extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32]))}, {defs={0x080480a6}, expr=(extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32]))}) = {defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: xor_({defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32])))}, {defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32])))}) = {defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: xor_({defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32])))}, {defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32])))}) = {defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: xor_({defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32])))}, {defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32])))}) = {defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: invert({defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32])))}) = {defs={0x080480a6}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32]))))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: writeRegister(pf, {defs={0x080480a6}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32]))))})
Symbolic@0x16d7cd0 insn@0x080480a6[0]: extract({defs={0x080480a6}, expr=(add[32] eax_0[32] eax_0[32])}, 31, 32) = {defs={0x080480a6}, expr=(extract[1] 31[32] 32[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: writeRegister(sf, {defs={0x080480a6}, expr=(extract[1] 31[32] 32[32] (add[32] eax_0[32] eax_0[32]))})
Symbolic@0x16d7cd0 insn@0x080480a6[0]: equalToZero({defs={0x080480a6}, expr=(add[32] eax_0[32] eax_0[32])}) = {defs={0x080480a6}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: writeRegister(zf, {defs={0x080480a6}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32]))})
Symbolic@0x16d7cd0 insn@0x080480a6[0]: extract({defs={0x080480a6}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32]))))}, 31, 32) = {defs={0x080480a6}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32]))))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: extract({defs={0x080480a6}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32]))))}, 30, 31) = {defs={0x080480a6}, expr=(extract[1] 31[32] 32[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32]))))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: extract({defs={0x080480a6}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32]))))}, 3, 4) = {defs={0x080480a6}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32]))))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: writeRegister(af, {defs={0x080480a6}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32]))))})
Symbolic@0x16d7cd0 insn@0x080480a6[0]: writeRegister(cf, {defs={0x080480a6}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32]))))})
Symbolic@0x16d7cd0 insn@0x080480a6[0]: xor_({defs={0x080480a6}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32]))))}, {defs={0x080480a6}, expr=(extract[1] 31[32] 32[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32]))))}) = {defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32])))) (extract[1] 31[32] 32[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32])))))}
Symbolic@0x16d7cd0 insn@0x080480a6[0]: writeRegister(of, {defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32])))) (extract[1] 31[32] 32[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32])))))})
Symbolic@0x16d7cd0 insn@0x080480a6[0]: writeRegister(eax, {defs={0x080480a6}, expr=(add[32] eax_0[32] eax_0[32])})
Symbolic@0x16d7cd0 insn@0x080480a6[0]: finishInstruction(add    eax, eax)
registers:
  eax    = {defs={0x080480a6}, expr=(add[32] eax_0[32] eax_0[32])}
  eip    = {defs={0x080480a6}, expr=0x080480a8[32]}
  pf     = {defs={0x080480a6}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32]))))}
  sf     = {defs={0x080480a6}, expr=(extract[1] 31[32] 32[32] (add[32] eax_0[32] eax_0[32]))}
  zf     = {defs={0x080480a6}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32]))}
  af     = {defs={0x080480a6}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32]))))}
  cf     = {defs={0x080480a6}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32]))))}
  of     = {defs={0x080480a6}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32])))) (extract[1] 31[32] 32[32] (bv-xor[33] (add[33] (uextend[33] 33[32] eax_0[32]) (uextend[33] 33[32] eax_0[32])))))}
memory:

0x80480a8:add    ebx, ebx
Symbolic@0x16d7cd0 insn@0x080480a8[1]: startInstruction(add    ebx, ebx)
Symbolic@0x16d7cd0 insn@0x080480a8[1]: number_(32, 2) = {defs={0x080480a8}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: number_(32, 134512808) = {defs={0x080480a8}, expr=0x080480a8[32]}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: add({defs={0x080480a8}, expr=0x080480a8[32]}, {defs={0x080480a8}, expr=2[32]}) = {defs={0x080480a8}, expr=0x080480aa[32]}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: writeRegister(eip, {defs={0x080480a8}, expr=0x080480aa[32]})
Symbolic@0x16d7cd0 insn@0x080480a8[1]: boolean_(0) = {defs={0x080480a8}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: readRegister(ebx) = ebx_0[32]
Symbolic@0x16d7cd0 insn@0x080480a8[1]: readRegister(ebx) = ebx_0[32]
Symbolic@0x16d7cd0 insn@0x080480a8[1]: addWithCarries(ebx_0[32], ebx_0[32], {defs={0x080480a8}, expr=0[1]}) = {defs={0x080480a8}, expr=(add[32] ebx_0[32] ebx_0[32])}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: also returns: {defs={0x080480a8}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32]))))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: extract({defs={0x080480a8}, expr=(add[32] ebx_0[32] ebx_0[32])}, 0, 8) = {defs={0x080480a8}, expr=(extract[8] 0[32] 8[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: extract({defs={0x080480a8}, expr=(extract[8] 0[32] 8[32] (add[32] ebx_0[32] ebx_0[32]))}, 1, 2) = {defs={0x080480a8}, expr=(extract[1] 1[32] 2[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: extract({defs={0x080480a8}, expr=(extract[8] 0[32] 8[32] (add[32] ebx_0[32] ebx_0[32]))}, 0, 1) = {defs={0x080480a8}, expr=(extract[1] 0[32] 1[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: xor_({defs={0x080480a8}, expr=(extract[1] 0[32] 1[32] (add[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480a8}, expr=(extract[1] 1[32] 2[32] (add[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: extract({defs={0x080480a8}, expr=(extract[8] 0[32] 8[32] (add[32] ebx_0[32] ebx_0[32]))}, 3, 4) = {defs={0x080480a8}, expr=(extract[1] 3[32] 4[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: extract({defs={0x080480a8}, expr=(extract[8] 0[32] 8[32] (add[32] ebx_0[32] ebx_0[32]))}, 2, 3) = {defs={0x080480a8}, expr=(extract[1] 2[32] 3[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: xor_({defs={0x080480a8}, expr=(extract[1] 2[32] 3[32] (add[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480a8}, expr=(extract[1] 3[32] 4[32] (add[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 2[32] 3[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: extract({defs={0x080480a8}, expr=(extract[8] 0[32] 8[32] (add[32] ebx_0[32] ebx_0[32]))}, 5, 6) = {defs={0x080480a8}, expr=(extract[1] 5[32] 6[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: extract({defs={0x080480a8}, expr=(extract[8] 0[32] 8[32] (add[32] ebx_0[32] ebx_0[32]))}, 4, 5) = {defs={0x080480a8}, expr=(extract[1] 4[32] 5[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: xor_({defs={0x080480a8}, expr=(extract[1] 4[32] 5[32] (add[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480a8}, expr=(extract[1] 5[32] 6[32] (add[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: extract({defs={0x080480a8}, expr=(extract[8] 0[32] 8[32] (add[32] ebx_0[32] ebx_0[32]))}, 7, 8) = {defs={0x080480a8}, expr=(extract[1] 7[32] 8[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: extract({defs={0x080480a8}, expr=(extract[8] 0[32] 8[32] (add[32] ebx_0[32] ebx_0[32]))}, 6, 7) = {defs={0x080480a8}, expr=(extract[1] 6[32] 7[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: xor_({defs={0x080480a8}, expr=(extract[1] 6[32] 7[32] (add[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480a8}, expr=(extract[1] 7[32] 8[32] (add[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 6[32] 7[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: xor_({defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] ebx_0[32] ebx_0[32])))}, {defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 2[32] 3[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: xor_({defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] ebx_0[32] ebx_0[32])))}, {defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 6[32] 7[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: xor_({defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] ebx_0[32] ebx_0[32])))}, {defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 4[32] 5[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: invert({defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 4[32] 5[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480a8}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 4[32] 5[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] ebx_0[32] ebx_0[32]))))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: writeRegister(pf, {defs={0x080480a8}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 4[32] 5[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] ebx_0[32] ebx_0[32]))))})
Symbolic@0x16d7cd0 insn@0x080480a8[1]: extract({defs={0x080480a8}, expr=(add[32] ebx_0[32] ebx_0[32])}, 31, 32) = {defs={0x080480a8}, expr=(extract[1] 31[32] 32[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: writeRegister(sf, {defs={0x080480a8}, expr=(extract[1] 31[32] 32[32] (add[32] ebx_0[32] ebx_0[32]))})
Symbolic@0x16d7cd0 insn@0x080480a8[1]: equalToZero({defs={0x080480a8}, expr=(add[32] ebx_0[32] ebx_0[32])}) = {defs={0x080480a8}, expr=(zerop[1] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: writeRegister(zf, {defs={0x080480a8}, expr=(zerop[1] (add[32] ebx_0[32] ebx_0[32]))})
Symbolic@0x16d7cd0 insn@0x080480a8[1]: extract({defs={0x080480a8}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32]))))}, 31, 32) = {defs={0x080480a8}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32]))))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: extract({defs={0x080480a8}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32]))))}, 30, 31) = {defs={0x080480a8}, expr=(extract[1] 31[32] 32[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32]))))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: extract({defs={0x080480a8}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32]))))}, 3, 4) = {defs={0x080480a8}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32]))))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: writeRegister(af, {defs={0x080480a8}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32]))))})
Symbolic@0x16d7cd0 insn@0x080480a8[1]: writeRegister(cf, {defs={0x080480a8}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32]))))})
Symbolic@0x16d7cd0 insn@0x080480a8[1]: xor_({defs={0x080480a8}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32]))))}, {defs={0x080480a8}, expr=(extract[1] 31[32] 32[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32]))))}) = {defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32])))) (extract[1] 31[32] 32[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32])))))}
Symbolic@0x16d7cd0 insn@0x080480a8[1]: writeRegister(of, {defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32])))) (extract[1] 31[32] 32[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32])))))})
Symbolic@0x16d7cd0 insn@0x080480a8[1]: writeRegister(ebx, {defs={0x080480a8}, expr=(add[32] ebx_0[32] ebx_0[32])})
Symbolic@0x16d7cd0 insn@0x080480a8[1]: finishInstruction(add    ebx, ebx)
registers:
  eax    = {defs={0x080480a6}, expr=(add[32] eax_0[32] eax_0[32])}
  ebx    = {defs={0x080480a8}, expr=(add[32] ebx_0[32] ebx_0[32])}
  eip    = {defs={0x080480a8}, expr=0x080480aa[32]}
  pf     = {defs={0x080480a8}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 4[32] 5[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] ebx_0[32] ebx_0[32]))))}
  sf     = {defs={0x080480a8}, expr=(extract[1] 31[32] 32[32] (add[32] ebx_0[32] ebx_0[32]))}
  zf     = {defs={0x080480a8}, expr=(zerop[1] (add[32] ebx_0[32] ebx_0[32]))}
  af     = {defs={0x080480a8}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32]))))}
  cf     = {defs={0x080480a8}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32]))))}
  of     = {defs={0x080480a8}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32])))) (extract[1] 31[32] 32[32] (bv-xor[33] (add[33] (uextend[33] 33[32] ebx_0[32]) (uextend[33] 33[32] ebx_0[32])))))}
memory:

0x80480aa:add    eax, ebx
Symbolic@0x16d7cd0 insn@0x080480aa[2]: startInstruction(add    eax, ebx)
Symbolic@0x16d7cd0 insn@0x080480aa[2]: number_(32, 2) = {defs={0x080480aa}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: number_(32, 134512810) = {defs={0x080480aa}, expr=0x080480aa[32]}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: add({defs={0x080480aa}, expr=0x080480aa[32]}, {defs={0x080480aa}, expr=2[32]}) = {defs={0x080480aa}, expr=0x080480ac[32]}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: writeRegister(eip, {defs={0x080480aa}, expr=0x080480ac[32]})
Symbolic@0x16d7cd0 insn@0x080480aa[2]: boolean_(0) = {defs={0x080480aa}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: readRegister(ebx) = {defs={0x080480a8}, expr=(add[32] ebx_0[32] ebx_0[32])}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: readRegister(eax) = {defs={0x080480a6}, expr=(add[32] eax_0[32] eax_0[32])}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: addWithCarries({defs={0x080480a6}, expr=(add[32] eax_0[32] eax_0[32])}, {defs={0x080480a8}, expr=(add[32] ebx_0[32] ebx_0[32])}, {defs={0x080480aa}, expr=0[1]}) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: also returns: {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: extract({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])}, 0, 8) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: extract({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 1, 2) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: extract({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 0, 1) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: xor_({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: extract({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 3, 4) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: extract({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 2, 3) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: xor_({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: extract({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 5, 6) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: extract({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 4, 5) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: xor_({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: extract({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 7, 8) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: extract({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 6, 7) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: xor_({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: xor_({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: xor_({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: xor_({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: invert({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: writeRegister(pf, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))))})
Symbolic@0x16d7cd0 insn@0x080480aa[2]: extract({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])}, 31, 32) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 31[32] 32[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: writeRegister(sf, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 31[32] 32[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))})
Symbolic@0x16d7cd0 insn@0x080480aa[2]: equalToZero({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])}) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: writeRegister(zf, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))})
Symbolic@0x16d7cd0 insn@0x080480aa[2]: extract({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))}, 31, 32) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: extract({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))}, 30, 31) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: extract({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))}, 3, 4) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: writeRegister(af, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))})
Symbolic@0x16d7cd0 insn@0x080480aa[2]: writeRegister(cf, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))})
Symbolic@0x16d7cd0 insn@0x080480aa[2]: xor_({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))}, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))}) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32]))))) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32]))))))}
Symbolic@0x16d7cd0 insn@0x080480aa[2]: writeRegister(of, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32]))))) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32]))))))})
Symbolic@0x16d7cd0 insn@0x080480aa[2]: writeRegister(eax, {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])})
Symbolic@0x16d7cd0 insn@0x080480aa[2]: finishInstruction(add    eax, ebx)
registers:
  eax    = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])}
  ebx    = {defs={0x080480a8}, expr=(add[32] ebx_0[32] ebx_0[32])}
  eip    = {defs={0x080480aa}, expr=0x080480ac[32]}
  pf     = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))))}
  sf     = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 31[32] 32[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
  zf     = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
  af     = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))}
  cf     = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))}
  of     = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32]))))) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32]))))))}
memory:

0x80480ac:je     0x080480da<<Insn>>
Symbolic@0x16d7cd0 insn@0x080480ac[3]: startInstruction(je     0x080480da<<Insn>>)
Symbolic@0x16d7cd0 insn@0x080480ac[3]: number_(32, 2) = {defs={0x080480ac}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480ac[3]: number_(32, 134512812) = {defs={0x080480ac}, expr=0x080480ac[32]}
Symbolic@0x16d7cd0 insn@0x080480ac[3]: add({defs={0x080480ac}, expr=0x080480ac[32]}, {defs={0x080480ac}, expr=2[32]}) = {defs={0x080480ac}, expr=0x080480ae[32]}
Symbolic@0x16d7cd0 insn@0x080480ac[3]: writeRegister(eip, {defs={0x080480ac}, expr=0x080480ae[32]})
Symbolic@0x16d7cd0 insn@0x080480ac[3]: readRegister(zf) = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x16d7cd0 insn@0x080480ac[3]: readRegister(eip) = {defs={0x080480ac}, expr=0x080480ae[32]}
Symbolic@0x16d7cd0 insn@0x080480ac[3]: number_(32, 134512858) = {defs={0x080480ac}, expr=0x080480da[32]}
Symbolic@0x16d7cd0 insn@0x080480ac[3]: ite({defs={0x080480a6,0x080480a8,0x080480aa}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480ac}, expr=0x080480da[32]}, {defs={0x080480ac}, expr=0x080480ae[32]}) = {defs={0x080480a6,0x080480a8,0x080480aa,0x080480ac}, expr=(ite[32] (zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) 0x080480da[32] 0x080480ae[32])}
Symbolic@0x16d7cd0 insn@0x080480ac[3]: writeRegister(eip, {defs={0x080480a6,0x080480a8,0x080480aa,0x080480ac}, expr=(ite[32] (zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) 0x080480da[32] 0x080480ae[32])})
Symbolic@0x16d7cd0 insn@0x080480ac[3]: finishInstruction(je     0x080480da<<Insn>>)
registers:
  eax    = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])}
  ebx    = {defs={0x080480a8}, expr=(add[32] ebx_0[32] ebx_0[32])}
  eip    = {defs={0x080480a6,0x080480a8,0x080480aa,0x080480ac}, expr=(ite[32] (zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) 0x080480da[32] 0x080480ae[32])}
  pf     = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 4[32] 5[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))))}
  sf     = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 31[32] 32[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
  zf     = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
  af     = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))}
  cf     = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])))))}
  of     = {defs={0x080480a6,0x080480a8,0x080480aa}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32]))))) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32])) (add[33] (uextend[33] 33[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 33[32] (add[32] ebx_0[32] ebx_0[32]))))))}
memory:
Symbolic@0x16d7cd0 insn@0x080480ac[3]: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80480ae:mov    eax, 0x00000001
Symbolic@0x16d7cd0 insn@0x080480ae[0]: startInstruction(mov    eax, 0x00000001)
Symbolic@0x16d7cd0 insn@0x080480ae[0]: number_(32, 5) = {defs={0x080480ae}, expr=5[32]}
Symbolic@0x16d7cd0 insn@0x080480ae[0]: number_(32, 134512814) = {defs={0x080480ae}, expr=0x080480ae[32]}
Symbolic@0x16d7cd0 insn@0x080480ae[0]: add({defs={0x080480ae}, expr=0x080480ae[32]}, {defs={0x080480ae}, expr=5[32]}) = {defs={0x080480ae}, expr=0x080480b3[32]}
Symbolic@0x16d7cd0 insn@0x080480ae[0]: writeRegister(eip, {defs={0x080480ae}, expr=0x080480b3[32]})
Symbolic@0x16d7cd0 insn@0x080480ae[0]: number_(32, 1) = {defs={0x080480ae}, expr=1[32]}
Symbolic@0x16d7cd0 insn@0x080480ae[0]: writeRegister(eax, {defs={0x080480ae}, expr=1[32]})
Symbolic@0x16d7cd0 insn@0x080480ae[0]: finishInstruction(mov    eax, 0x00000001)
registers:
  eax    = {defs={0x080480ae}, expr=1[32]}
  eip    = {defs={0x080480ae}, expr=0x080480b3[32]}
memory:

0x80480b3:je     0x080480da<<Insn>>
Symbolic@0x16d7cd0 insn@0x080480b3[1]: startInstruction(je     0x080480da<<Insn>>)
Symbolic@0x16d7cd0 insn@0x080480b3[1]: number_(32, 2) = {defs={0x080480b3}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480b3[1]: number_(32, 134512819) = {defs={0x080480b3}, expr=0x080480b3[32]}
Symbolic@0x16d7cd0 insn@0x080480b3[1]: add({defs={0x080480b3}, expr=0x080480b3[32]}, {defs={0x080480b3}, expr=2[32]}) = {defs={0x080480b3}, expr=0x080480b5[32]}
Symbolic@0x16d7cd0 insn@0x080480b3[1]: writeRegister(eip, {defs={0x080480b3}, expr=0x080480b5[32]})
Symbolic@0x16d7cd0 insn@0x080480b3[1]: readRegister(zf) = zf_0[1]
Symbolic@0x16d7cd0 insn@0x080480b3[1]: readRegister(eip) = {defs={0x080480b3}, expr=0x080480b5[32]}
Symbolic@0x16d7cd0 insn@0x080480b3[1]: number_(32, 134512858) = {defs={0x080480b3}, expr=0x080480da[32]}
Symbolic@0x16d7cd0 insn@0x080480b3[1]: ite(zf_0[1], {defs={0x080480b3}, expr=0x080480da[32]}, {defs={0x080480b3}, expr=0x080480b5[32]}) = {defs={0x080480b3}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480b5[32])}
Symbolic@0x16d7cd0 insn@0x080480b3[1]: writeRegister(eip, {defs={0x080480b3}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480b5[32])})
Symbolic@0x16d7cd0 insn@0x080480b3[1]: finishInstruction(je     0x080480da<<Insn>>)
registers:
  eax    = {defs={0x080480ae}, expr=1[32]}
  eip    = {defs={0x080480b3}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480b5[32])}
memory:
Symbolic@0x16d7cd0 insn@0x080480b3[1]: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80480b5:mov    eax, 0x00000003
Symbolic@0x16d7cd0 insn@0x080480b5[0]: startInstruction(mov    eax, 0x00000003)
Symbolic@0x16d7cd0 insn@0x080480b5[0]: number_(32, 5) = {defs={0x080480b5}, expr=5[32]}
Symbolic@0x16d7cd0 insn@0x080480b5[0]: number_(32, 134512821) = {defs={0x080480b5}, expr=0x080480b5[32]}
Symbolic@0x16d7cd0 insn@0x080480b5[0]: add({defs={0x080480b5}, expr=0x080480b5[32]}, {defs={0x080480b5}, expr=5[32]}) = {defs={0x080480b5}, expr=0x080480ba[32]}
Symbolic@0x16d7cd0 insn@0x080480b5[0]: writeRegister(eip, {defs={0x080480b5}, expr=0x080480ba[32]})
Symbolic@0x16d7cd0 insn@0x080480b5[0]: number_(32, 3) = {defs={0x080480b5}, expr=3[32]}
Symbolic@0x16d7cd0 insn@0x080480b5[0]: writeRegister(eax, {defs={0x080480b5}, expr=3[32]})
Symbolic@0x16d7cd0 insn@0x080480b5[0]: finishInstruction(mov    eax, 0x00000003)
registers:
  eax    = {defs={0x080480b5}, expr=3[32]}
  eip    = {defs={0x080480b5}, expr=0x080480ba[32]}
memory:

0x80480ba:mov    ebx, 0x00000004
Symbolic@0x16d7cd0 insn@0x080480ba[1]: startInstruction(mov    ebx, 0x00000004)
Symbolic@0x16d7cd0 insn@0x080480ba[1]: number_(32, 5) = {defs={0x080480ba}, expr=5[32]}
Symbolic@0x16d7cd0 insn@0x080480ba[1]: number_(32, 134512826) = {defs={0x080480ba}, expr=0x080480ba[32]}
Symbolic@0x16d7cd0 insn@0x080480ba[1]: add({defs={0x080480ba}, expr=0x080480ba[32]}, {defs={0x080480ba}, expr=5[32]}) = {defs={0x080480ba}, expr=0x080480bf[32]}
Symbolic@0x16d7cd0 insn@0x080480ba[1]: writeRegister(eip, {defs={0x080480ba}, expr=0x080480bf[32]})
Symbolic@0x16d7cd0 insn@0x080480ba[1]: number_(32, 4) = {defs={0x080480ba}, expr=4[32]}
Symbolic@0x16d7cd0 insn@0x080480ba[1]: writeRegister(ebx, {defs={0x080480ba}, expr=4[32]})
Symbolic@0x16d7cd0 insn@0x080480ba[1]: finishInstruction(mov    ebx, 0x00000004)
registers:
  eax    = {defs={0x080480b5}, expr=3[32]}
  ebx    = {defs={0x080480ba}, expr=4[32]}
  eip    = {defs={0x080480ba}, expr=0x080480bf[32]}
memory:

0x80480bf:add    eax, ebx
Symbolic@0x16d7cd0 insn@0x080480bf[2]: startInstruction(add    eax, ebx)
Symbolic@0x16d7cd0 insn@0x080480bf[2]: number_(32, 2) = {defs={0x080480bf}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: number_(32, 134512831) = {defs={0x080480bf}, expr=0x080480bf[32]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: add({defs={0x080480bf}, expr=0x080480bf[32]}, {defs={0x080480bf}, expr=2[32]}) = {defs={0x080480bf}, expr=0x080480c1[32]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: writeRegister(eip, {defs={0x080480bf}, expr=0x080480c1[32]})
Symbolic@0x16d7cd0 insn@0x080480bf[2]: boolean_(0) = {defs={0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: readRegister(ebx) = {defs={0x080480ba}, expr=4[32]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: readRegister(eax) = {defs={0x080480b5}, expr=3[32]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: addWithCarries({defs={0x080480b5}, expr=3[32]}, {defs={0x080480ba}, expr=4[32]}, {defs={0x080480bf}, expr=0[1]}) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[32]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: also returns: {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[32]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: extract({defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[32]}, 0, 8) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[8]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: extract({defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[8]}, 1, 2) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=1[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: extract({defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[8]}, 0, 1) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=1[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: xor_({defs={0x080480b5,0x080480ba,0x080480bf}, expr=1[1]}, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=1[1]}) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: extract({defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[8]}, 3, 4) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: extract({defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[8]}, 2, 3) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=1[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: xor_({defs={0x080480b5,0x080480ba,0x080480bf}, expr=1[1]}, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=1[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: extract({defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[8]}, 5, 6) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: extract({defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[8]}, 4, 5) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: xor_({defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: extract({defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[8]}, 7, 8) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: extract({defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[8]}, 6, 7) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: xor_({defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: xor_({defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=1[1]}) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=1[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: xor_({defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: xor_({defs={0x080480b5,0x080480ba,0x080480bf}, expr=1[1]}, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=1[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: invert({defs={0x080480b5,0x080480ba,0x080480bf}, expr=1[1]}) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: writeRegister(pf, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]})
Symbolic@0x16d7cd0 insn@0x080480bf[2]: extract({defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[32]}, 31, 32) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: writeRegister(sf, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]})
Symbolic@0x16d7cd0 insn@0x080480bf[2]: equalToZero({defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[32]}) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: writeRegister(zf, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]})
Symbolic@0x16d7cd0 insn@0x080480bf[2]: extract({defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[32]}, 31, 32) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: extract({defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[32]}, 30, 31) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: extract({defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[32]}, 3, 4) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: writeRegister(af, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]})
Symbolic@0x16d7cd0 insn@0x080480bf[2]: writeRegister(cf, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]})
Symbolic@0x16d7cd0 insn@0x080480bf[2]: xor_({defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}) = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480bf[2]: writeRegister(of, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]})
Symbolic@0x16d7cd0 insn@0x080480bf[2]: writeRegister(eax, {defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[32]})
Symbolic@0x16d7cd0 insn@0x080480bf[2]: finishInstruction(add    eax, ebx)
registers:
  eax    = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[32]}
  ebx    = {defs={0x080480ba}, expr=4[32]}
  eip    = {defs={0x080480bf}, expr=0x080480c1[32]}
  pf     = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
  sf     = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
  zf     = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
  af     = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
  cf     = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
  of     = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=0[1]}
memory:

0x80480c1:neg    ecx
Symbolic@0x16d7cd0 insn@0x080480c1[3]: startInstruction(neg    ecx)
Symbolic@0x16d7cd0 insn@0x080480c1[3]: number_(32, 2) = {defs={0x080480c1}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: number_(32, 134512833) = {defs={0x080480c1}, expr=0x080480c1[32]}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: add({defs={0x080480c1}, expr=0x080480c1[32]}, {defs={0x080480c1}, expr=2[32]}) = {defs={0x080480c1}, expr=0x080480c3[32]}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: writeRegister(eip, {defs={0x080480c1}, expr=0x080480c3[32]})
Symbolic@0x16d7cd0 insn@0x080480c1[3]: boolean_(0) = {defs={0x080480c1}, expr=0[1]}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: readRegister(ecx) = ecx_0[32]
Symbolic@0x16d7cd0 insn@0x080480c1[3]: invert(ecx_0[32]) = {defs={0x080480c1}, expr=(invert[32] ecx_0[32])}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: number_(32, 0) = {defs={0x080480c1}, expr=0[32]}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: invert({defs={0x080480c1}, expr=0[1]}) = {defs={0x080480c1}, expr=1[1]}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: addWithCarries({defs={0x080480c1}, expr=0[32]}, {defs={0x080480c1}, expr=(invert[32] ecx_0[32])}, {defs={0x080480c1}, expr=1[1]}) = {defs={0x080480c1}, expr=(add[32] (invert[32] ecx_0[32]) 1[32])}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: also returns: {defs={0x080480c1}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: extract({defs={0x080480c1}, expr=(add[32] (invert[32] ecx_0[32]) 1[32])}, 0, 8) = {defs={0x080480c1}, expr=(extract[8] 0[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: extract({defs={0x080480c1}, expr=(extract[8] 0[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}, 1, 2) = {defs={0x080480c1}, expr=(extract[1] 1[32] 2[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: extract({defs={0x080480c1}, expr=(extract[8] 0[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}, 0, 1) = {defs={0x080480c1}, expr=(extract[1] 0[32] 1[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: xor_({defs={0x080480c1}, expr=(extract[1] 0[32] 1[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}, {defs={0x080480c1}, expr=(extract[1] 1[32] 2[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}) = {defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 1[32] 2[32] (add[32] (invert[32] ecx_0[32]) 1[32])))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: extract({defs={0x080480c1}, expr=(extract[8] 0[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}, 3, 4) = {defs={0x080480c1}, expr=(extract[1] 3[32] 4[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: extract({defs={0x080480c1}, expr=(extract[8] 0[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}, 2, 3) = {defs={0x080480c1}, expr=(extract[1] 2[32] 3[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: xor_({defs={0x080480c1}, expr=(extract[1] 2[32] 3[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}, {defs={0x080480c1}, expr=(extract[1] 3[32] 4[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}) = {defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 2[32] 3[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 3[32] 4[32] (add[32] (invert[32] ecx_0[32]) 1[32])))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: extract({defs={0x080480c1}, expr=(extract[8] 0[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}, 5, 6) = {defs={0x080480c1}, expr=(extract[1] 5[32] 6[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: extract({defs={0x080480c1}, expr=(extract[8] 0[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}, 4, 5) = {defs={0x080480c1}, expr=(extract[1] 4[32] 5[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: xor_({defs={0x080480c1}, expr=(extract[1] 4[32] 5[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}, {defs={0x080480c1}, expr=(extract[1] 5[32] 6[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}) = {defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 5[32] 6[32] (add[32] (invert[32] ecx_0[32]) 1[32])))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: extract({defs={0x080480c1}, expr=(extract[8] 0[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}, 7, 8) = {defs={0x080480c1}, expr=(extract[1] 7[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: extract({defs={0x080480c1}, expr=(extract[8] 0[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}, 6, 7) = {defs={0x080480c1}, expr=(extract[1] 6[32] 7[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: xor_({defs={0x080480c1}, expr=(extract[1] 6[32] 7[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}, {defs={0x080480c1}, expr=(extract[1] 7[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}) = {defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 6[32] 7[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 7[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32])))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: xor_({defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 1[32] 2[32] (add[32] (invert[32] ecx_0[32]) 1[32])))}, {defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 2[32] 3[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 3[32] 4[32] (add[32] (invert[32] ecx_0[32]) 1[32])))}) = {defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 1[32] 2[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 2[32] 3[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 3[32] 4[32] (add[32] (invert[32] ecx_0[32]) 1[32])))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: xor_({defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 5[32] 6[32] (add[32] (invert[32] ecx_0[32]) 1[32])))}, {defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 6[32] 7[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 7[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32])))}) = {defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 5[32] 6[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 6[32] 7[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 7[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32])))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: xor_({defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 1[32] 2[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 2[32] 3[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 3[32] 4[32] (add[32] (invert[32] ecx_0[32]) 1[32])))}, {defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 4[32] 5[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 5[32] 6[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 6[32] 7[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 7[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32])))}) = {defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 1[32] 2[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 2[32] 3[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 3[32] 4[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 4[32] 5[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 5[32] 6[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 6[32] 7[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 7[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32])))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: invert({defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 1[32] 2[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 2[32] 3[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 3[32] 4[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 4[32] 5[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 5[32] 6[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 6[32] 7[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 7[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32])))}) = {defs={0x080480c1}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 1[32] 2[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 2[32] 3[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 3[32] 4[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 4[32] 5[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 5[32] 6[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 6[32] 7[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 7[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: writeRegister(pf, {defs={0x080480c1}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 1[32] 2[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 2[32] 3[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 3[32] 4[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 4[32] 5[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 5[32] 6[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 6[32] 7[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 7[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))))})
Symbolic@0x16d7cd0 insn@0x080480c1[3]: extract({defs={0x080480c1}, expr=(add[32] (invert[32] ecx_0[32]) 1[32])}, 31, 32) = {defs={0x080480c1}, expr=(extract[1] 31[32] 32[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: writeRegister(sf, {defs={0x080480c1}, expr=(extract[1] 31[32] 32[32] (add[32] (invert[32] ecx_0[32]) 1[32]))})
Symbolic@0x16d7cd0 insn@0x080480c1[3]: equalToZero({defs={0x080480c1}, expr=(add[32] (invert[32] ecx_0[32]) 1[32])}) = {defs={0x080480c1}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 1[32]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: writeRegister(zf, {defs={0x080480c1}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 1[32]))})
Symbolic@0x16d7cd0 insn@0x080480c1[3]: extract({defs={0x080480c1}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33]))}, 31, 32) = {defs={0x080480c1}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: extract({defs={0x080480c1}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33]))}, 30, 31) = {defs={0x080480c1}, expr=(extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: extract({defs={0x080480c1}, expr=(extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33]))}, 3, 4) = {defs={0x080480c1}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33]))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: invert({defs={0x080480c1}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33]))}) = {defs={0x080480c1}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: writeRegister(af, {defs={0x080480c1}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])))})
Symbolic@0x16d7cd0 insn@0x080480c1[3]: invert({defs={0x080480c1}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33]))}) = {defs={0x080480c1}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: writeRegister(cf, {defs={0x080480c1}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])))})
Symbolic@0x16d7cd0 insn@0x080480c1[3]: xor_({defs={0x080480c1}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33]))}, {defs={0x080480c1}, expr=(extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33]))}) = {defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])))}
Symbolic@0x16d7cd0 insn@0x080480c1[3]: writeRegister(of, {defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])))})
Symbolic@0x16d7cd0 insn@0x080480c1[3]: writeRegister(ecx, {defs={0x080480c1}, expr=(add[32] (invert[32] ecx_0[32]) 1[32])})
Symbolic@0x16d7cd0 insn@0x080480c1[3]: finishInstruction(neg    ecx)
registers:
  eax    = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[32]}
  ecx    = {defs={0x080480c1}, expr=(add[32] (invert[32] ecx_0[32]) 1[32])}
  ebx    = {defs={0x080480ba}, expr=4[32]}
  eip    = {defs={0x080480c1}, expr=0x080480c3[32]}
  pf     = {defs={0x080480c1}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 1[32] 2[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 2[32] 3[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 3[32] 4[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 4[32] 5[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 5[32] 6[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 6[32] 7[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 7[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))))}
  sf     = {defs={0x080480c1}, expr=(extract[1] 31[32] 32[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}
  zf     = {defs={0x080480c1}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 1[32]))}
  af     = {defs={0x080480c1}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])))}
  cf     = {defs={0x080480c1}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])))}
  of     = {defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])))}
memory:

0x80480c3:je     0x080480da<<Insn>>
Symbolic@0x16d7cd0 insn@0x080480c3[4]: startInstruction(je     0x080480da<<Insn>>)
Symbolic@0x16d7cd0 insn@0x080480c3[4]: number_(32, 2) = {defs={0x080480c3}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480c3[4]: number_(32, 134512835) = {defs={0x080480c3}, expr=0x080480c3[32]}
Symbolic@0x16d7cd0 insn@0x080480c3[4]: add({defs={0x080480c3}, expr=0x080480c3[32]}, {defs={0x080480c3}, expr=2[32]}) = {defs={0x080480c3}, expr=0x080480c5[32]}
Symbolic@0x16d7cd0 insn@0x080480c3[4]: writeRegister(eip, {defs={0x080480c3}, expr=0x080480c5[32]})
Symbolic@0x16d7cd0 insn@0x080480c3[4]: readRegister(zf) = {defs={0x080480c1}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 1[32]))}
Symbolic@0x16d7cd0 insn@0x080480c3[4]: readRegister(eip) = {defs={0x080480c3}, expr=0x080480c5[32]}
Symbolic@0x16d7cd0 insn@0x080480c3[4]: number_(32, 134512858) = {defs={0x080480c3}, expr=0x080480da[32]}
Symbolic@0x16d7cd0 insn@0x080480c3[4]: ite({defs={0x080480c1}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 1[32]))}, {defs={0x080480c3}, expr=0x080480da[32]}, {defs={0x080480c3}, expr=0x080480c5[32]}) = {defs={0x080480c1,0x080480c3}, expr=(ite[32] (zerop[1] (add[32] (invert[32] ecx_0[32]) 1[32])) 0x080480da[32] 0x080480c5[32])}
Symbolic@0x16d7cd0 insn@0x080480c3[4]: writeRegister(eip, {defs={0x080480c1,0x080480c3}, expr=(ite[32] (zerop[1] (add[32] (invert[32] ecx_0[32]) 1[32])) 0x080480da[32] 0x080480c5[32])})
Symbolic@0x16d7cd0 insn@0x080480c3[4]: finishInstruction(je     0x080480da<<Insn>>)
registers:
  eax    = {defs={0x080480b5,0x080480ba,0x080480bf}, expr=7[32]}
  ecx    = {defs={0x080480c1}, expr=(add[32] (invert[32] ecx_0[32]) 1[32])}
  ebx    = {defs={0x080480ba}, expr=4[32]}
  eip    = {defs={0x080480c1,0x080480c3}, expr=(ite[32] (zerop[1] (add[32] (invert[32] ecx_0[32]) 1[32])) 0x080480da[32] 0x080480c5[32])}
  pf     = {defs={0x080480c1}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 1[32] 2[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 2[32] 3[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 3[32] 4[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 4[32] 5[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 5[32] 6[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 6[32] 7[32] (add[32] (invert[32] ecx_0[32]) 1[32])) (extract[1] 7[32] 8[32] (add[32] (invert[32] ecx_0[32]) 1[32]))))}
  sf     = {defs={0x080480c1}, expr=(extract[1] 31[32] 32[32] (add[32] (invert[32] ecx_0[32]) 1[32]))}
  zf     = {defs={0x080480c1}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 1[32]))}
  af     = {defs={0x080480c1}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])))}
  cf     = {defs={0x080480c1}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])))}
  of     = {defs={0x080480c1}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) (add[33] (uextend[33] 33[32] (invert[32] ecx_0[32])) 1[33]) 0[33])))}
memory:
Symbolic@0x16d7cd0 insn@0x080480c3[4]: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80480c5:mov    eax, ebx
Symbolic@0x16d7cd0 insn@0x080480c5[0]: startInstruction(mov    eax, ebx)
Symbolic@0x16d7cd0 insn@0x080480c5[0]: number_(32, 2) = {defs={0x080480c5}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480c5[0]: number_(32, 134512837) = {defs={0x080480c5}, expr=0x080480c5[32]}
Symbolic@0x16d7cd0 insn@0x080480c5[0]: add({defs={0x080480c5}, expr=0x080480c5[32]}, {defs={0x080480c5}, expr=2[32]}) = {defs={0x080480c5}, expr=0x080480c7[32]}
Symbolic@0x16d7cd0 insn@0x080480c5[0]: writeRegister(eip, {defs={0x080480c5}, expr=0x080480c7[32]})
Symbolic@0x16d7cd0 insn@0x080480c5[0]: readRegister(ebx) = ebx_0[32]
Symbolic@0x16d7cd0 insn@0x080480c5[0]: writeRegister(eax, ebx_0[32])
Symbolic@0x16d7cd0 insn@0x080480c5[0]: finishInstruction(mov    eax, ebx)
registers:
  eax    = ebx_0[32]
  eip    = {defs={0x080480c5}, expr=0x080480c7[32]}
memory:

0x80480c7:mov    ah, bh
Symbolic@0x16d7cd0 insn@0x080480c7[1]: startInstruction(mov    ah, bh)
Symbolic@0x16d7cd0 insn@0x080480c7[1]: number_(32, 2) = {defs={0x080480c7}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480c7[1]: number_(32, 134512839) = {defs={0x080480c7}, expr=0x080480c7[32]}
Symbolic@0x16d7cd0 insn@0x080480c7[1]: add({defs={0x080480c7}, expr=0x080480c7[32]}, {defs={0x080480c7}, expr=2[32]}) = {defs={0x080480c7}, expr=0x080480c9[32]}
Symbolic@0x16d7cd0 insn@0x080480c7[1]: writeRegister(eip, {defs={0x080480c7}, expr=0x080480c9[32]})
Symbolic@0x16d7cd0 insn@0x080480c7[1]: readRegister(bh) = (extract[8] 8[32] 16[32] ebx_0[32])
Symbolic@0x16d7cd0 insn@0x080480c7[1]: writeRegister(ah, (extract[8] 8[32] 16[32] ebx_0[32]))
Symbolic@0x16d7cd0 insn@0x080480c7[1]: finishInstruction(mov    ah, bh)
registers:
  al        = (extract[8] 0[32] 8[32] ebx_0[32])
  REG0.0@16 = (extract[16] 16[32] 32[32] ebx_0[32])
  ah        = (extract[8] 8[32] 16[32] ebx_0[32])
  eip       = {defs={0x080480c7}, expr=0x080480c9[32]}
memory:

0x80480c9:mov    ah, bl
Symbolic@0x16d7cd0 insn@0x080480c9[2]: startInstruction(mov    ah, bl)
Symbolic@0x16d7cd0 insn@0x080480c9[2]: number_(32, 2) = {defs={0x080480c9}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480c9[2]: number_(32, 134512841) = {defs={0x080480c9}, expr=0x080480c9[32]}
Symbolic@0x16d7cd0 insn@0x080480c9[2]: add({defs={0x080480c9}, expr=0x080480c9[32]}, {defs={0x080480c9}, expr=2[32]}) = {defs={0x080480c9}, expr=0x080480cb[32]}
Symbolic@0x16d7cd0 insn@0x080480c9[2]: writeRegister(eip, {defs={0x080480c9}, expr=0x080480cb[32]})
Symbolic@0x16d7cd0 insn@0x080480c9[2]: readRegister(bl) = (extract[8] 0[32] 8[32] ebx_0[32])
Symbolic@0x16d7cd0 insn@0x080480c9[2]: writeRegister(ah, (extract[8] 0[32] 8[32] ebx_0[32]))
Symbolic@0x16d7cd0 insn@0x080480c9[2]: finishInstruction(mov    ah, bl)
registers:
  al        = (extract[8] 0[32] 8[32] ebx_0[32])
  REG0.0@16 = (extract[16] 16[32] 32[32] ebx_0[32])
  ah        = (extract[8] 0[32] 8[32] ebx_0[32])
  eip       = {defs={0x080480c9}, expr=0x080480cb[32]}
memory:

0x80480cb:mov    ax, cx
Symbolic@0x16d7cd0 insn@0x080480cb[3]: startInstruction(mov    ax, cx)
Symbolic@0x16d7cd0 insn@0x080480cb[3]: number_(32, 3) = {defs={0x080480cb}, expr=3[32]}
Symbolic@0x16d7cd0 insn@0x080480cb[3]: number_(32, 134512843) = {defs={0x080480cb}, expr=0x080480cb[32]}
Symbolic@0x16d7cd0 insn@0x080480cb[3]: add({defs={0x080480cb}, expr=0x080480cb[32]}, {defs={0x080480cb}, expr=3[32]}) = {defs={0x080480cb}, expr=0x080480ce[32]}
Symbolic@0x16d7cd0 insn@0x080480cb[3]: writeRegister(eip, {defs={0x080480cb}, expr=0x080480ce[32]})
Symbolic@0x16d7cd0 insn@0x080480cb[3]: readRegister(cx) = cx_0[16]
Symbolic@0x16d7cd0 insn@0x080480cb[3]: writeRegister(ax, cx_0[16])
Symbolic@0x16d7cd0 insn@0x080480cb[3]: finishInstruction(mov    ax, cx)
registers:
  REG0.0@16 = (extract[16] 16[32] 32[32] ebx_0[32])
  ax        = cx_0[16]
  eip       = {defs={0x080480cb}, expr=0x080480ce[32]}
memory:

0x80480ce:mov    eax, ebx
Symbolic@0x16d7cd0 insn@0x080480ce[4]: startInstruction(mov    eax, ebx)
Symbolic@0x16d7cd0 insn@0x080480ce[4]: number_(32, 2) = {defs={0x080480ce}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480ce[4]: number_(32, 134512846) = {defs={0x080480ce}, expr=0x080480ce[32]}
Symbolic@0x16d7cd0 insn@0x080480ce[4]: add({defs={0x080480ce}, expr=0x080480ce[32]}, {defs={0x080480ce}, expr=2[32]}) = {defs={0x080480ce}, expr=0x080480d0[32]}
Symbolic@0x16d7cd0 insn@0x080480ce[4]: writeRegister(eip, {defs={0x080480ce}, expr=0x080480d0[32]})
Symbolic@0x16d7cd0 insn@0x080480ce[4]: readRegister(ebx) = ebx_0[32]
Symbolic@0x16d7cd0 insn@0x080480ce[4]: writeRegister(eax, ebx_0[32])
Symbolic@0x16d7cd0 insn@0x080480ce[4]: finishInstruction(mov    eax, ebx)
registers:
  eax    = ebx_0[32]
  eip    = {defs={0x080480ce}, expr=0x080480d0[32]}
memory:

0x80480d0:je     0x080480da<<Insn>>
Symbolic@0x16d7cd0 insn@0x080480d0[5]: startInstruction(je     0x080480da<<Insn>>)
Symbolic@0x16d7cd0 insn@0x080480d0[5]: number_(32, 2) = {defs={0x080480d0}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480d0[5]: number_(32, 134512848) = {defs={0x080480d0}, expr=0x080480d0[32]}
Symbolic@0x16d7cd0 insn@0x080480d0[5]: add({defs={0x080480d0}, expr=0x080480d0[32]}, {defs={0x080480d0}, expr=2[32]}) = {defs={0x080480d0}, expr=0x080480d2[32]}
Symbolic@0x16d7cd0 insn@0x080480d0[5]: writeRegister(eip, {defs={0x080480d0}, expr=0x080480d2[32]})
Symbolic@0x16d7cd0 insn@0x080480d0[5]: readRegister(zf) = zf_0[1]
Symbolic@0x16d7cd0 insn@0x080480d0[5]: readRegister(eip) = {defs={0x080480d0}, expr=0x080480d2[32]}
Symbolic@0x16d7cd0 insn@0x080480d0[5]: number_(32, 134512858) = {defs={0x080480d0}, expr=0x080480da[32]}
Symbolic@0x16d7cd0 insn@0x080480d0[5]: ite(zf_0[1], {defs={0x080480d0}, expr=0x080480da[32]}, {defs={0x080480d0}, expr=0x080480d2[32]}) = {defs={0x080480d0}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480d2[32])}
Symbolic@0x16d7cd0 insn@0x080480d0[5]: writeRegister(eip, {defs={0x080480d0}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480d2[32])})
Symbolic@0x16d7cd0 insn@0x080480d0[5]: finishInstruction(je     0x080480da<<Insn>>)
registers:
  eax    = ebx_0[32]
  eip    = {defs={0x080480d0}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480d2[32])}
memory:
Symbolic@0x16d7cd0 insn@0x080480d0[5]: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80480d2:mov    DWORD PTR ds:[eax], ebx
Symbolic@0x16d7cd0 insn@0x080480d2[0]: startInstruction(mov    DWORD PTR ds:[eax], ebx)
Symbolic@0x16d7cd0 insn@0x080480d2[0]: number_(32, 2) = {defs={0x080480d2}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480d2[0]: number_(32, 134512850) = {defs={0x080480d2}, expr=0x080480d2[32]}
Symbolic@0x16d7cd0 insn@0x080480d2[0]: add({defs={0x080480d2}, expr=0x080480d2[32]}, {defs={0x080480d2}, expr=2[32]}) = {defs={0x080480d2}, expr=0x080480d4[32]}
Symbolic@0x16d7cd0 insn@0x080480d2[0]: writeRegister(eip, {defs={0x080480d2}, expr=0x080480d4[32]})
Symbolic@0x16d7cd0 insn@0x080480d2[0]: readRegister(ebx) = ebx_0[32]
Symbolic@0x16d7cd0 insn@0x080480d2[0]: readRegister(eax) = eax_0[32]
Symbolic@0x16d7cd0 insn@0x080480d2[0]: boolean_(1) = {defs={0x080480d2}, expr=1[1]}
Symbolic@0x16d7cd0 insn@0x080480d2[0]: writeMemory(ds, eax_0[32], ebx_0[32], {defs={0x080480d2}, expr=1[1]})
Symbolic@0x16d7cd0 insn@0x080480d2[0]: finishInstruction(mov    DWORD PTR ds:[eax], ebx)
registers:
  eip    = {defs={0x080480d2}, expr=0x080480d4[32]}
memory:
  addr=(add[32] eax_0[32] 3[32]) value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr=(add[32] eax_0[32] 2[32]) value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr=(add[32] eax_0[32] 1[32]) value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr=eax_0[32] value=(extract[8] 0[32] 8[32] ebx_0[32])

0x80480d4:je     0x080480da<<Insn>>
Symbolic@0x16d7cd0 insn@0x080480d4[1]: startInstruction(je     0x080480da<<Insn>>)
Symbolic@0x16d7cd0 insn@0x080480d4[1]: number_(32, 2) = {defs={0x080480d4}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480d4[1]: number_(32, 134512852) = {defs={0x080480d4}, expr=0x080480d4[32]}
Symbolic@0x16d7cd0 insn@0x080480d4[1]: add({defs={0x080480d4}, expr=0x080480d4[32]}, {defs={0x080480d4}, expr=2[32]}) = {defs={0x080480d4}, expr=0x080480d6[32]}
Symbolic@0x16d7cd0 insn@0x080480d4[1]: writeRegister(eip, {defs={0x080480d4}, expr=0x080480d6[32]})
Symbolic@0x16d7cd0 insn@0x080480d4[1]: readRegister(zf) = zf_0[1]
Symbolic@0x16d7cd0 insn@0x080480d4[1]: readRegister(eip) = {defs={0x080480d4}, expr=0x080480d6[32]}
Symbolic@0x16d7cd0 insn@0x080480d4[1]: number_(32, 134512858) = {defs={0x080480d4}, expr=0x080480da[32]}
Symbolic@0x16d7cd0 insn@0x080480d4[1]: ite(zf_0[1], {defs={0x080480d4}, expr=0x080480da[32]}, {defs={0x080480d4}, expr=0x080480d6[32]}) = {defs={0x080480d4}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480d6[32])}
Symbolic@0x16d7cd0 insn@0x080480d4[1]: writeRegister(eip, {defs={0x080480d4}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480d6[32])})
Symbolic@0x16d7cd0 insn@0x080480d4[1]: finishInstruction(je     0x080480da<<Insn>>)
registers:
  eip    = {defs={0x080480d4}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480d6[32])}
memory:
  addr=(add[32] eax_0[32] 3[32]) value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr=(add[32] eax_0[32] 2[32]) value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr=(add[32] eax_0[32] 1[32]) value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr=eax_0[32] value=(extract[8] 0[32] 8[32] ebx_0[32])
Symbolic@0x16d7cd0 insn@0x080480d4[1]: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80480d6:mov    eax, DWORD PTR ds:[ebx]
Symbolic@0x16d7cd0 insn@0x080480d6[0]: startInstruction(mov    eax, DWORD PTR ds:[ebx])
Symbolic@0x16d7cd0 insn@0x080480d6[0]: number_(32, 2) = {defs={0x080480d6}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480d6[0]: number_(32, 134512854) = {defs={0x080480d6}, expr=0x080480d6[32]}
Symbolic@0x16d7cd0 insn@0x080480d6[0]: add({defs={0x080480d6}, expr=0x080480d6[32]}, {defs={0x080480d6}, expr=2[32]}) = {defs={0x080480d6}, expr=0x080480d8[32]}
Symbolic@0x16d7cd0 insn@0x080480d6[0]: writeRegister(eip, {defs={0x080480d6}, expr=0x080480d8[32]})
Symbolic@0x16d7cd0 insn@0x080480d6[0]: readRegister(ebx) = ebx_0[32]
Symbolic@0x16d7cd0 insn@0x080480d6[0]: boolean_(1) = {defs={0x080480d6}, expr=1[1]}
Symbolic@0x16d7cd0 insn@0x080480d6[0]: readMemory(ds, ebx_0[32], {defs={0x080480d6}, expr=1[1]}, 32) = v7946[32]
Symbolic@0x16d7cd0 insn@0x080480d6[0]: writeRegister(eax, v7946[32])
Symbolic@0x16d7cd0 insn@0x080480d6[0]: finishInstruction(mov    eax, DWORD PTR ds:[ebx])
registers:
  eax    = v7946[32]
  eip    = {defs={0x080480d6}, expr=0x080480d8[32]}
memory:
  addr=(add[32] ebx_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v7946[32])
  addr=(add[32] ebx_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v7946[32])
  addr=(add[32] ebx_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v7946[32])
  addr=ebx_0[32] value=(extract[8] 0[32] 8[32] v7946[32])

0x80480d8:je     0x080480da<<Insn>>
Symbolic@0x16d7cd0 insn@0x080480d8[1]: startInstruction(je     0x080480da<<Insn>>)
Symbolic@0x16d7cd0 insn@0x080480d8[1]: number_(32, 2) = {defs={0x080480d8}, expr=2[32]}
Symbolic@0x16d7cd0 insn@0x080480d8[1]: number_(32, 134512856) = {defs={0x080480d8}, expr=0x080480d8[32]}
Symbolic@0x16d7cd0 insn@0x080480d8[1]: add({defs={0x080480d8}, expr=0x080480d8[32]}, {defs={0x080480d8}, expr=2[32]}) = {defs={0x080480d8}, expr=0x080480da[32]}
Symbolic@0x16d7cd0 insn@0x080480d8[1]: writeRegister(eip, {defs={0x080480d8}, expr=0x080480da[32]})
Symbolic@0x16d7cd0 insn@0x080480d8[1]: readRegister(zf) = zf_0[1]
Symbolic@0x16d7cd0 insn@0x080480d8[1]: readRegister(eip) = {defs={0x080480d8}, expr=0x080480da[32]}
Symbolic@0x16d7cd0 insn@0x080480d8[1]: number_(32, 134512858) = {defs={0x080480d8}, expr=0x080480da[32]}
Symbolic@0x16d7cd0 insn@0x080480d8[1]: ite(zf_0[1], {defs={0x080480d8}, expr=0x080480da[32]}, {defs={0x080480d8}, expr=0x080480da[32]}) = {defs={0x080480d8}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480da[32])}
Symbolic@0x16d7cd0 insn@0x080480d8[1]: writeRegister(eip, {defs={0x080480d8}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480da[32])})
Symbolic@0x16d7cd0 insn@0x080480d8[1]: finishInstruction(je     0x080480da<<Insn>>)
registers:
  eax    = v7946[32]
  eip    = {defs={0x080480d8}, expr=(ite[32] zf_0[1] 0x080480da[32] 0x080480da[32])}
memory:
  addr=(add[32] ebx_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v7946[32])
  addr=(add[32] ebx_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v7946[32])
  addr=(add[32] ebx_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v7946[32])
  addr=ebx_0[32] value=(extract[8] 0[32] 8[32] v7946[32])
Symbolic@0x16d7cd0 insn@0x080480d8[1]: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80480da:hlt    
Symbolic@0x16d7cd0 insn@0x080480da[0]: startInstruction(hlt)
Symbolic@0x16d7cd0 insn@0x080480da[0]: number_(32, 1) = {defs={0x080480da}, expr=1[32]}
Symbolic@0x16d7cd0 insn@0x080480da[0]: number_(32, 134512858) = {defs={0x080480da}, expr=0x080480da[32]}
Symbolic@0x16d7cd0 insn@0x080480da[0]: add({defs={0x080480da}, expr=0x080480da[32]}, {defs={0x080480da}, expr=1[32]}) = {defs={0x080480da}, expr=0x080480db[32]}
Symbolic@0x16d7cd0 insn@0x080480da[0]: writeRegister(eip, {defs={0x080480da}, expr=0x080480db[32]})
Symbolic@0x16d7cd0 insn@0x080480da[0]: hlt()
Symbolic@0x16d7cd0 insn@0x080480da[0]: number_(32, 134512858) = {defs={0x080480da}, expr=0x080480da[32]}
Symbolic@0x16d7cd0 insn@0x080480da[0]: writeRegister(eip, {defs={0x080480da}, expr=0x080480da[32]})
Symbolic@0x16d7cd0 insn@0x080480da[0]: finishInstruction(hlt)
registers:
  eip    = {defs={0x080480da}, expr=0x080480da[32]}
memory:
Symbolic@0x16d7cd0 insn@0x080480da[0]: operators destroyed
analyzed headers: 1
