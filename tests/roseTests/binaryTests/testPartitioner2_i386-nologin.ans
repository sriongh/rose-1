/* Interpretation ELF */
0x080480c4: ================================== Function (pattern, graph) unknown name

0x080480c4: Basic block reasons: entry point, CFG head
0x080480c4: c8 00 00 00             |....    |          enter  0x0000, 0x00
0x080480c8: c8 00 00 00             |....    |          enter  0x0000, 0x00
0x080480cc: 06                      |.       |          push   es
0x080480cd: 00 00                   |..      |          add    byte ds:[eax], al
0x080480cf: 00 04 00                |...     |          add    byte ds:[eax + eax], al
0x080480d2: 00 00                   |..      |          add    byte ds:[eax], al
0x080480d4: 04 00                   |..      |          add    al, 0x00
0x080480d6: 00 00                   |..      |          add    byte ds:[eax], al
0x080480d8: 28 01                   |(.      |          sub    byte ds:[ecx], al
0x080480da: 00 00                   |..      |          add    byte ds:[eax], al
0x080480dc: 28 81 04 08 28 81       |(...(.  |          sub    byte ds:[ecx + 0x81280804], al
0x080480e2: 04 08                   |..      |          add    al, 0x08
0x080480e4: 20 00                   | .      |          and    byte ds:[eax], al
0x080480e6: 00 00                   |..      |          add    byte ds:[eax], al
0x080480e8: 20 00                   | .      |          and    byte ds:[eax], al
0x080480ea: 00 00                   |..      |          add    byte ds:[eax], al
0x080480ec: 04 00                   |..      |          add    al, 0x00
0x080480ee: 00 00                   |..      |          add    byte ds:[eax], al
0x080480f0: 04 00                   |..      |          add    al, 0x00
0x080480f2: 00 00                   |..      |          add    byte ds:[eax], al
0x080480f4: 51                      |Q       |          push   ecx
0x080480f5: e5 74                   |.t      |          in     eax, 0x74
0x080480f7: 64 00 00                |d..     |          add    byte fs:[eax], al
0x080480fa: 00 00                   |..      |          add    byte ds:[eax], al
0x080480fc: 00 00                   |..      |          add    byte ds:[eax], al
0x080480fe: 00 00                   |..      |          add    byte ds:[eax], al
0x08048100: 00 00                   |..      |          add    byte ds:[eax], al
0x08048102: 00 00                   |..      |          add    byte ds:[eax], al
0x08048104: 00 00                   |..      |          add    byte ds:[eax], al
0x08048106: 00 00                   |..      |          add    byte ds:[eax], al
0x08048108: 00 00                   |..      |          add    byte ds:[eax], al
0x0804810a: 00 00                   |..      |          add    byte ds:[eax], al
0x0804810c: 06                      |.       |          push   es
0x0804810d: 00 00                   |..      |          add    byte ds:[eax], al
0x0804810f: 00 04 00                |...     |          add    byte ds:[eax + eax], al
0x08048112: 00 00                   |..      |          add    byte ds:[eax], al
0x08048112: Successor blocks: 0x08048114

0x08048304: ================================== Function (function call, pattern, graph) unknown name
0x08048304: Function stack delta: +4

0x08048304: Basic block reasons: entry point
0x08048304: 55                      |U       |<sp+0 >   push   ebp
0x08048305: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
0x08048307: 83 ec 08                |...     |<sp-4 >   sub    esp, 0x08
0x0804830a: e8 a5 00 00 00          |.....   |<sp-12>   call   0x080483b4<<Func>>
0x0804830a: Outgoing stack delta: -16
0x0804830a: Successor blocks: 0x080483b4, 0x0804830f

0x0804830f: Basic block reasons: 
0x0804830f: e8 f8 00 00 00          |.....   |<sp-12>   call   0x0804840c<<Func>>
0x0804830f: Outgoing stack delta: -16
0x0804830f: Successor blocks: 0x0804840c, 0x08048314

0x08048314: Basic block reasons: 
0x08048314: e8 53 02 00 00          |.S...   |<sp-12>   call   0x0804856c<<Func>>
0x08048314: Outgoing stack delta: -16
0x08048314: Successor blocks: 0x0804856c, 0x08048319

0x08048319: Basic block reasons: 
0x08048319: c9                      |.       |<sp-12>   leave  
0x0804831a: c3                      |.       |<sp+0 >   ret    
0x0804831a: Outgoing stack delta: +4
0x0804831a: Successor blocks: unknown

0x0804831c: ================================== Function (import, graph) <DYNAMIC_LINKER_TRAMPOLINE>

0x0804831c: Basic block reasons: entry point, CFG head
0x0804831c: ff 35 dc 96 04 08       |.5....  |          push   dword ds:[0x080496dc<.got.plt+4>]
0x08048322: ff 25 e0 96 04 08       |.%....  |          jmp    dword ds:[0x080496e0<.got.plt+8>]
0x08048322: Successor blocks: unknown

0x0804832c: ================================== Function (function call, import, graph) <write@plt>

0x0804832c: Basic block reasons: entry point
0x0804832c: ff 25 e4 96 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x080496e4<.got.plt+0x0c>]
0x0804832c: Outgoing stack delta: +0
0x0804832c: Successor blocks: unknown

0x0804833c: ================================== Function (function call, import, graph) <close@plt>

0x0804833c: Basic block reasons: entry point
0x0804833c: ff 25 e8 96 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x080496e8<.got.plt+0x10>]
0x0804833c: Outgoing stack delta: +0
0x0804833c: Successor blocks: unknown

0x0804834c: ================================== Function (function call, import, graph) <__libc_start_main@plt>

0x0804834c: Basic block reasons: entry point
0x0804834c: ff 25 ec 96 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x080496ec<.got.plt+0x14>]
0x0804834c: Outgoing stack delta: +0
0x0804834c: Successor blocks: unknown

0x0804835c: ================================== Function (function call, import, graph) <open@plt>

0x0804835c: Basic block reasons: entry point
0x0804835c: ff 25 f0 96 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x080496f0<.got.plt+0x18>]
0x0804835c: Outgoing stack delta: +0
0x0804835c: Successor blocks: unknown

0x0804836c: ================================== Function (function call, import, graph) <exit@plt>
0x0804836c: Function does not return to caller.

0x0804836c: Basic block reasons: entry point
0x0804836c: ff 25 f4 96 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x080496f4<.got.plt+0x1c>]
0x0804836c: Outgoing stack delta: +0
0x0804836c: Successor blocks: unknown

0x0804837c: ================================== Function (function call, import, graph) <read@plt>

0x0804837c: Basic block reasons: entry point
0x0804837c: ff 25 f8 96 04 08       |.%....  |<sp+0 >   jmp    dword ds:[0x080496f8<.got.plt+0x20>]
0x0804837c: Outgoing stack delta: +0
0x0804837c: Successor blocks: unknown

0x08048390: ================================== Function (entry point, graph) <_start>
0x08048390: Function does not return to caller.

0x08048390: Basic block reasons: entry point, CFG head
0x08048390: 31 ed                   |1.      |<sp+0 >   xor    ebp, ebp
0x08048392: 5e                      |^       |<sp+0 >   pop    esi
0x08048393: 89 e1                   |..      |<sp+4 >   mov    ecx, esp
0x08048395: 83 e4 f0                |...     |<sp+4 >   and    esp, 0xf0<-16>
0x08048398: 50                      |P       |<sp+0 >   push   eax
0x08048399: 54                      |T       |<sp-4 >   push   esp
0x0804839a: 52                      |R       |<sp-8 >   push   edx
0x0804839b: 68 28 85 04 08          |h(...   |<sp-12>   push   0x08048528<<Func>>
0x080483a0: 68 d4 84 04 08          |h....   |<sp-16>   push   0x080484d4<<Func>>
0x080483a5: 51                      |Q       |<sp-20>   push   ecx
0x080483a6: 56                      |V       |<sp-24>   push   esi
0x080483a7: 68 40 84 04 08          |h@...   |<sp-28>   push   0x08048440<<Func>>
0x080483ac: e8 9b ff ff ff          |.....   |<sp-32>   call   0x0804834c<__libc_start_main@plt>
0x080483ac: Outgoing stack delta: -36
0x080483ac: Successor blocks: 0x0804834c, 0x080483b1

0x080483b1: Basic block reasons: 
0x080483b1: f4                      |.       |<sp-32>   hlt    
0x080483b1: Outgoing stack delta: -32
0x080483b1: Successor blocks: none

0x080483b4: ================================== Function (function call, graph) unknown name
0x080483b4: Function stack delta: +4

0x080483b4: Basic block reasons: entry point
0x080483b4: 55                      |U       |<sp+0 >   push   ebp
0x080483b5: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
0x080483b7: 53                      |S       |<sp-4 >   push   ebx
0x080483b8: e8 00 00 00 00          |.....   |<sp-8 >   call   0x080483bd<<Func>>
0x080483b8: Outgoing stack delta: -12
0x080483b8: Successor blocks: 0x080483bd, 0x080483bd

0x080483bd: ================================== Function (function call, graph) unknown name

0x080483bd: Basic block reasons: entry point
0x080483bd: 5b                      |[       |<sp-8 >   pop    ebx
0x080483be: 81 c3 1b 13 00 00       |......  |<sp-4 >   add    ebx, 0x0000131b<4891>
0x080483c4: 52                      |R       |<sp-4 >   push   edx
0x080483c5: 8b 83 fc ff ff ff       |......  |<sp-8 >   mov    eax, dword ds:[ebx + 0xfffffffc<-4>]
0x080483cb: 85 c0                   |..      |<sp-8 >   test   eax, eax
0x080483cd: 74 02                   |t.      |<sp-8 >   je     0x080483d1<<BBlock>>
0x080483cd: Outgoing stack delta: -8
0x080483cd: Successor blocks: 0x080483cf, 0x080483d1

0x080483cf: Basic block reasons: 
0x080483cf: ff d0                   |..      |<sp-8 >   call   eax
0x080483cf: Outgoing stack delta: -12
0x080483cf: Successor blocks: 0x080483d1, unknown

0x080483d1: Basic block reasons: 
0x080483d1: 58                      |X       |<sp-8 >   pop    eax
0x080483d2: 5b                      |[       |<sp-4 >   pop    ebx
0x080483d3: c9                      |.       |<sp+0 >   leave  
0x080483d4: c3                      |.       |<sp+0 >   ret    
0x080483d4: Outgoing stack delta: +4
0x080483d4: Successor blocks: unknown

0x080483d8: ================================== Function (function call, pattern, graph) unknown name
0x080483d8: Function stack delta: +4

0x080483d8: Basic block reasons: entry point
0x080483d8: 55                      |U       |<sp+0 >   push   ebp
0x080483d9: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
0x080483db: 83 ec 08                |...     |<sp-4 >   sub    esp, 0x08
0x080483de: 80 3d 08 97 04 08 00    |.=..... |<sp-12>   cmp    byte ds:[0x08049708<.bss>], 0x00
0x080483e5: 74 0f                   |t.      |<sp-12>   je     0x080483f6<<BBlock>>
0x080483e5: Outgoing stack delta: -12
0x080483e5: Successor blocks: 0x080483e7, 0x080483f6

0x080483e7: Basic block reasons: 
0x080483e7: eb 1f                   |..      |<sp-12>   jmp    0x08048408<<BBlock>>
0x080483e7: Outgoing stack delta: -12
0x080483e7: Successor blocks: 0x08048408

0x080483e9: Basic block reasons: CFG head
0x080483e9: 8d 76 00                |.v.     |          lea    esi, [esi + 0x00]
0x080483e9: Successor blocks: 0x080483ec

0x080483ec: Basic block reasons: 
0x080483ec: 83 c0 04                |...     |<sp-12>   add    eax, 0x04
0x080483ef: a3 04 97 04 08          |.....   |<sp-12>   mov    dword ds:[0x08049704<.data+8>], eax
0x080483f4: ff d2                   |..      |<sp-12>   call   edx
0x080483f4: Outgoing stack delta: -16
0x080483f4: Successor blocks: 0x080483f6, unknown

0x080483f6: Basic block reasons: 
0x080483f6: a1 04 97 04 08          |.....   |<sp-12>   mov    eax, dword ds:[0x08049704<.data+8>]
0x080483fb: 8b 10                   |..      |<sp-12>   mov    edx, dword ds:[eax]
0x080483fd: 85 d2                   |..      |<sp-12>   test   edx, edx
0x080483ff: 75 eb                   |u.      |<sp-12>   jne    0x080483ec<<BBlock>>
0x080483ff: Outgoing stack delta: -12
0x080483ff: Successor blocks: 0x080483ec, 0x08048401

0x08048401: Basic block reasons: 
0x08048401: c6 05 08 97 04 08 01    |....... |<sp-12>   mov    byte ds:[0x08049708<.bss>], 0x01
0x08048401: Outgoing stack delta: -12
0x08048401: Successor blocks: 0x08048408

0x08048408: Basic block reasons: 
0x08048408: c9                      |.       |<sp-12>   leave  
0x08048409: c3                      |.       |<sp+0 >   ret    
0x08048409: Outgoing stack delta: +4
0x08048409: Successor blocks: unknown

0x0804840c: ================================== Function (function call, graph) unknown name
0x0804840c: Function stack delta: +4

0x0804840c: Basic block reasons: entry point
0x0804840c: 55                      |U       |<sp+0 >   push   ebp
0x0804840d: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
0x0804840f: 83 ec 08                |...     |<sp-4 >   sub    esp, 0x08
0x08048412: a1 08 96 04 08          |.....   |<sp-12>   mov    eax, dword ds:[0x08049608<.jcr>]
0x08048417: 85 c0                   |..      |<sp-12>   test   eax, eax
0x08048419: 74 19                   |t.      |<sp-12>   je     0x08048434<<BBlock>>
0x08048419: Outgoing stack delta: -12
0x08048419: Successor blocks: 0x0804841b, 0x08048434

0x0804841b: Basic block reasons: 
0x0804841b: b8 00 00 00 00          |.....   |<sp-12>   mov    eax, 0x00000000
0x08048420: 85 c0                   |..      |<sp-12>   test   eax, eax
0x08048422: 74 10                   |t.      |<sp-12>   je     0x08048434<<BBlock>>
0x08048422: Outgoing stack delta: -12
0x08048422: Successor blocks: 0x08048424, 0x08048434

0x08048424: Basic block reasons: 
0x08048424: 83 ec 0c                |...     |<sp-12>   sub    esp, 0x0c
0x08048427: 68 08 96 04 08          |h....   |<sp-24>   push   0x08049608<.jcr>
0x0804842c: ff d0                   |..      |<sp-28>   call   eax
0x0804842c: Outgoing stack delta: -32
0x0804842c: Successor blocks: 0x0804842e, unknown

0x0804842e: Basic block reasons: 
0x0804842e: 83 c4 10                |...     |<sp-28>   add    esp, 0x10
0x08048431: 8d 76 00                |.v.     |<sp-12>   lea    esi, [esi + 0x00]
0x08048431: Outgoing stack delta: -12
0x08048431: Successor blocks: 0x08048434

0x08048434: Basic block reasons: 
0x08048434: c9                      |.       |<sp-12>   leave  
0x08048435: c3                      |.       |<sp+0 >   ret    
0x08048435: Outgoing stack delta: +4
0x08048435: Successor blocks: unknown

0x08048440: ================================== Function (pattern, graph) unknown name

0x08048440: Basic block reasons: entry point, CFG head
0x08048440: 55                      |U       |<sp+0 >   push   ebp
0x08048441: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
0x08048443: 56                      |V       |<sp-4 >   push   esi
0x08048444: 53                      |S       |<sp-8 >   push   ebx
0x08048445: 81 ec 90 00 00 00       |......  |<sp-12>   sub    esp, 0x00000090
0x0804844b: 83 e4 f0                |...     |<sp-156>   and    esp, 0xf0<-16>
0x0804844e: 83 ec 10                |...     |<sp-160>   sub    esp, 0x10
0x08048451: c7 44 24 04 00 00 00 00 |.D$.....|<sp-176>   mov    dword ss:[esp + 0x04], 0x00000000
0x08048459: c7 04 24 b4 85 04 08    |..$.... |<sp-176>   mov    dword ss:[esp], 0x080485b4<"/etc/nologin.txt">
0x08048460: e8 f7 fe ff ff          |.....   |<sp-176>   call   0x0804835c<open@plt>
0x08048460: Outgoing stack delta: -180
0x08048460: Successor blocks: 0x0804835c, 0x08048465

0x08048465: Basic block reasons: 
0x08048465: 85 c0                   |..      |<sp-176>   test   eax, eax
0x08048467: 89 c3                   |..      |<sp-176>   mov    ebx, eax
0x08048469: 79 28                   |y(      |<sp-176>   jns    0x08048493<<BBlock>>
0x08048469: Outgoing stack delta: -176
0x08048469: Successor blocks: 0x0804846b, 0x08048493

0x0804846b: Basic block reasons: 
0x0804846b: c7 44 24 08 29 00 00 00 |.D$.)...|<sp-176>   mov    dword ss:[esp + 0x08], 0x00000029
0x08048473: c7 44 24 04 c8 85 04 08 |.D$.....|<sp-176>   mov    dword ss:[esp + 0x04], 0x080485c8<"This account is currently"+16 more>
0x0804847b: c7 04 24 01 00 00 00    |..$.... |<sp-176>   mov    dword ss:[esp], 0x00000001
0x08048482: e8 a5 fe ff ff          |.....   |<sp-176>   call   0x0804832c<write@plt>
0x08048482: Outgoing stack delta: -180
0x08048482: Successor blocks: 0x0804832c, 0x08048487

0x08048487: Basic block reasons: 
0x08048487: c7 04 24 01 00 00 00    |..$.... |<sp-176>   mov    dword ss:[esp], 0x00000001
0x0804848e: e8 d9 fe ff ff          |.....   |<sp-176>   call   0x0804836c<exit@plt>
0x0804848e: Outgoing stack delta: -180
0x0804848e: Successor blocks: 0x0804836c

0x08048493: Basic block reasons: 
0x08048493: 8d b5 78 ff ff ff       |..x...  |<sp-176>   lea    esi, [ebp + 0xffffff78<-136>]
0x08048499: eb 14                   |..      |<sp-176>   jmp    0x080484af<<BBlock>>
0x08048499: Outgoing stack delta: -176
0x08048499: Successor blocks: 0x080484af

0x0804849b: Basic block reasons: 
0x0804849b: 89 44 24 08             |.D$.    |<sp-176>   mov    dword ss:[esp + 0x08], eax
0x0804849f: 89 74 24 04             |.t$.    |<sp-176>   mov    dword ss:[esp + 0x04], esi
0x080484a3: c7 04 24 01 00 00 00    |..$.... |<sp-176>   mov    dword ss:[esp], 0x00000001
0x080484aa: e8 7d fe ff ff          |.}...   |<sp-176>   call   0x0804832c<write@plt>
0x080484aa: Outgoing stack delta: -180
0x080484aa: Successor blocks: 0x0804832c, 0x080484af

0x080484af: Basic block reasons: 
0x080484af: c7 44 24 08 80 00 00 00 |.D$.....|<sp-176>   mov    dword ss:[esp + 0x08], 0x00000080
0x080484b7: 89 74 24 04             |.t$.    |<sp-176>   mov    dword ss:[esp + 0x04], esi
0x080484bb: 89 1c 24                |..$     |<sp-176>   mov    dword ss:[esp], ebx
0x080484be: e8 b9 fe ff ff          |.....   |<sp-176>   call   0x0804837c<read@plt>
0x080484be: Outgoing stack delta: -180
0x080484be: Successor blocks: 0x0804837c, 0x080484c3

0x080484c3: Basic block reasons: 
0x080484c3: 85 c0                   |..      |<sp-176>   test   eax, eax
0x080484c5: 7f d4                   |..      |<sp-176>   jg     0x0804849b<<BBlock>>
0x080484c5: Outgoing stack delta: -176
0x080484c5: Successor blocks: 0x0804849b, 0x080484c7

0x080484c7: Basic block reasons: 
0x080484c7: 89 1c 24                |..$     |<sp-176>   mov    dword ss:[esp], ebx
0x080484ca: e8 6d fe ff ff          |.m...   |<sp-176>   call   0x0804833c<close@plt>
0x080484ca: Outgoing stack delta: -180
0x080484ca: Successor blocks: 0x0804833c, 0x080484cf

0x080484cf: Basic block reasons: 
0x080484cf: 90                      |.       |<sp-176>   nop    
0x080484d0: eb b5                   |..      |<sp-176>   jmp    0x08048487<<BBlock>>
0x080484d0: Outgoing stack delta: -176
0x080484d0: Successor blocks: 0x08048487

0x080484d4: ================================== Function (pattern, graph) unknown name
0x080484d4: Function stack delta: +4

0x080484d4: Basic block reasons: entry point, CFG head
0x080484d4: 55                      |U       |<sp+0 >   push   ebp
0x080484d5: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
0x080484d7: 57                      |W       |<sp-4 >   push   edi
0x080484d8: 56                      |V       |<sp-8 >   push   esi
0x080484d9: 53                      |S       |<sp-12>   push   ebx
0x080484da: 83 ec 0c                |...     |<sp-16>   sub    esp, 0x0c
0x080484dd: e8 00 00 00 00          |.....   |<sp-28>   call   0x080484e2<<Func>>
0x080484dd: Outgoing stack delta: -32
0x080484dd: Successor blocks: 0x080484e2, 0x080484e2

0x080484e2: ================================== Function (function call, graph) unknown name

0x080484e2: Basic block reasons: entry point
0x080484e2: 5b                      |[       |<sp-28>   pop    ebx
0x080484e3: 81 c3 f6 11 00 00       |......  |<sp-24>   add    ebx, 0x000011f6<4598>
0x080484e9: e8 16 fe ff ff          |.....   |<sp-24>   call   0x08048304<<Func>>
0x080484e9: Outgoing stack delta: -28
0x080484e9: Successor blocks: 0x08048304, 0x080484ee

0x080484ee: Basic block reasons: 
0x080484ee: 8d 83 20 ff ff ff       |.. ...  |<sp-24>   lea    eax, [ebx + 0xffffff20<-224>]
0x080484f4: 8d 93 20 ff ff ff       |.. ...  |<sp-24>   lea    edx, [ebx + 0xffffff20<-224>]
0x080484fa: 89 45 f0                |.E.     |<sp-24>   mov    dword ss:[ebp + 0xf0<-16>], eax
0x080484fd: 29 d0                   |).      |<sp-24>   sub    eax, edx
0x080484ff: 31 f6                   |1.      |<sp-24>   xor    esi, esi
0x08048501: c1 f8 02                |...     |<sp-24>   sar    eax, 0x02
0x08048504: 39 c6                   |9.      |<sp-24>   cmp    esi, eax
0x08048506: 73 16                   |s.      |<sp-24>   jae    0x0804851e<<BBlock>>
0x08048506: Outgoing stack delta: -24
0x08048506: Successor blocks: 0x08048508, 0x0804851e

0x08048508: Basic block reasons: 
0x08048508: 89 d7                   |..      |<sp-24>   mov    edi, edx
0x0804850a: 89 f6                   |..      |<sp-24>   mov    esi, esi
0x0804850a: Outgoing stack delta: -24
0x0804850a: Successor blocks: 0x0804850c

0x0804850c: Basic block reasons: 
0x0804850c: ff 14 b2                |...     |<sp-24>   call   dword ds:[edx + esi*0x04]
0x0804850c: Outgoing stack delta: -28
0x0804850c: Successor blocks: 0x0804850f, unknown

0x0804850f: Basic block reasons: 
0x0804850f: 8b 4d f0                |.M.     |<sp-24>   mov    ecx, dword ss:[ebp + 0xf0<-16>]
0x08048512: 29 f9                   |).      |<sp-24>   sub    ecx, edi
0x08048514: 46                      |F       |<sp-24>   inc    esi
0x08048515: c1 f9 02                |...     |<sp-24>   sar    ecx, 0x02
0x08048518: 39 ce                   |9.      |<sp-24>   cmp    esi, ecx
0x0804851a: 89 fa                   |..      |<sp-24>   mov    edx, edi
0x0804851c: 72 ee                   |r.      |<sp-24>   jb     0x0804850c<<BBlock>>
0x0804851c: Outgoing stack delta: -24
0x0804851c: Successor blocks: 0x0804850c, 0x0804851e

0x0804851e: Basic block reasons: 
0x0804851e: 83 c4 0c                |...     |<sp-24>   add    esp, 0x0c
0x08048521: 5b                      |[       |<sp-12>   pop    ebx
0x08048522: 5e                      |^       |<sp-8 >   pop    esi
0x08048523: 5f                      |_       |<sp-4 >   pop    edi
0x08048524: c9                      |.       |<sp+0 >   leave  
0x08048525: c3                      |.       |<sp+0 >   ret    
0x08048525: Outgoing stack delta: +4
0x08048525: Successor blocks: unknown

0x08048528: ================================== Function (pattern, graph) unknown name
0x08048528: Function stack delta: +4

0x08048528: Basic block reasons: entry point, CFG head
0x08048528: 55                      |U       |<sp+0 >   push   ebp
0x08048529: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
0x0804852b: 57                      |W       |<sp-4 >   push   edi
0x0804852c: 56                      |V       |<sp-8 >   push   esi
0x0804852d: 53                      |S       |<sp-12>   push   ebx
0x0804852e: e8 00 00 00 00          |.....   |<sp-16>   call   0x08048533<<Func>>
0x0804852e: Outgoing stack delta: -20
0x0804852e: Successor blocks: 0x08048533, 0x08048533

0x08048533: ================================== Function (function call, graph) unknown name

0x08048533: Basic block reasons: entry point
0x08048533: 5b                      |[       |<sp-16>   pop    ebx
0x08048534: 81 c3 a5 11 00 00       |......  |<sp-12>   add    ebx, 0x000011a5<4517>
0x0804853a: 8d 83 20 ff ff ff       |.. ...  |<sp-12>   lea    eax, [ebx + 0xffffff20<-224>]
0x08048540: 8d bb 20 ff ff ff       |.. ...  |<sp-12>   lea    edi, [ebx + 0xffffff20<-224>]
0x08048546: 29 f8                   |).      |<sp-12>   sub    eax, edi
0x08048548: c1 f8 02                |...     |<sp-12>   sar    eax, 0x02
0x0804854b: 83 ec 0c                |...     |<sp-12>   sub    esp, 0x0c
0x0804854e: 8d 70 ff                |.p.     |<sp-24>   lea    esi, [eax + 0xff<-1>]
0x08048551: eb 05                   |..      |<sp-24>   jmp    0x08048558<<BBlock>>
0x08048551: Outgoing stack delta: -24
0x08048551: Successor blocks: 0x08048558

0x08048553: Basic block reasons: CFG head
0x08048553: 90                      |.       |          nop    
0x08048553: Successor blocks: 0x08048554

0x08048554: Basic block reasons: 
0x08048554: ff 14 b7                |...     |<sp-24>   call   dword ds:[edi + esi*0x04]
0x08048554: Outgoing stack delta: -28
0x08048554: Successor blocks: 0x08048557, unknown

0x08048557: Basic block reasons: 
0x08048557: 4e                      |N       |<sp-24>   dec    esi
0x08048557: Outgoing stack delta: -24
0x08048557: Successor blocks: 0x08048558

0x08048558: Basic block reasons: 
0x08048558: 83 fe ff                |...     |<sp-24>   cmp    esi, 0xff<-1>
0x0804855b: 75 f7                   |u.      |<sp-24>   jne    0x08048554<<BBlock>>
0x0804855b: Outgoing stack delta: -24
0x0804855b: Successor blocks: 0x08048554, 0x0804855d

0x0804855d: Basic block reasons: 
0x0804855d: e8 2e 00 00 00          |.....   |<sp-24>   call   0x08048590<<Func>>
0x0804855d: Outgoing stack delta: -28
0x0804855d: Successor blocks: 0x08048590, 0x08048562

0x08048562: Basic block reasons: 
0x08048562: 83 c4 0c                |...     |<sp-24>   add    esp, 0x0c
0x08048565: 5b                      |[       |<sp-12>   pop    ebx
0x08048566: 5e                      |^       |<sp-8 >   pop    esi
0x08048567: 5f                      |_       |<sp-4 >   pop    edi
0x08048568: c9                      |.       |<sp+0 >   leave  
0x08048569: c3                      |.       |<sp+0 >   ret    
0x08048569: Outgoing stack delta: +4
0x08048569: Successor blocks: unknown

0x0804856c: ================================== Function (function call, graph) unknown name
0x0804856c: Function stack delta: +4

0x0804856c: Basic block reasons: entry point
0x0804856c: 55                      |U       |<sp+0 >   push   ebp
0x0804856d: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
0x0804856f: 53                      |S       |<sp-4 >   push   ebx
0x08048570: 52                      |R       |<sp-8 >   push   edx
0x08048571: bb f8 95 04 08          |.....   |<sp-12>   mov    ebx, 0x080495f8<.ctors>
0x08048576: a1 f8 95 04 08          |.....   |<sp-12>   mov    eax, dword ds:[0x080495f8<.ctors>]
0x0804857b: eb 0a                   |..      |<sp-12>   jmp    0x08048587<<BBlock>>
0x0804857b: Outgoing stack delta: -12
0x0804857b: Successor blocks: 0x08048587

0x0804857d: Basic block reasons: CFG head
0x0804857d: 8d 76 00                |.v.     |          lea    esi, [esi + 0x00]
0x0804857d: Successor blocks: 0x08048580

0x08048580: Basic block reasons: 
0x08048580: 83 eb 04                |...     |<sp-12>   sub    ebx, 0x04
0x08048583: ff d0                   |..      |<sp-12>   call   eax
0x08048583: Outgoing stack delta: -16
0x08048583: Successor blocks: 0x08048585, unknown

0x08048585: Basic block reasons: 
0x08048585: 8b 03                   |..      |<sp-12>   mov    eax, dword ds:[ebx]
0x08048585: Outgoing stack delta: -12
0x08048585: Successor blocks: 0x08048587

0x08048587: Basic block reasons: 
0x08048587: 83 f8 ff                |...     |<sp-12>   cmp    eax, 0xff<-1>
0x0804858a: 75 f4                   |u.      |<sp-12>   jne    0x08048580<<BBlock>>
0x0804858a: Outgoing stack delta: -12
0x0804858a: Successor blocks: 0x08048580, 0x0804858c

0x0804858c: Basic block reasons: 
0x0804858c: 58                      |X       |<sp-12>   pop    eax
0x0804858d: 5b                      |[       |<sp-8 >   pop    ebx
0x0804858e: c9                      |.       |<sp-4 >   leave  
0x0804858f: c3                      |.       |<sp+0 >   ret    
0x0804858f: Outgoing stack delta: +4
0x0804858f: Successor blocks: unknown

0x08048590: ================================== Function (function call, graph) unknown name
0x08048590: Function stack delta: +4

0x08048590: Basic block reasons: entry point
0x08048590: 55                      |U       |<sp+0 >   push   ebp
0x08048591: 89 e5                   |..      |<sp-4 >   mov    ebp, esp
0x08048593: 53                      |S       |<sp-4 >   push   ebx
0x08048594: e8 00 00 00 00          |.....   |<sp-8 >   call   0x08048599<<Func>>
0x08048594: Outgoing stack delta: -12
0x08048594: Successor blocks: 0x08048599, 0x08048599

0x08048599: ================================== Function (function call, graph) unknown name

0x08048599: Basic block reasons: entry point
0x08048599: 5b                      |[       |<sp-8 >   pop    ebx
0x0804859a: 81 c3 3f 11 00 00       |..?...  |<sp-4 >   add    ebx, 0x0000113f<4415>
0x080485a0: 50                      |P       |<sp-4 >   push   eax
0x080485a1: e8 32 fe ff ff          |.2...   |<sp-8 >   call   0x080483d8<<Func>>
0x080485a1: Outgoing stack delta: -12
0x080485a1: Successor blocks: 0x080483d8, 0x080485a6

0x080485a6: Basic block reasons: 
0x080485a6: 59                      |Y       |<sp-8 >   pop    ecx
0x080485a7: 5b                      |[       |<sp-4 >   pop    ebx
0x080485a8: c9                      |.       |<sp+0 >   leave  
0x080485a9: c3                      |.       |<sp+0 >   ret    
0x080485a9: Outgoing stack delta: +4
0x080485a9: Successor blocks: unknown

0x0804892c: ================================== Function (pattern, graph) unknown name

0x0804892c: Basic block reasons: entry point, CFG head
0x0804892c: c8 00 00 00             |....    |          enter  0x0000, 0x00
0x08048930: c8 00 00 00             |....    |          enter  0x0000, 0x00
0x08048934: 06                      |.       |          push   es
0x08048935: 00 00                   |..      |          add    byte ds:[eax], al
0x08048937: 00 04 00                |...     |          add    byte ds:[eax + eax], al
0x0804893a: 00 00                   |..      |          add    byte ds:[eax], al
0x0804893c: 04 00                   |..      |          add    al, 0x00
0x0804893e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048940: 28 01                   |(.      |          sub    byte ds:[ecx], al
0x08048942: 00 00                   |..      |          add    byte ds:[eax], al
0x08048944: 28 81 04 08 28 81       |(...(.  |          sub    byte ds:[ecx + 0x81280804], al
0x0804894a: 04 08                   |..      |          add    al, 0x08
0x0804894c: 20 00                   | .      |          and    byte ds:[eax], al
0x0804894e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048950: 20 00                   | .      |          and    byte ds:[eax], al
0x08048952: 00 00                   |..      |          add    byte ds:[eax], al
0x08048954: 04 00                   |..      |          add    al, 0x00
0x08048956: 00 00                   |..      |          add    byte ds:[eax], al
0x08048958: 04 00                   |..      |          add    al, 0x00
0x0804895a: 00 00                   |..      |          add    byte ds:[eax], al
0x0804895c: 51                      |Q       |          push   ecx
0x0804895d: e5 74                   |.t      |          in     eax, 0x74
0x0804895f: 64 00 00                |d..     |          add    byte fs:[eax], al
0x08048962: 00 00                   |..      |          add    byte ds:[eax], al
0x08048964: 00 00                   |..      |          add    byte ds:[eax], al
0x08048966: 00 00                   |..      |          add    byte ds:[eax], al
0x08048968: 00 00                   |..      |          add    byte ds:[eax], al
0x0804896a: 00 00                   |..      |          add    byte ds:[eax], al
0x0804896c: 00 00                   |..      |          add    byte ds:[eax], al
0x0804896e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048970: 00 00                   |..      |          add    byte ds:[eax], al
0x08048972: 00 00                   |..      |          add    byte ds:[eax], al
0x08048974: 06                      |.       |          push   es
0x08048975: 00 00                   |..      |          add    byte ds:[eax], al
0x08048977: 00 04 00                |...     |          add    byte ds:[eax + eax], al
0x0804897a: 00 00                   |..      |          add    byte ds:[eax], al
0x0804897c: 0b 00                   |..      |          or     eax, dword ds:[eax]
0x0804897e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048980: 01 00                   |..      |          add    dword ds:[eax], eax
0x08048982: 00 00                   |..      |          add    byte ds:[eax], al
0x08048984: 02 00                   |..      |          add    al, byte ds:[eax]
0x08048986: 00 00                   |..      |          add    byte ds:[eax], al
0x08048988: 14 81                   |..      |          adc    al, 0x81<-127>
0x0804898a: 04 08                   |..      |          add    al, 0x08
0x0804898c: 14 01                   |..      |          adc    al, 0x01
0x0804898e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048990: 13 00                   |..      |          adc    eax, dword ds:[eax]
0x08048992: 00 00                   |..      |          add    byte ds:[eax], al
0x08048994: 00 00                   |..      |          add    byte ds:[eax], al
0x08048996: 00 00                   |..      |          add    byte ds:[eax], al
0x08048998: 00 00                   |..      |          add    byte ds:[eax], al
0x0804899a: 00 00                   |..      |          add    byte ds:[eax], al
0x0804899c: 01 00                   |..      |          add    dword ds:[eax], eax
0x0804899e: 00 00                   |..      |          add    byte ds:[eax], al
0x080489a0: 00 00                   |..      |          add    byte ds:[eax], al
0x080489a2: 00 00                   |..      |          add    byte ds:[eax], al
0x080489a4: 13 00                   |..      |          adc    eax, dword ds:[eax]
0x080489a6: 00 00                   |..      |          add    byte ds:[eax], al
0x080489a8: 07                      |.       |          pop    es
0x080489a9: 00 00                   |..      |          add    byte ds:[eax], al
0x080489ab: 00 02                   |..      |          add    byte ds:[edx], al
0x080489ad: 00 00                   |..      |          add    byte ds:[eax], al
0x080489af: 00 28                   |.(      |          add    byte ds:[eax], ch
0x080489b1: 81 04 08 28 01 00 00    |...(... |          add    dword ds:[eax + ecx], 0x00000128<296>
0x080489b8: 20 00                   | .      |          and    byte ds:[eax], al
0x080489ba: 00 00                   |..      |          add    byte ds:[eax], al
0x080489bc: 00 00                   |..      |          add    byte ds:[eax], al
0x080489be: 00 00                   |..      |          add    byte ds:[eax], al
0x080489c0: 00 00                   |..      |          add    byte ds:[eax], al
0x080489c2: 00 00                   |..      |          add    byte ds:[eax], al
0x080489c4: 04 00                   |..      |          add    al, 0x00
0x080489c6: 00 00                   |..      |          add    byte ds:[eax], al
0x080489c8: 00 00                   |..      |          add    byte ds:[eax], al
0x080489ca: 00 00                   |..      |          add    byte ds:[eax], al
0x080489cc: 21 00                   |!.      |          and    dword ds:[eax], eax
0x080489ce: 00 00                   |..      |          add    byte ds:[eax], al
0x080489d0: 05 00 00 00 02          |.....   |          add    eax, 0x02000000
0x080489d5: 00 00                   |..      |          add    byte ds:[eax], al
0x080489d7: 00 48 81                |.H.     |          add    byte ds:[eax + 0x81<-127>], cl
0x080489da: 04 08                   |..      |          add    al, 0x08
0x080489dc: 48                      |H       |          dec    eax
0x080489dd: 01 00                   |..      |          add    dword ds:[eax], eax
0x080489df: 00 3c 00                |.<.     |          add    byte ds:[eax + eax], bh
0x080489e2: 00 00                   |..      |          add    byte ds:[eax], al
0x080489e4: 04 00                   |..      |          add    al, 0x00
0x080489e6: 00 00                   |..      |          add    byte ds:[eax], al
0x080489e8: 00 00                   |..      |          add    byte ds:[eax], al
0x080489ea: 00 00                   |..      |          add    byte ds:[eax], al
0x080489ec: 04 00                   |..      |          add    al, 0x00
0x080489ee: 00 00                   |..      |          add    byte ds:[eax], al
0x080489f0: 04 00                   |..      |          add    al, 0x00
0x080489f2: 00 00                   |..      |          add    byte ds:[eax], al
0x080489f4: 27                      |'       |          daa    
0x080489f5: 00 00                   |..      |          add    byte ds:[eax], al
0x080489f7: 00 0b                   |..      |          add    byte ds:[ebx], cl
0x080489f9: 00 00                   |..      |          add    byte ds:[eax], al
0x080489fb: 00 02                   |..      |          add    byte ds:[edx], al
0x080489fd: 00 00                   |..      |          add    byte ds:[eax], al
0x080489ff: 00 84 81 04 08 84 01    |....... |          add    byte ds:[ecx + eax*0x04 + 0x01840804], al
0x08048a06: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a08: a0 00 00 00 05          |.....   |          mov    al, byte ds:[0x05000000]
0x08048a0d: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a0f: 00 01                   |..      |          add    byte ds:[ecx], al
0x08048a11: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a13: 00 04 00                |...     |          add    byte ds:[eax + eax], al
0x08048a16: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a18: 10 00                   |..      |          adc    byte ds:[eax], al
0x08048a1a: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a1c: 2f                      |/       |          das    
0x08048a1d: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a1f: 00 03                   |..      |          add    byte ds:[ebx], al
0x08048a21: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a23: 00 02                   |..      |          add    byte ds:[edx], al
0x08048a25: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a27: 00 24 82                |.$.     |          add    byte ds:[edx + eax*0x04], ah
0x08048a2a: 04 08                   |..      |          add    al, 0x08
0x08048a2c: 24 02                   |$.      |          and    al, 0x02
0x08048a2e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a30: 74 00                   |t.      |          je     0x08048a32<<Insn>>
0x08048a32: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a34: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a36: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a38: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a3a: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a3c: 01 00                   |..      |          add    dword ds:[eax], eax
0x08048a3e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a40: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a42: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a44: 37                      |7       |          aaa    
0x08048a45: 00 00                   |..      |          add    byte ds:[eax], al
0x08048a47: 00 ff                   |..      |          add    bh, bh
0x08048a49: ff                      |.       |          unknown 
0x08048a49: Successor blocks: unknown

0x08048c60: ================================== Function (pattern, graph) unknown name

0x08048c60: Basic block reasons: entry point, CFG head
0x08048c60: c8 00 00 00             |....    |          enter  0x0000, 0x00
0x08048c64: 05 00 00 00 00          |.....   |          add    eax, 0x00000000
0x08048c69: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c6b: 00 04 00                |...     |          add    byte ds:[eax + eax], al
0x08048c6e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c70: 08 00                   |..      |          or     byte ds:[eax], al
0x08048c72: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c74: a5                      |.       |          movsd  
0x08048c75: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c77: 00 01                   |..      |          add    byte ds:[ecx], al
0x08048c79: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c7b: 00 03                   |..      |          add    byte ds:[ebx], al
0x08048c7d: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c7f: 00 d4                   |..      |          add    ah, dl
0x08048c81: 96                      |.       |          xchg   esi, eax
0x08048c82: 04 08                   |..      |          add    al, 0x08
0x08048c84: d4 06                   |..      |          aam    0x06
0x08048c86: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c88: 04 00                   |..      |          add    al, 0x00
0x08048c8a: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c8c: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c8e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c90: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c92: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c94: 04 00                   |..      |          add    al, 0x00
0x08048c96: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c98: 04 00                   |..      |          add    al, 0x00
0x08048c9a: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c9c: aa                      |.       |          stosb  
0x08048c9d: 00 00                   |..      |          add    byte ds:[eax], al
0x08048c9f: 00 01                   |..      |          add    byte ds:[ecx], al
0x08048ca1: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ca3: 00 03                   |..      |          add    byte ds:[ebx], al
0x08048ca5: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ca7: 00 d8                   |..      |          add    al, bl
0x08048ca9: 96                      |.       |          xchg   esi, eax
0x08048caa: 04 08                   |..      |          add    al, 0x08
0x08048cac: d8 06                   |..      |          fadd   float ds:[esi]
0x08048cae: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cb0: 24 00                   |$.      |          and    al, 0x00
0x08048cb2: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cb4: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cb6: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cb8: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cba: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cbc: 04 00                   |..      |          add    al, 0x00
0x08048cbe: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cc0: 04 00                   |..      |          add    al, 0x00
0x08048cc2: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cc4: b3 00                   |..      |          mov    bl, 0x00
0x08048cc6: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cc8: 01 00                   |..      |          add    dword ds:[eax], eax
0x08048cca: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ccc: 03 00                   |..      |          add    eax, dword ds:[eax]
0x08048cce: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cd0: fc                      |.       |          cld    
0x08048cd1: 96                      |.       |          xchg   esi, eax
0x08048cd2: 04 08                   |..      |          add    al, 0x08
0x08048cd4: fc                      |.       |          cld    
0x08048cd5: 06                      |.       |          push   es
0x08048cd6: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cd8: 0c 00                   |..      |          or     al, 0x00
0x08048cda: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cdc: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cde: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ce0: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ce2: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ce4: 04 00                   |..      |          add    al, 0x00
0x08048ce6: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ce8: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cea: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cec: b9 00 00 00 08          |.....   |          mov    ecx, 0x08000000
0x08048cf1: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cf3: 00 03                   |..      |          add    byte ds:[ebx], al
0x08048cf5: 00 00                   |..      |          add    byte ds:[eax], al
0x08048cf7: 00 08                   |..      |          add    byte ds:[eax], cl
0x08048cf9: 97                      |.       |          xchg   edi, eax
0x08048cfa: 04 08                   |..      |          add    al, 0x08
0x08048cfc: 08 07                   |..      |          or     byte ds:[edi], al
0x08048cfe: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d00: 04 00                   |..      |          add    al, 0x00
0x08048d02: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d04: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d06: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d08: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d0a: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d0c: 04 00                   |..      |          add    al, 0x00
0x08048d0e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d10: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d12: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d14: be 00 00 00 01          |.....   |          mov    esi, 0x01000000
0x08048d19: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d1b: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d1d: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d1f: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d21: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d23: 00 08                   |..      |          add    byte ds:[eax], cl
0x08048d25: 07                      |.       |          pop    es
0x08048d26: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d28: 14 00                   |..      |          adc    al, 0x00
0x08048d2a: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d2c: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d2e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d30: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d32: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d34: 04 00                   |..      |          add    al, 0x00
0x08048d36: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d38: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d3a: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d3c: 01 00                   |..      |          add    dword ds:[eax], eax
0x08048d3e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d40: 03 00                   |..      |          add    eax, dword ds:[eax]
0x08048d42: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d44: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d46: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d48: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d4a: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d4c: 1c 07                   |..      |          sbb    al, 0x07
0x08048d4e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d50: cd 00                   |..      |          int    0x00
0x08048d52: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d54: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d56: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d58: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d5a: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d5c: 01 00                   |..      |          add    dword ds:[eax], eax
0x08048d5e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d60: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d62: 00 00                   |..      |          add    byte ds:[eax], al
0x08048d64: 00 2e                   |..      |          add    byte ds:[esi], ch
0x08048d66: 73 68                   |sh      |          jae    0x08048dd0<<BBlock>>
0x08048d66: Successor blocks: 0x08048d68, 0x08048dd0

0x08048d68: Basic block reasons: 
0x08048d68: 73 74                   |st      |          jae    0x08048dde<<BBlock>>
0x08048d68: Successor blocks: 0x08048d6a, 0x08048dde

0x08048d6a: Basic block reasons: 
0x08048d6a: 72 74                   |rt      |          jb     0x08048de0<<BBlock>>
0x08048d6a: Successor blocks: 0x08048d6c, 0x08048de0

0x08048d6c: Basic block reasons: 
0x08048d6c: 61                      |a       |          popad  
0x08048d6d: 62 00                   |b.      |          bound  eax, dword ds:[eax]
0x08048d6f: 2e 69 6e 74 65 72 70 00 |.interp.|          imul   ebp, dword cs:[esi + 0x74], 0x00707265
0x08048d77: 2e 6e                   |.n      |          outsb  
0x08048d79: 6f                      |o       |          outsd  
0x08048d7a: 74 65                   |te      |          je     0x08048de1<<BBlock>>
0x08048d7a: Successor blocks: 0x08048d7c, 0x08048de1

0x08048d7c: Basic block reasons: 
0x08048d7c: 2e 41                   |.A      |          inc    ecx
0x08048d7e: 42                      |B       |          inc    edx
0x08048d7f: 49                      |I       |          dec    ecx
0x08048d80: 2d 74 61 67 00          |-tag.   |          sub    eax, 0x00676174
0x08048d85: 2e 68 61 73 68 00       |.hash.  |          push   0x00687361
0x08048d8b: 2e 64 79 6e             |.dyn    |          jns,pn 0x08048dfd<<BBlock>>
0x08048d8b: Successor blocks: 0x08048d8f, 0x08048dfd

0x08048d8f: Basic block reasons: 
0x08048d8f: 73 79                   |sy      |          jae    0x08048e0a<<BBlock>>
0x08048d8f: Successor blocks: 0x08048d91, 0x08048e0a

0x08048d91: Basic block reasons: 
0x08048d91: 6d                      |m       |          insd   
0x08048d92: 00 2e                   |..      |          add    byte ds:[esi], ch
0x08048d94: 64 79 6e                |dyn     |          jns    0x08048e05<<BBlock>>
0x08048d94: Successor blocks: 0x08048d97, 0x08048e05

0x08048d97: Basic block reasons: 
0x08048d97: 73 74                   |st      |          jae    0x08048e0d<<BBlock>>
0x08048d97: Successor blocks: 0x08048d99, 0x08048e0d

0x08048d99: Basic block reasons: 
0x08048d99: 72 00                   |r.      |          jb     0x08048d9b<<Insn>>
0x08048d9b: 2e 67 6e                |.gn     |          outsb  
0x08048d9e: 75 2e                   |u.      |          jne    0x08048dce<<BBlock>>
0x08048d9e: Successor blocks: 0x08048da0, 0x08048dce

0x08048da0: Basic block reasons: 
0x08048da0: 76 65                   |ve      |          jbe    0x08048e07<<BBlock>>
0x08048da0: Successor blocks: 0x08048da2, 0x08048e07

0x08048da2: Basic block reasons: 
0x08048da2: 72 73                   |rs      |          jb     0x08048e17<<BBlock>>
0x08048da2: Successor blocks: 0x08048da4, 0x08048e17

0x08048da4: Basic block reasons: 
0x08048da4: 69 6f 6e 00 2e 67 6e    |ion..gn |          imul   ebp, dword ds:[edi + 0x6e], 0x6e672e00
0x08048dab: 75 2e                   |u.      |          jne    0x08048ddb<<BBlock>>
0x08048dab: Successor blocks: 0x08048dad, 0x08048ddb

0x08048dad: Basic block reasons: 
0x08048dad: 76 65                   |ve      |          jbe    0x08048e14<<BBlock>>
0x08048dad: Successor blocks: 0x08048daf, 0x08048e14

0x08048daf: Basic block reasons: 
0x08048daf: 72 73                   |rs      |          jb     0x08048e24<<BBlock>>
0x08048daf: Successor blocks: 0x08048db1, 0x08048e24

0x08048db1: Basic block reasons: 
0x08048db1: 69 6f 6e 5f 72 00 2e    |ion_r.. |          imul   ebp, dword ds:[edi + 0x6e], 0x2e00725f
0x08048db8: 72 65                   |re      |          jb     0x08048e1f<<BBlock>>
0x08048db8: Successor blocks: 0x08048dba, 0x08048e1f

0x08048dba: Basic block reasons: 
0x08048dba: 6c                      |l       |          insb   
0x08048dbb: 2e 64 79 6e             |.dyn    |          jns,pn 0x08048e2d<<BBlock>>
0x08048dbb: Successor blocks: 0x08048dbf, 0x08048e2d

0x08048dbf: Basic block reasons: 
0x08048dbf: 00 2e                   |..      |          add    byte ds:[esi], ch
0x08048dc1: 72 65                   |re      |          jb     0x08048e28<<BBlock>>
0x08048dc1: Successor blocks: 0x08048dc3, 0x08048e28

0x08048dc3: Basic block reasons: 
0x08048dc3: 6c                      |l       |          insb   
0x08048dc4: 2e 70 6c                |.pl     |          jo,pn  0x08048e33<<BBlock>>
0x08048dc4: Successor blocks: 0x08048dc7, 0x08048e33

0x08048dc7: Basic block reasons: 
0x08048dc7: 74 00                   |t.      |          je     0x08048dc9<<Insn>>
0x08048dc9: 2e 69 6e 69 74 00 2e 74 |.init..t|          imul   ebp, dword cs:[esi + 0x69], 0x742e0074
0x08048dd1: 65 78 74                |ext     |          js     0x08048e48<<BBlock>>
0x08048dd1: Successor blocks: 0x08048dd4, 0x08048e48

0x08048dce: Basic block reasons: 
0x08048dce: 00 2e                   |..      |          add    byte ds:[esi], ch
0x08048dce: Successor blocks: 0x08048dd0

0x08048dd0: Basic block reasons: 
0x08048dd0: 74 65                   |te      |          je     0x08048e37<<BBlock>>
0x08048dd0: Successor blocks: 0x08048dd2, 0x08048e37

0x08048dd2: Basic block reasons: 
0x08048dd2: 78 74                   |xt      |          js     0x08048e48<<BBlock>>
0x08048dd2: Successor blocks: 0x08048dd4, 0x08048e48

0x08048dd4: Basic block reasons: 
0x08048dd4: 00 2e                   |..      |          add    byte ds:[esi], ch
0x08048dd6: 66 69 6e 69 00 2e       |fini..  |          imul   bp, word ds:[esi + 0x69], 0x2e00<11776>
0x08048ddc: 72 6f                   |ro      |          jb     0x08048e4d<<BBlock>>
0x08048ddc: Successor blocks: 0x08048dde, 0x08048e4d

0x08048ddb: Basic block reasons: 
0x08048ddb: 2e 72 6f                |.ro     |          jb,pn  0x08048e4d<<BBlock>>
0x08048ddb: Successor blocks: 0x08048dde, 0x08048e4d

0x08048dde: Basic block reasons: 
0x08048dde: 64 61                   |da      |          popad  
0x08048dde: Successor blocks: 0x08048de0

0x08048de0: Basic block reasons: 
0x08048de0: 74 61                   |ta      |          je     0x08048e43<<BBlock>>
0x08048de0: Successor blocks: 0x08048de2, 0x08048e43

0x08048de1: Basic block reasons: 
0x08048de1: 61                      |a       |          popad  
0x08048de1: Successor blocks: 0x08048de2

0x08048de2: Basic block reasons: 
0x08048de2: 00 2e                   |..      |          add    byte ds:[esi], ch
0x08048de4: 65 68 5f 66 72 61       |eh_fra  |          push   0x6172665f
0x08048dea: 6d                      |m       |          insd   
0x08048deb: 65 00 2e                |e..     |          add    byte gs:[esi], ch
0x08048dee: 63 74 6f 72             |ctor    |          arpl   word ds:[edi + ebp*0x02 + 0x72], si
0x08048df2: 73 00                   |s.      |          jae    0x08048df4<<Insn>>
0x08048df4: 2e 64 74 6f             |.dto    |          je,pn  0x08048e67<<BBlock>>
0x08048df4: Successor blocks: 0x08048df8, 0x08048e67

0x08048df8: Basic block reasons: 
0x08048df8: 72 73                   |rs      |          jb     0x08048e6d<<BBlock>>
0x08048df8: Successor blocks: 0x08048dfa, 0x08048e6d

0x08048dfa: Basic block reasons: 
0x08048dfa: 00 2e                   |..      |          add    byte ds:[esi], ch
0x08048dfc: 6a 63                   |jc      |          push   0x63
0x08048dfe: 72 00                   |r.      |          jb     0x08048e00<<BBlock>>
0x08048dfe: Successor blocks: 0x08048e00

0x08048dfd: Basic block reasons: 
0x08048dfd: 63 72 00                |cr.     |          arpl   word ds:[edx + 0x00], si
0x08048dfd: Successor blocks: 0x08048e00

0x08048e00: Basic block reasons: 
0x08048e00: 2e 64 79 6e             |.dyn    |          jns,pn 0x08048e72<<BBlock>>
0x08048e00: Successor blocks: 0x08048e04, 0x08048e72

0x08048e04: Basic block reasons: 
0x08048e04: 61                      |a       |          popad  
0x08048e04: Successor blocks: 0x08048e05

0x08048e05: Basic block reasons: 
0x08048e05: 6d                      |m       |          insd   
0x08048e06: 69 63 00 2e 67 6f 74    |ic..got |          imul   esp, dword ds:[ebx + 0x00], 0x746f672e
0x08048e06: Successor blocks: 0x08048e0d

0x08048e07: Basic block reasons: 
0x08048e07: 63 00                   |c.      |          arpl   word ds:[eax], ax
0x08048e09: 2e 67 6f                |.go     |          outsd  
0x08048e09: Successor blocks: 0x08048e0c

0x08048e0a: Basic block reasons: 
0x08048e0a: 67 6f                   |go      |          outsd  
0x08048e0a: Successor blocks: 0x08048e0c

0x08048e0c: Basic block reasons: 
0x08048e0c: 74 00                   |t.      |          je     0x08048e0e<<Insn>>
0x08048e0e: 2e 67 6f                |.go     |          outsd  
0x08048e0e: Successor blocks: 0x08048e11

0x08048e0d: Basic block reasons: 
0x08048e0d: 00 2e                   |..      |          add    byte ds:[esi], ch
0x08048e0f: 67 6f                   |go      |          outsd  
0x08048e0f: Successor blocks: 0x08048e11

0x08048e11: Basic block reasons: 
0x08048e11: 74 2e                   |t.      |          je     0x08048e41<<BBlock>>
0x08048e11: Successor blocks: 0x08048e13, 0x08048e41

0x08048e13: Basic block reasons: 
0x08048e13: 70 6c                   |pl      |          jo     0x08048e81<<BBlock>>
0x08048e13: Successor blocks: 0x08048e15, 0x08048e81

0x08048e14: Basic block reasons: 
0x08048e14: 6c                      |l       |          insb   
0x08048e14: Successor blocks: 0x08048e15

0x08048e15: Basic block reasons: 
0x08048e15: 74 00                   |t.      |          je     0x08048e17<<BBlock>>
0x08048e15: Successor blocks: 0x08048e17

0x08048e17: Basic block reasons: 
0x08048e17: 2e 64 61                |.da     |          popad  
0x08048e1a: 74 61                   |ta      |          je     0x08048e7d<<BBlock>>
0x08048e1a: Successor blocks: 0x08048e1c, 0x08048e7d

0x08048e1c: Basic block reasons: 
0x08048e1c: 00 2e                   |..      |          add    byte ds:[esi], ch
0x08048e1e: 62 73 73                |bss     |          bound  esi, dword ds:[ebx + 0x73]
0x08048e1e: Successor blocks: 0x08048e21

0x08048e1f: Basic block reasons: 
0x08048e1f: 73 73                   |ss      |          jae    0x08048e94<<BBlock>>
0x08048e1f: Successor blocks: 0x08048e21, 0x08048e94

0x08048e21: Basic block reasons: 
0x08048e21: 00 2e                   |..      |          add    byte ds:[esi], ch
0x08048e23: 67 6e                   |gn      |          outsb  
0x08048e23: Successor blocks: 0x08048e25

0x08048e24: Basic block reasons: 
0x08048e24: 6e                      |n       |          outsb  
0x08048e24: Successor blocks: 0x08048e25

0x08048e25: Basic block reasons: 
0x08048e25: 75 5f                   |u_      |          jne    0x08048e86<<BBlock>>
0x08048e25: Successor blocks: 0x08048e27, 0x08048e86

0x08048e27: Basic block reasons: 
0x08048e27: 64 65 62 75 67          |debug   |          bound  esi, dword gs:[ebp + 0x67]
0x08048e27: Successor blocks: 0x08048e2c

0x08048e28: Basic block reasons: 
0x08048e28: 65 62 75 67             |ebug    |          bound  esi, dword gs:[ebp + 0x67]
0x08048e28: Successor blocks: 0x08048e2c

0x08048e2c: Basic block reasons: 
0x08048e2c: 6c                      |l       |          insb   
0x08048e2c: Successor blocks: 0x08048e2d

0x08048e2d: Basic block reasons: 
0x08048e2d: 69 6e 6b 00 2e 67 6e    |ink..gn |          imul   ebp, dword ds:[esi + 0x6b], 0x6e672e00
0x08048e2d: Successor blocks: 0x08048e34

0x08048e33: Basic block reasons: 
0x08048e33: 6e                      |n       |          outsb  
0x08048e33: Successor blocks: 0x08048e34

0x08048e34: Basic block reasons: 
0x08048e34: 75 2e                   |u.      |          jne    0x08048e64<<BBlock>>
0x08048e34: Successor blocks: 0x08048e36, 0x08048e64

0x08048e36: Basic block reasons: 
0x08048e36: 6c                      |l       |          insb   
0x08048e36: Successor blocks: 0x08048e37

0x08048e37: Basic block reasons: 
0x08048e37: 69 62 6c 69 73 74 00    |iblist. |          imul   esp, dword ds:[edx + 0x6c], 0x00747369
0x08048e3e: 2e 67 6e                |.gn     |          outsb  
0x08048e3e: Successor blocks: 0x08048e41

0x08048e41: Basic block reasons: 
0x08048e41: 75 2e                   |u.      |          jne    0x08048e71<<BBlock>>
0x08048e41: Successor blocks: 0x08048e43, 0x08048e71

0x08048e43: Basic block reasons: 
0x08048e43: 63 6f 6e                |con     |          arpl   word ds:[edi + 0x6e], bp
0x08048e46: 66 6c                   |fl      |          insb   
0x08048e46: Successor blocks: 0x08048e48

0x08048e48: Basic block reasons: 
0x08048e48: 69 63 74 00 2e 67 6e    |ict..gn |          imul   esp, dword ds:[ebx + 0x74], 0x6e672e00
0x08048e48: Successor blocks: 0x08048e4f

0x08048e4d: Basic block reasons: 
0x08048e4d: 67 6e                   |gn      |          outsb  
0x08048e4d: Successor blocks: 0x08048e4f

0x08048e4f: Basic block reasons: 
0x08048e4f: 75 2e                   |u.      |          jne    0x08048e7f<<BBlock>>
0x08048e4f: Successor blocks: 0x08048e51, 0x08048e7f

0x08048e51: Basic block reasons: 
0x08048e51: 70 72                   |pr      |          jo     0x08048ec5<<BBlock>>
0x08048e51: Successor blocks: 0x08048e53, 0x08048ec5

0x08048e53: Basic block reasons: 
0x08048e53: 65 6c                   |el      |          insb   
0x08048e55: 69 6e 6b 5f 75 6e 64    |ink_und |          imul   ebp, dword ds:[esi + 0x6b], 0x646e755f
0x08048e5c: 6f                      |o       |          outsd  
0x08048e5d: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e5f: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e61: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e63: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e65: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e65: Successor blocks: 0x08048e67

0x08048e64: Basic block reasons: 
0x08048e64: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e66: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e68: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e6a: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e6c: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e6e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e70: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e70: Successor blocks: 0x08048e72

0x08048e67: Basic block reasons: 
0x08048e67: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e69: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e6b: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e6b: Successor blocks: 0x08048e6d

0x08048e6d: Basic block reasons: 
0x08048e6d: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e6f: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e6f: Successor blocks: 0x08048e71

0x08048e71: Basic block reasons: 
0x08048e71: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e73: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e75: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e77: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e79: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e7b: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e7b: Successor blocks: 0x08048e7d

0x08048e72: Basic block reasons: 
0x08048e72: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e74: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e76: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e78: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e7a: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e7c: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e7e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e80: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e82: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e84: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e84: Successor blocks: 0x08048e86

0x08048e7d: Basic block reasons: 
0x08048e7d: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e7d: Successor blocks: 0x08048e7f

0x08048e7f: Basic block reasons: 
0x08048e7f: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e7f: Successor blocks: 0x08048e81

0x08048e81: Basic block reasons: 
0x08048e81: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e83: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e85: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e87: 00 0b                   |..      |          add    byte ds:[ebx], cl
0x08048e89: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e8b: 00 01                   |..      |          add    byte ds:[ecx], al
0x08048e8d: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e8f: 00 02                   |..      |          add    byte ds:[edx], al
0x08048e91: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e93: 00 14 81                |...     |          add    byte ds:[ecx + eax*0x04], dl
0x08048e93: Successor blocks: 0x08048e96

0x08048e86: Basic block reasons: 
0x08048e86: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e88: 0b 00                   |..      |          or     eax, dword ds:[eax]
0x08048e8a: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e8c: 01 00                   |..      |          add    dword ds:[eax], eax
0x08048e8e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e90: 02 00                   |..      |          add    al, byte ds:[eax]
0x08048e92: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e92: Successor blocks: 0x08048e94

0x08048e94: Basic block reasons: 
0x08048e94: 14 81                   |..      |          adc    al, 0x81<-127>
0x08048e94: Successor blocks: 0x08048e96

0x08048e96: Basic block reasons: 
0x08048e96: 04 08                   |..      |          add    al, 0x08
0x08048e98: 14 01                   |..      |          adc    al, 0x01
0x08048e9a: 00 00                   |..      |          add    byte ds:[eax], al
0x08048e9c: 13 00                   |..      |          adc    eax, dword ds:[eax]
0x08048e9e: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ea0: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ea2: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ea4: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ea6: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ea8: 01 00                   |..      |          add    dword ds:[eax], eax
0x08048eaa: 00 00                   |..      |          add    byte ds:[eax], al
0x08048eac: 00 00                   |..      |          add    byte ds:[eax], al
0x08048eae: 00 00                   |..      |          add    byte ds:[eax], al
0x08048eb0: 13 00                   |..      |          adc    eax, dword ds:[eax]
0x08048eb2: 00 00                   |..      |          add    byte ds:[eax], al
0x08048eb4: 07                      |.       |          pop    es
0x08048eb5: 00 00                   |..      |          add    byte ds:[eax], al
0x08048eb7: 00 02                   |..      |          add    byte ds:[edx], al
0x08048eb9: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ebb: 00 28                   |.(      |          add    byte ds:[eax], ch
0x08048ebd: 81 04 08 28 01 00 00    |...(... |          add    dword ds:[eax + ecx], 0x00000128<296>
0x08048ec4: 20 00                   | .      |          and    byte ds:[eax], al
0x08048ec6: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ec8: 00 00                   |..      |          add    byte ds:[eax], al
0x08048eca: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ecc: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ece: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ed0: 04 00                   |..      |          add    al, 0x00
0x08048ed0: Successor blocks: 0x08048ed2

0x08048ec5: Basic block reasons: 
0x08048ec5: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ec7: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ec9: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ecb: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ecd: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ecf: 00 04 00                |...     |          add    byte ds:[eax + eax], al
0x08048ecf: Successor blocks: 0x08048ed2

0x08048ed2: Basic block reasons: 
0x08048ed2: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ed4: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ed6: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ed8: 21 00                   |!.      |          and    dword ds:[eax], eax
0x08048eda: 00 00                   |..      |          add    byte ds:[eax], al
0x08048edc: 05 00 00 00 02          |.....   |          add    eax, 0x02000000
0x08048ee1: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ee3: 00 48 81                |.H.     |          add    byte ds:[eax + 0x81<-127>], cl
0x08048ee6: 04 08                   |..      |          add    al, 0x08
0x08048ee8: 48                      |H       |          dec    eax
0x08048ee9: 01 00                   |..      |          add    dword ds:[eax], eax
0x08048eeb: 00 3c 00                |.<.     |          add    byte ds:[eax + eax], bh
0x08048eee: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ef0: 04 00                   |..      |          add    al, 0x00
0x08048ef2: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ef4: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ef6: 00 00                   |..      |          add    byte ds:[eax], al
0x08048ef8: 04 00                   |..      |          add    al, 0x00
0x08048efa: 00 00                   |..      |          add    byte ds:[eax], al
0x08048efc: 04 00                   |..      |          add    al, 0x00
0x08048efe: 00 00                   |..      |          add    byte ds:[eax], al
0x08048f00: 27                      |'       |          daa    
0x08048f01: 00 00                   |..      |          add    byte ds:[eax], al
0x08048f03: 00 0b                   |..      |          add    byte ds:[ebx], cl
0x08048f05: 00 00                   |..      |          add    byte ds:[eax], al
0x08048f07: 00 02                   |..      |          add    byte ds:[edx], al
0x08048f09: 00 00                   |..      |          add    byte ds:[eax], al
0x08048f0b: 00 84 81 04 08 84 01    |....... |          add    byte ds:[ecx + eax*0x04 + 0x01840804], al
0x08048f12: 00 00                   |..      |          add    byte ds:[eax], al
0x08048f14: a0 00 00 00 18          |.....   |          mov    al, byte ds:[0x18000000]
0x08048f19: 00 00                   |..      |          add    byte ds:[eax], al
0x08048f1b: 00 01                   |..      |          add    byte ds:[ecx], al
0x08048f1d: 00 00                   |..      |          add    byte ds:[eax], al
0x08048f1f: 00 04 00                |...     |          add    byte ds:[eax + eax], al
0x08048f22: 00 00                   |..      |          add    byte ds:[eax], al
0x08048f24: 10 00                   |..      |          adc    byte ds:[eax], al
0x08048f26: 00 00                   |..      |          add    byte ds:[eax], al
0x08048f28: cd 00                   |..      |          int    0x00
0x08048f2a: 00 00                   |..      |          add    byte ds:[eax], al
0x08048f2c: f7 ff                   |..      |          idiv   edi
0x08048f2e: ff 6f 02                |.o.     |          farJmp dword ds:[edi + 0x02]
0x08048f2e: Successor blocks: unknown

