=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80482c8:push   ebp
== PartialSymbolic ==
registers:
  esp    = v163-0x4[32]
  ebp    = v164[32]
  eip    = 0x80482c9[32]
memory:
  addr=v163-0x4[32] value=v164[32]
== Symbolic ==
registers:
  esp    = {defs={0x080482c8}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080482c8}, expr=0x080482c9[32]}
memory:
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080482c9[32]
memory:

0x80482c9:mov    ebp, esp
== PartialSymbolic ==
registers:
  esp    = v163-0x4[32]
  ebp    = v163-0x4[32]
  eip    = 0x80482cb[32]
memory:
  addr=v163-0x4[32] value=v164[32]
== Symbolic ==
registers:
  esp    = {defs={0x080482c8}, expr=(add[32] esp_0[32] -4[32])}
  ebp    = {defs={0x080482c8}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080482c9}, expr=0x080482cb[32]}
memory:
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080482cb[32]
memory:

0x80482cb:sub    esp, 0x08
== PartialSymbolic ==
registers:
  esp    = v163-0xc[32]
  ebp    = v163-0x4[32]
  eip    = 0x80482ce[32]
  pf     = -v179+0x1[1]
  sf     = v180[1]
  zf     = v181[1]
  af     = -v184+0x1[1]
  cf     = -v182+0x1[1]
  of     = v185[1]
memory:
  addr=v163-0x4[32] value=v164[32]
== Symbolic ==
registers:
  esp    = {defs={0x080482c8,0x080482cb}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x080482c8}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080482cb}, expr=0x080482ce[32]}
  pf     = {defs={0x080482c8,0x080482cb}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x080482c8,0x080482cb}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x080482c8,0x080482cb}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  cf     = {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x080482c8,0x080482cb}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
memory:
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080482ce[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80482ce:call   0x08048364<call_gmon_start>
== PartialSymbolic ==
registers:
  esp    = v163-0x10[32]
  ebp    = v163-0x4[32]
  eip    = 0x8048364[32]
  pf     = -v179+0x1[1]
  sf     = v180[1]
  zf     = v181[1]
  af     = -v184+0x1[1]
  cf     = -v182+0x1[1]
  of     = v185[1]
memory:
  addr=v163-0x10[32] value=0x80482d3[32]
  addr=v163-0x4[32] value=v164[32]
== Symbolic ==
registers:
  esp    = {defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] esp_0[32] -16[32])}
  ebp    = {defs={0x080482c8}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x08048364[32]
  pf     = {defs={0x080482c8,0x080482cb}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x080482c8,0x080482cb}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x080482c8,0x080482cb}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  cf     = {defs={0x080482c8,0x080482cb}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x080482c8,0x080482cb}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
memory:
  addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] esp_0[32] -13[32])} value={defs={0x080482ce}, expr=8[8]}
  addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] esp_0[32] -14[32])} value={defs={0x080482ce}, expr=4[8]}
  addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] esp_0[32] -15[32])} value={defs={0x080482ce}, expr=-126[8]}
  addr={defs={0x080482c8,0x080482cb,0x080482ce}, expr=(add[32] esp_0[32] -16[32])} value={defs={0x080482ce}, expr=-45[8]}
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080482c8}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048364[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80482d3:call   0x080483d0<frame_dummy>
== PartialSymbolic ==
registers:
  esp    = v187-0x4[32]
  eip    = 0x80483d0[32]
memory:
  addr=v187-0x4[32] value=0x80482d8[32]
== Symbolic ==
registers:
  esp    = {defs={0x080482d3}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x080483d0[32]
memory:
  addr={defs={0x080482d3}, expr=(add[32] esp_0[32] -1[32])} value={defs={0x080482d3}, expr=8[8]}
  addr={defs={0x080482d3}, expr=(add[32] esp_0[32] -2[32])} value={defs={0x080482d3}, expr=4[8]}
  addr={defs={0x080482d3}, expr=(add[32] esp_0[32] -3[32])} value={defs={0x080482d3}, expr=-126[8]}
  addr={defs={0x080482d3}, expr=(add[32] esp_0[32] -4[32])} value={defs={0x080482d3}, expr=-40[8]}
== Interval ==
registers:
  esp    = doubleword[32]
  eip    = 0x080483d0[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80482d8:call   0x08048580<__do_global_ctors_aux>
== PartialSymbolic ==
registers:
  esp    = v189-0x4[32]
  eip    = 0x8048580[32]
memory:
  addr=v189-0x4[32] value=0x80482dd[32]
== Symbolic ==
registers:
  esp    = {defs={0x080482d8}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x08048580[32]
memory:
  addr={defs={0x080482d8}, expr=(add[32] esp_0[32] -1[32])} value={defs={0x080482d8}, expr=8[8]}
  addr={defs={0x080482d8}, expr=(add[32] esp_0[32] -2[32])} value={defs={0x080482d8}, expr=4[8]}
  addr={defs={0x080482d8}, expr=(add[32] esp_0[32] -3[32])} value={defs={0x080482d8}, expr=-126[8]}
  addr={defs={0x080482d8}, expr=(add[32] esp_0[32] -4[32])} value={defs={0x080482d8}, expr=-35[8]}
== Interval ==
registers:
  esp    = doubleword[32]
  eip    = 0x08048580[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80482dd:leave  
== PartialSymbolic ==
registers:
  esp    = v191+0x4[32]
  ebp    = v192[32]
  eip    = 0x80482de[32]
memory:
  addr=v191[32] value=v192[32]
== Symbolic ==
registers:
  esp    = {defs={0x080482dd}, expr=(add[32] ebp_0[32] 4[32])}
  ebp    = v14544[32]
  eip    = {defs={0x080482dd}, expr=0x080482de[32]}
memory:
  addr=(add[32] ebp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14544[32])
  addr=(add[32] ebp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14544[32])
  addr=(add[32] ebp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14544[32])
  addr=ebp_0[32] value=(extract[8] 0[32] 8[32] v14544[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080482de[32]
memory:

0x80482de:ret    
== PartialSymbolic ==
registers:
  esp    = v191+0x8[32]
  ebp    = v192[32]
  eip    = v194[32]
memory:
  addr=v191+0x4[32] value=v194[32]
  addr=v191[32] value=v192[32]
== Symbolic ==
registers:
  esp    = {defs={0x080482dd,0x080482de}, expr=(add[32] ebp_0[32] 8[32])}
  ebp    = v14544[32]
  eip    = v14549[32]
memory:
  addr={defs={0x080482dd}, expr=(add[32] ebp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14549[32])
  addr={defs={0x080482dd}, expr=(add[32] ebp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14549[32])
  addr={defs={0x080482dd}, expr=(add[32] ebp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14549[32])
  addr={defs={0x080482dd}, expr=(add[32] ebp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14549[32])
  addr=(add[32] ebp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14544[32])
  addr=(add[32] ebp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14544[32])
  addr=(add[32] ebp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14544[32])
  addr=ebp_0[32] value=(extract[8] 0[32] 8[32] v14544[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = doubleword[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80482f0:jmp    DWORD PTR ds:[0x080496d4<.got.plt+0x0c>]
== PartialSymbolic ==
registers:
  eip    = v197[32]
memory:
  addr=0x80496d4[32] value=v197[32]
== Symbolic ==
registers:
  eip    = v14555[32]
memory:
  addr=0x080496d7[32] value=(extract[8] 24[32] 32[32] v14555[32])
  addr=0x080496d6[32] value=(extract[8] 16[32] 24[32] v14555[32])
  addr=0x080496d5[32] value=(extract[8] 8[32] 16[32] v14555[32])
  addr=0x080496d4[32] value=(extract[8] 0[32] 8[32] v14555[32])
== Interval ==
registers:
  eip    = doubleword[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048300:jmp    DWORD PTR ds:[0x080496d8<.got.plt+0x10>]
== PartialSymbolic ==
registers:
  eip    = v200[32]
memory:
  addr=0x80496d8[32] value=v200[32]
== Symbolic ==
registers:
  eip    = v14561[32]
memory:
  addr=0x080496db[32] value=(extract[8] 24[32] 32[32] v14561[32])
  addr=0x080496da[32] value=(extract[8] 16[32] 24[32] v14561[32])
  addr=0x080496d9[32] value=(extract[8] 8[32] 16[32] v14561[32])
  addr=0x080496d8[32] value=(extract[8] 0[32] 8[32] v14561[32])
== Interval ==
registers:
  eip    = doubleword[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048310:jmp    DWORD PTR ds:[0x080496dc<.got.plt+0x14>]
== PartialSymbolic ==
registers:
  eip    = v203[32]
memory:
  addr=0x80496dc[32] value=v203[32]
== Symbolic ==
registers:
  eip    = v14567[32]
memory:
  addr=0x080496df[32] value=(extract[8] 24[32] 32[32] v14567[32])
  addr=0x080496de[32] value=(extract[8] 16[32] 24[32] v14567[32])
  addr=0x080496dd[32] value=(extract[8] 8[32] 16[32] v14567[32])
  addr=0x080496dc[32] value=(extract[8] 0[32] 8[32] v14567[32])
== Interval ==
registers:
  eip    = doubleword[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048320:jmp    DWORD PTR ds:[0x080496e0<.got.plt+0x18>]
== PartialSymbolic ==
registers:
  eip    = v206[32]
memory:
  addr=0x80496e0[32] value=v206[32]
== Symbolic ==
registers:
  eip    = v14573[32]
memory:
  addr=0x080496e3[32] value=(extract[8] 24[32] 32[32] v14573[32])
  addr=0x080496e2[32] value=(extract[8] 16[32] 24[32] v14573[32])
  addr=0x080496e1[32] value=(extract[8] 8[32] 16[32] v14573[32])
  addr=0x080496e0[32] value=(extract[8] 0[32] 8[32] v14573[32])
== Interval ==
registers:
  eip    = doubleword[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048330:jmp    DWORD PTR ds:[0x080496e4<.got.plt+0x1c>]
== PartialSymbolic ==
registers:
  eip    = v209[32]
memory:
  addr=0x80496e4[32] value=v209[32]
== Symbolic ==
registers:
  eip    = v14579[32]
memory:
  addr=0x080496e7[32] value=(extract[8] 24[32] 32[32] v14579[32])
  addr=0x080496e6[32] value=(extract[8] 16[32] 24[32] v14579[32])
  addr=0x080496e5[32] value=(extract[8] 8[32] 16[32] v14579[32])
  addr=0x080496e4[32] value=(extract[8] 0[32] 8[32] v14579[32])
== Interval ==
registers:
  eip    = doubleword[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048340:xor    ebp, ebp
== PartialSymbolic ==
registers:
  ebp    = 0x0[32]
  eip    = 0x8048342[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v213[1]
  cf     = 0x0[1]
memory:
== Symbolic ==
registers:
  ebp    = {defs={0x08048340}, expr=0[32]}
  eip    = {defs={0x08048340}, expr=0x08048342[32]}
  pf     = {defs={0x08048340}, expr=1[1]}
  sf     = {defs={0x08048340}, expr=0[1]}
  zf     = {defs={0x08048340}, expr=1[1]}
  of     = 0[1]
  af     = v14586[1]
  cf     = 0[1]
memory:
== Interval ==
registers:
  ebp    = doubleword[32]
  eip    = 0x08048342[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048342:pop    esi
== PartialSymbolic ==
registers:
  esp    = v214+0x4[32]
  ebp    = 0x0[32]
  esi    = v215[32]
  eip    = 0x8048343[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v213[1]
  cf     = 0x0[1]
memory:
  addr=v214[32] value=v215[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048342}, expr=(add[32] esp_0[32] 4[32])}
  ebp    = {defs={0x08048340}, expr=0[32]}
  esi    = v14588[32]
  eip    = {defs={0x08048342}, expr=0x08048343[32]}
  pf     = {defs={0x08048340}, expr=1[1]}
  sf     = {defs={0x08048340}, expr=0[1]}
  zf     = {defs={0x08048340}, expr=1[1]}
  of     = 0[1]
  af     = v14586[1]
  cf     = 0[1]
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14588[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14588[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14588[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14588[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x08048343[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048343:mov    ecx, esp
== PartialSymbolic ==
registers:
  ecx    = v214+0x4[32]
  esp    = v214+0x4[32]
  ebp    = 0x0[32]
  esi    = v215[32]
  eip    = 0x8048345[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v213[1]
  cf     = 0x0[1]
memory:
  addr=v214[32] value=v215[32]
== Symbolic ==
registers:
  ecx    = {defs={0x08048342}, expr=(add[32] esp_0[32] 4[32])}
  esp    = {defs={0x08048342}, expr=(add[32] esp_0[32] 4[32])}
  ebp    = {defs={0x08048340}, expr=0[32]}
  esi    = v14588[32]
  eip    = {defs={0x08048343}, expr=0x08048345[32]}
  pf     = {defs={0x08048340}, expr=1[1]}
  sf     = {defs={0x08048340}, expr=0[1]}
  zf     = {defs={0x08048340}, expr=1[1]}
  of     = 0[1]
  af     = v14586[1]
  cf     = 0[1]
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14588[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14588[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14588[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14588[32])
== Interval ==
registers:
  ecx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x08048345[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048345:and    esp, 0xf0<-0x10>
== PartialSymbolic ==
registers:
  ecx    = v214+0x4[32]
  esp    = v217[32]
  ebp    = 0x0[32]
  esi    = v215[32]
  eip    = 0x8048348[32]
  pf     = -v231+0x1[1]
  sf     = v232[1]
  zf     = v233[1]
  of     = 0x0[1]
  af     = v234[1]
  cf     = 0x0[1]
memory:
  addr=v214[32] value=v215[32]
== Symbolic ==
registers:
  ecx    = {defs={0x08048342}, expr=(add[32] esp_0[32] 4[32])}
  esp    = {defs={0x08048342,0x08048345}, expr=(bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])}
  ebp    = {defs={0x08048340}, expr=0[32]}
  esi    = v14588[32]
  eip    = {defs={0x08048345}, expr=0x08048348[32]}
  pf     = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 1[32] 2[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 2[32] 3[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 3[32] 4[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 4[32] 5[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 5[32] 6[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 6[32] 7[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 7[32] 8[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))))}
  sf     = {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  zf     = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  of     = 0[1]
  af     = v14593[1]
  cf     = 0[1]
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14588[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14588[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14588[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14588[32])
== Interval ==
registers:
  ecx    = doubleword[32]
  esp    = 0[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x08048348[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048348:push   eax
== PartialSymbolic ==
registers:
  eax    = v235[32]
  ecx    = v214+0x4[32]
  esp    = v217-0x4[32]
  ebp    = 0x0[32]
  esi    = v215[32]
  eip    = 0x8048349[32]
  pf     = -v231+0x1[1]
  sf     = v232[1]
  zf     = v233[1]
  of     = 0x0[1]
  af     = v234[1]
  cf     = 0x0[1]
memory:
  addr=v217-0x4[32] value=v235[32]
  addr=v214[32] value=v215[32]
== Symbolic ==
registers:
  ecx    = {defs={0x08048342}, expr=(add[32] esp_0[32] 4[32])}
  esp    = {defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32])}
  ebp    = {defs={0x08048340}, expr=0[32]}
  esi    = v14588[32]
  eip    = {defs={0x08048348}, expr=0x08048349[32]}
  pf     = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 1[32] 2[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 2[32] 3[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 3[32] 4[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 4[32] 5[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 5[32] 6[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 6[32] 7[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 7[32] 8[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))))}
  sf     = {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  zf     = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  of     = 0[1]
  af     = v14593[1]
  cf     = 0[1]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -1[32])} value=(extract[8] 24[32] 32[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -2[32])} value=(extract[8] 16[32] 24[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -3[32])} value=(extract[8] 8[32] 16[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32])} value=(extract[8] 0[32] 8[32] eax_0[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14588[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14588[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14588[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14588[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ecx    = doubleword[32]
  esp    = 0xfffffffc[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x08048349[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048349:push   esp
== PartialSymbolic ==
registers:
  eax    = v235[32]
  ecx    = v214+0x4[32]
  esp    = v217-0x8[32]
  ebp    = 0x0[32]
  esi    = v215[32]
  eip    = 0x804834a[32]
  pf     = -v231+0x1[1]
  sf     = v232[1]
  zf     = v233[1]
  of     = 0x0[1]
  af     = v234[1]
  cf     = 0x0[1]
memory:
  addr=v217-0x8[32] value=v217-0x4[32]
  addr=v217-0x4[32] value=v235[32]
  addr=v214[32] value=v215[32]
== Symbolic ==
registers:
  ecx    = {defs={0x08048342}, expr=(add[32] esp_0[32] 4[32])}
  esp    = {defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -8[32])}
  ebp    = {defs={0x08048340}, expr=0[32]}
  esi    = v14588[32]
  eip    = {defs={0x08048349}, expr=0x0804834a[32]}
  pf     = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 1[32] 2[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 2[32] 3[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 3[32] 4[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 4[32] 5[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 5[32] 6[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 6[32] 7[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 7[32] 8[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))))}
  sf     = {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  zf     = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  of     = 0[1]
  af     = v14593[1]
  cf     = 0[1]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -5[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -6[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -7[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -8[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -1[32])} value=(extract[8] 24[32] 32[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -2[32])} value=(extract[8] 16[32] 24[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -3[32])} value=(extract[8] 8[32] 16[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32])} value=(extract[8] 0[32] 8[32] eax_0[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14588[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14588[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14588[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14588[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ecx    = doubleword[32]
  esp    = 0xfffffff8[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x0804834a[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x804834a:push   edx
== PartialSymbolic ==
registers:
  eax    = v235[32]
  ecx    = v214+0x4[32]
  edx    = v236[32]
  esp    = v217-0xc[32]
  ebp    = 0x0[32]
  esi    = v215[32]
  eip    = 0x804834b[32]
  pf     = -v231+0x1[1]
  sf     = v232[1]
  zf     = v233[1]
  of     = 0x0[1]
  af     = v234[1]
  cf     = 0x0[1]
memory:
  addr=v217-0xc[32] value=v236[32]
  addr=v217-0x8[32] value=v217-0x4[32]
  addr=v217-0x4[32] value=v235[32]
  addr=v214[32] value=v215[32]
== Symbolic ==
registers:
  ecx    = {defs={0x08048342}, expr=(add[32] esp_0[32] 4[32])}
  esp    = {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -12[32])}
  ebp    = {defs={0x08048340}, expr=0[32]}
  esi    = v14588[32]
  eip    = {defs={0x0804834a}, expr=0x0804834b[32]}
  pf     = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 1[32] 2[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 2[32] 3[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 3[32] 4[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 4[32] 5[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 5[32] 6[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 6[32] 7[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 7[32] 8[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))))}
  sf     = {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  zf     = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  of     = 0[1]
  af     = v14593[1]
  cf     = 0[1]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -9[32])} value=(extract[8] 24[32] 32[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -10[32])} value=(extract[8] 16[32] 24[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -11[32])} value=(extract[8] 8[32] 16[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -12[32])} value=(extract[8] 0[32] 8[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -5[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -6[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -7[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -8[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -1[32])} value=(extract[8] 24[32] 32[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -2[32])} value=(extract[8] 16[32] 24[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -3[32])} value=(extract[8] 8[32] 16[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32])} value=(extract[8] 0[32] 8[32] eax_0[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14588[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14588[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14588[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14588[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ecx    = doubleword[32]
  edx    = doubleword[32]
  esp    = 0xfffffff4[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x0804834b[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x804834b:push   0x08048520<__libc_csu_fini>
== PartialSymbolic ==
registers:
  eax    = v235[32]
  ecx    = v214+0x4[32]
  edx    = v236[32]
  esp    = v217-0x10[32]
  ebp    = 0x0[32]
  esi    = v215[32]
  eip    = 0x8048350[32]
  pf     = -v231+0x1[1]
  sf     = v232[1]
  zf     = v233[1]
  of     = 0x0[1]
  af     = v234[1]
  cf     = 0x0[1]
memory:
  addr=v217-0x10[32] value=0x8048520[32]
  addr=v217-0xc[32] value=v236[32]
  addr=v217-0x8[32] value=v217-0x4[32]
  addr=v217-0x4[32] value=v235[32]
  addr=v214[32] value=v215[32]
== Symbolic ==
registers:
  ecx    = {defs={0x08048342}, expr=(add[32] esp_0[32] 4[32])}
  esp    = {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -16[32])}
  ebp    = {defs={0x08048340}, expr=0[32]}
  esi    = v14588[32]
  eip    = {defs={0x0804834b}, expr=0x08048350[32]}
  pf     = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 1[32] 2[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 2[32] 3[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 3[32] 4[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 4[32] 5[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 5[32] 6[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 6[32] 7[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 7[32] 8[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))))}
  sf     = {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  zf     = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  of     = 0[1]
  af     = v14593[1]
  cf     = 0[1]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -13[32])} value=8[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -14[32])} value=4[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -15[32])} value=-123[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -16[32])} value=32[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -9[32])} value=(extract[8] 24[32] 32[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -10[32])} value=(extract[8] 16[32] 24[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -11[32])} value=(extract[8] 8[32] 16[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -12[32])} value=(extract[8] 0[32] 8[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -5[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -6[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -7[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -8[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -1[32])} value=(extract[8] 24[32] 32[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -2[32])} value=(extract[8] 16[32] 24[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -3[32])} value=(extract[8] 8[32] 16[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32])} value=(extract[8] 0[32] 8[32] eax_0[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14588[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14588[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14588[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14588[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ecx    = doubleword[32]
  edx    = doubleword[32]
  esp    = 0xfffffff0[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x08048350[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048350:push   0x080484b0<__libc_csu_init>
== PartialSymbolic ==
registers:
  eax    = v235[32]
  ecx    = v214+0x4[32]
  edx    = v236[32]
  esp    = v217-0x14[32]
  ebp    = 0x0[32]
  esi    = v215[32]
  eip    = 0x8048355[32]
  pf     = -v231+0x1[1]
  sf     = v232[1]
  zf     = v233[1]
  of     = 0x0[1]
  af     = v234[1]
  cf     = 0x0[1]
memory:
  addr=v217-0x14[32] value=0x80484b0[32]
  addr=v217-0x10[32] value=0x8048520[32]
  addr=v217-0xc[32] value=v236[32]
  addr=v217-0x8[32] value=v217-0x4[32]
  addr=v217-0x4[32] value=v235[32]
  addr=v214[32] value=v215[32]
== Symbolic ==
registers:
  ecx    = {defs={0x08048342}, expr=(add[32] esp_0[32] 4[32])}
  esp    = {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -20[32])}
  ebp    = {defs={0x08048340}, expr=0[32]}
  esi    = v14588[32]
  eip    = {defs={0x08048350}, expr=0x08048355[32]}
  pf     = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 1[32] 2[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 2[32] 3[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 3[32] 4[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 4[32] 5[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 5[32] 6[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 6[32] 7[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 7[32] 8[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))))}
  sf     = {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  zf     = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  of     = 0[1]
  af     = v14593[1]
  cf     = 0[1]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -17[32])} value=8[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -18[32])} value=4[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -19[32])} value=-124[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -20[32])} value=-80[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -13[32])} value=8[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -14[32])} value=4[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -15[32])} value=-123[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -16[32])} value=32[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -9[32])} value=(extract[8] 24[32] 32[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -10[32])} value=(extract[8] 16[32] 24[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -11[32])} value=(extract[8] 8[32] 16[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -12[32])} value=(extract[8] 0[32] 8[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -5[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -6[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -7[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -8[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -1[32])} value=(extract[8] 24[32] 32[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -2[32])} value=(extract[8] 16[32] 24[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -3[32])} value=(extract[8] 8[32] 16[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32])} value=(extract[8] 0[32] 8[32] eax_0[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14588[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14588[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14588[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14588[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ecx    = doubleword[32]
  edx    = doubleword[32]
  esp    = 0xffffffec[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x08048355[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048355:push   ecx
== PartialSymbolic ==
registers:
  eax    = v235[32]
  ecx    = v214+0x4[32]
  edx    = v236[32]
  esp    = v217-0x18[32]
  ebp    = 0x0[32]
  esi    = v215[32]
  eip    = 0x8048356[32]
  pf     = -v231+0x1[1]
  sf     = v232[1]
  zf     = v233[1]
  of     = 0x0[1]
  af     = v234[1]
  cf     = 0x0[1]
memory:
  addr=v217-0x18[32] value=v214+0x4[32]
  addr=v217-0x14[32] value=0x80484b0[32]
  addr=v217-0x10[32] value=0x8048520[32]
  addr=v217-0xc[32] value=v236[32]
  addr=v217-0x8[32] value=v217-0x4[32]
  addr=v217-0x4[32] value=v235[32]
  addr=v214[32] value=v215[32]
== Symbolic ==
registers:
  ecx    = {defs={0x08048342}, expr=(add[32] esp_0[32] 4[32])}
  esp    = {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -24[32])}
  ebp    = {defs={0x08048340}, expr=0[32]}
  esi    = v14588[32]
  eip    = {defs={0x08048355}, expr=0x08048356[32]}
  pf     = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 1[32] 2[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 2[32] 3[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 3[32] 4[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 4[32] 5[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 5[32] 6[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 6[32] 7[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 7[32] 8[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))))}
  sf     = {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  zf     = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  of     = 0[1]
  af     = v14593[1]
  cf     = 0[1]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -21[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -22[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -23[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -24[32])} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -17[32])} value=8[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -18[32])} value=4[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -19[32])} value=-124[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -20[32])} value=-80[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -13[32])} value=8[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -14[32])} value=4[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -15[32])} value=-123[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -16[32])} value=32[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -9[32])} value=(extract[8] 24[32] 32[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -10[32])} value=(extract[8] 16[32] 24[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -11[32])} value=(extract[8] 8[32] 16[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -12[32])} value=(extract[8] 0[32] 8[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -5[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -6[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -7[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -8[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -1[32])} value=(extract[8] 24[32] 32[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -2[32])} value=(extract[8] 16[32] 24[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -3[32])} value=(extract[8] 8[32] 16[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32])} value=(extract[8] 0[32] 8[32] eax_0[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14588[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14588[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14588[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14588[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ecx    = doubleword[32]
  edx    = doubleword[32]
  esp    = 0xffffffe8[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x08048356[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048356:push   esi
== PartialSymbolic ==
registers:
  eax    = v235[32]
  ecx    = v214+0x4[32]
  edx    = v236[32]
  esp    = v217-0x1c[32]
  ebp    = 0x0[32]
  esi    = v215[32]
  eip    = 0x8048357[32]
  pf     = -v231+0x1[1]
  sf     = v232[1]
  zf     = v233[1]
  of     = 0x0[1]
  af     = v234[1]
  cf     = 0x0[1]
memory:
  addr=v217-0x1c[32] value=v215[32]
  addr=v217-0x18[32] value=v214+0x4[32]
  addr=v217-0x14[32] value=0x80484b0[32]
  addr=v217-0x10[32] value=0x8048520[32]
  addr=v217-0xc[32] value=v236[32]
  addr=v217-0x8[32] value=v217-0x4[32]
  addr=v217-0x4[32] value=v235[32]
  addr=v214[32] value=v215[32]
== Symbolic ==
registers:
  ecx    = {defs={0x08048342}, expr=(add[32] esp_0[32] 4[32])}
  esp    = {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -28[32])}
  ebp    = {defs={0x08048340}, expr=0[32]}
  esi    = v14588[32]
  eip    = {defs={0x08048356}, expr=0x08048357[32]}
  pf     = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 1[32] 2[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 2[32] 3[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 3[32] 4[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 4[32] 5[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 5[32] 6[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 6[32] 7[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 7[32] 8[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))))}
  sf     = {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  zf     = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  of     = 0[1]
  af     = v14593[1]
  cf     = 0[1]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -25[32])} value=(extract[8] 24[32] 32[32] v14588[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -26[32])} value=(extract[8] 16[32] 24[32] v14588[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -27[32])} value=(extract[8] 8[32] 16[32] v14588[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -28[32])} value=(extract[8] 0[32] 8[32] v14588[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -21[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -22[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -23[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -24[32])} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -17[32])} value=8[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -18[32])} value=4[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -19[32])} value=-124[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -20[32])} value=-80[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -13[32])} value=8[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -14[32])} value=4[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -15[32])} value=-123[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -16[32])} value=32[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -9[32])} value=(extract[8] 24[32] 32[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -10[32])} value=(extract[8] 16[32] 24[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -11[32])} value=(extract[8] 8[32] 16[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -12[32])} value=(extract[8] 0[32] 8[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -5[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -6[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -7[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -8[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -1[32])} value=(extract[8] 24[32] 32[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -2[32])} value=(extract[8] 16[32] 24[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -3[32])} value=(extract[8] 8[32] 16[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32])} value=(extract[8] 0[32] 8[32] eax_0[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14588[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14588[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14588[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14588[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ecx    = doubleword[32]
  edx    = doubleword[32]
  esp    = 0xffffffe4[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x08048357[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048357:push   0x08048410<main>
== PartialSymbolic ==
registers:
  eax    = v235[32]
  ecx    = v214+0x4[32]
  edx    = v236[32]
  esp    = v217-0x20[32]
  ebp    = 0x0[32]
  esi    = v215[32]
  eip    = 0x804835c[32]
  pf     = -v231+0x1[1]
  sf     = v232[1]
  zf     = v233[1]
  of     = 0x0[1]
  af     = v234[1]
  cf     = 0x0[1]
memory:
  addr=v217-0x20[32] value=0x8048410[32]
  addr=v217-0x1c[32] value=v215[32]
  addr=v217-0x18[32] value=v214+0x4[32]
  addr=v217-0x14[32] value=0x80484b0[32]
  addr=v217-0x10[32] value=0x8048520[32]
  addr=v217-0xc[32] value=v236[32]
  addr=v217-0x8[32] value=v217-0x4[32]
  addr=v217-0x4[32] value=v235[32]
  addr=v214[32] value=v215[32]
== Symbolic ==
registers:
  ecx    = {defs={0x08048342}, expr=(add[32] esp_0[32] 4[32])}
  esp    = {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -32[32])}
  ebp    = {defs={0x08048340}, expr=0[32]}
  esi    = v14588[32]
  eip    = {defs={0x08048357}, expr=0x0804835c[32]}
  pf     = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 1[32] 2[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 2[32] 3[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 3[32] 4[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 4[32] 5[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 5[32] 6[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 6[32] 7[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 7[32] 8[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))))}
  sf     = {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  zf     = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  of     = 0[1]
  af     = v14593[1]
  cf     = 0[1]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -29[32])} value=8[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -30[32])} value=4[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -31[32])} value=-124[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -32[32])} value=16[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -25[32])} value=(extract[8] 24[32] 32[32] v14588[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -26[32])} value=(extract[8] 16[32] 24[32] v14588[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -27[32])} value=(extract[8] 8[32] 16[32] v14588[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -28[32])} value=(extract[8] 0[32] 8[32] v14588[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -21[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -22[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -23[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -24[32])} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -17[32])} value=8[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -18[32])} value=4[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -19[32])} value=-124[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -20[32])} value=-80[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -13[32])} value=8[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -14[32])} value=4[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -15[32])} value=-123[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -16[32])} value=32[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -9[32])} value=(extract[8] 24[32] 32[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -10[32])} value=(extract[8] 16[32] 24[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -11[32])} value=(extract[8] 8[32] 16[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -12[32])} value=(extract[8] 0[32] 8[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -5[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -6[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -7[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -8[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -1[32])} value=(extract[8] 24[32] 32[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -2[32])} value=(extract[8] 16[32] 24[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -3[32])} value=(extract[8] 8[32] 16[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32])} value=(extract[8] 0[32] 8[32] eax_0[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14588[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14588[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14588[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14588[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ecx    = doubleword[32]
  edx    = doubleword[32]
  esp    = 0xffffffe0[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x0804835c[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x804835c:call   0x08048310<__libc_start_main@plt>
== PartialSymbolic ==
registers:
  eax    = v235[32]
  ecx    = v214+0x4[32]
  edx    = v236[32]
  esp    = v217-0x24[32]
  ebp    = 0x0[32]
  esi    = v215[32]
  eip    = 0x8048310[32]
  pf     = -v231+0x1[1]
  sf     = v232[1]
  zf     = v233[1]
  of     = 0x0[1]
  af     = v234[1]
  cf     = 0x0[1]
memory:
  addr=v217-0x24[32] value=0x8048361[32]
  addr=v217-0x20[32] value=0x8048410[32]
  addr=v217-0x1c[32] value=v215[32]
  addr=v217-0x18[32] value=v214+0x4[32]
  addr=v217-0x14[32] value=0x80484b0[32]
  addr=v217-0x10[32] value=0x8048520[32]
  addr=v217-0xc[32] value=v236[32]
  addr=v217-0x8[32] value=v217-0x4[32]
  addr=v217-0x4[32] value=v235[32]
  addr=v214[32] value=v215[32]
== Symbolic ==
registers:
  ecx    = {defs={0x08048342}, expr=(add[32] esp_0[32] 4[32])}
  esp    = {defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -36[32])}
  ebp    = {defs={0x08048340}, expr=0[32]}
  esi    = v14588[32]
  eip    = 0x08048310[32]
  pf     = {defs={0x08048342,0x08048345}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 1[32] 2[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 2[32] 3[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 3[32] 4[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 4[32] 5[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 5[32] 6[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 6[32] 7[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32])) (extract[1] 7[32] 8[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))))}
  sf     = {defs={0x08048342,0x08048345}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  zf     = {defs={0x08048342,0x08048345}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]))}
  of     = 0[1]
  af     = v14593[1]
  cf     = 0[1]
memory:
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -33[32])} value={defs={0x0804835c}, expr=8[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -34[32])} value={defs={0x0804835c}, expr=4[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -35[32])} value={defs={0x0804835c}, expr=-125[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357,0x0804835c}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -36[32])} value={defs={0x0804835c}, expr=97[8]}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -29[32])} value=8[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -30[32])} value=4[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -31[32])} value=-124[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356,0x08048357}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -32[32])} value=16[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -25[32])} value=(extract[8] 24[32] 32[32] v14588[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -26[32])} value=(extract[8] 16[32] 24[32] v14588[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -27[32])} value=(extract[8] 8[32] 16[32] v14588[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355,0x08048356}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -28[32])} value=(extract[8] 0[32] 8[32] v14588[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -21[32])} value={defs={0x08048342}, expr=(extract[8] 24[32] 32[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -22[32])} value={defs={0x08048342}, expr=(extract[8] 16[32] 24[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -23[32])} value={defs={0x08048342}, expr=(extract[8] 8[32] 16[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350,0x08048355}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -24[32])} value={defs={0x08048342}, expr=(extract[8] 0[32] 8[32] (add[32] esp_0[32] 4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -17[32])} value=8[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -18[32])} value=4[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -19[32])} value=-124[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b,0x08048350}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -20[32])} value=-80[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -13[32])} value=8[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -14[32])} value=4[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -15[32])} value=-123[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a,0x0804834b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -16[32])} value=32[8]
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -9[32])} value=(extract[8] 24[32] 32[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -10[32])} value=(extract[8] 16[32] 24[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -11[32])} value=(extract[8] 8[32] 16[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349,0x0804834a}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -12[32])} value=(extract[8] 0[32] 8[32] edx_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -5[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 24[32] 32[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -6[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 16[32] 24[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -7[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 8[32] 16[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348,0x08048349}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -8[32])} value={defs={0x08048342,0x08048345,0x08048348}, expr=(extract[8] 0[32] 8[32] (add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32]))}
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -1[32])} value=(extract[8] 24[32] 32[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -2[32])} value=(extract[8] 16[32] 24[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -3[32])} value=(extract[8] 8[32] 16[32] eax_0[32])
  addr={defs={0x08048342,0x08048345,0x08048348}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] 4[32]) -16[32]) -4[32])} value=(extract[8] 0[32] 8[32] eax_0[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14588[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14588[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14588[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14588[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ecx    = doubleword[32]
  edx    = doubleword[32]
  esp    = 0xffffffdc[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x08048310[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048361:hlt    
== PartialSymbolic ==
registers:
  eip    = 0x8048361[32]
memory:
== Symbolic ==
registers:
  eip    = 0x08048361[32]
memory:
== Interval ==
registers:
  eip    = 0x08048361[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048364:push   ebp
== PartialSymbolic ==
registers:
  esp    = v239-0x4[32]
  ebp    = v240[32]
  eip    = 0x8048365[32]
memory:
  addr=v239-0x4[32] value=v240[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048364}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048364}, expr=0x08048365[32]}
memory:
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048365[32]
memory:

0x8048365:mov    ebp, esp
== PartialSymbolic ==
registers:
  esp    = v239-0x4[32]
  ebp    = v239-0x4[32]
  eip    = 0x8048367[32]
memory:
  addr=v239-0x4[32] value=v240[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048364}, expr=(add[32] esp_0[32] -4[32])}
  ebp    = {defs={0x08048364}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048365}, expr=0x08048367[32]}
memory:
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048367[32]
memory:

0x8048367:push   ebx
== PartialSymbolic ==
registers:
  ebx    = v241[32]
  esp    = v239-0x8[32]
  ebp    = v239-0x4[32]
  eip    = 0x8048368[32]
memory:
  addr=v239-0x8[32] value=v241[32]
  addr=v239-0x4[32] value=v240[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] -8[32])}
  ebp    = {defs={0x08048364}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048367}, expr=0x08048368[32]}
memory:
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048368[32]
memory:

0x8048368:push   ecx
== PartialSymbolic ==
registers:
  ecx    = v242[32]
  ebx    = v241[32]
  esp    = v239-0xc[32]
  ebp    = v239-0x4[32]
  eip    = 0x8048369[32]
memory:
  addr=v239-0xc[32] value=v242[32]
  addr=v239-0x8[32] value=v241[32]
  addr=v239-0x4[32] value=v240[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048364}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048368}, expr=0x08048369[32]}
memory:
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] -9[32])} value=(extract[8] 24[32] 32[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] -10[32])} value=(extract[8] 16[32] 24[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] -11[32])} value=(extract[8] 8[32] 16[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] -12[32])} value=(extract[8] 0[32] 8[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  ecx    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048369[32]
memory:

0x8048369:call   0x0804836e<<Insn>>
== PartialSymbolic ==
registers:
  ecx    = v242[32]
  ebx    = v241[32]
  esp    = v239-0x10[32]
  ebp    = v239-0x4[32]
  eip    = 0x804836e[32]
memory:
  addr=v239-0x10[32] value=0x804836e[32]
  addr=v239-0xc[32] value=v242[32]
  addr=v239-0x8[32] value=v241[32]
  addr=v239-0x4[32] value=v240[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] esp_0[32] -16[32])}
  ebp    = {defs={0x08048364}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x0804836e[32]
memory:
  addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] esp_0[32] -13[32])} value={defs={0x08048369}, expr=8[8]}
  addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] esp_0[32] -14[32])} value={defs={0x08048369}, expr=4[8]}
  addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] esp_0[32] -15[32])} value={defs={0x08048369}, expr=-125[8]}
  addr={defs={0x08048364,0x08048367,0x08048368,0x08048369}, expr=(add[32] esp_0[32] -16[32])} value={defs={0x08048369}, expr=110[8]}
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] -9[32])} value=(extract[8] 24[32] 32[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] -10[32])} value=(extract[8] 16[32] 24[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] -11[32])} value=(extract[8] 8[32] 16[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367,0x08048368}, expr=(add[32] esp_0[32] -12[32])} value=(extract[8] 0[32] 8[32] ecx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x08048364,0x08048367}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048364}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  ecx    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x0804836e[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x804836e:pop    ebx
== PartialSymbolic ==
registers:
  ebx    = v245[32]
  esp    = v244+0x4[32]
  eip    = 0x804836f[32]
memory:
  addr=v244[32] value=v245[32]
== Symbolic ==
registers:
  ebx    = v14604[32]
  esp    = {defs={0x0804836e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x0804836e}, expr=0x0804836f[32]}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14604[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14604[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14604[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14604[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x0804836f[32]
memory:

0x804836f:add    ebx, 0x0000135a
== PartialSymbolic ==
registers:
  ebx    = v245+0x135a[32]
  esp    = v244+0x4[32]
  eip    = 0x8048375[32]
  pf     = -v261+0x1[1]
  sf     = v262[1]
  zf     = v263[1]
  af     = v266[1]
  cf     = v264[1]
  of     = v267[1]
memory:
  addr=v244[32] value=v245[32]
== Symbolic ==
registers:
  ebx    = {defs={0x0804836f}, expr=(add[32] v14604[32] 4954[32])}
  esp    = {defs={0x0804836e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x0804836f}, expr=0x08048375[32]}
  pf     = {defs={0x0804836f}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14604[32] 4954[32])) (extract[1] 1[32] 2[32] (add[32] v14604[32] 4954[32])) (extract[1] 2[32] 3[32] (add[32] v14604[32] 4954[32])) (extract[1] 3[32] 4[32] (add[32] v14604[32] 4954[32])) (extract[1] 4[32] 5[32] (add[32] v14604[32] 4954[32])) (extract[1] 5[32] 6[32] (add[32] v14604[32] 4954[32])) (extract[1] 6[32] 7[32] (add[32] v14604[32] 4954[32])) (extract[1] 7[32] 8[32] (add[32] v14604[32] 4954[32]))))}
  sf     = {defs={0x0804836f}, expr=(extract[1] 31[32] 32[32] (add[32] v14604[32] 4954[32]))}
  zf     = {defs={0x0804836f}, expr=(zerop[1] (add[32] v14604[32] 4954[32]))}
  af     = {defs={0x0804836f}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14604[32]) (add[33] (uextend[33] 33[32] v14604[32]) 4954[33]) 4954[33]))}
  cf     = {defs={0x0804836f}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14604[32]) (add[33] (uextend[33] 33[32] v14604[32]) 4954[33]) 4954[33]))}
  of     = {defs={0x0804836f}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14604[32]) (add[33] (uextend[33] 33[32] v14604[32]) 4954[33]) 4954[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14604[32]) (add[33] (uextend[33] 33[32] v14604[32]) 4954[33]) 4954[33])))}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14604[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14604[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14604[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14604[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x08048375[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
== PartialSymbolic ==
registers:
  edx    = v268[32]
  ebx    = v245+0x135a[32]
  esp    = v244+0x4[32]
  eip    = 0x804837b[32]
  pf     = -v261+0x1[1]
  sf     = v262[1]
  zf     = v263[1]
  af     = v266[1]
  cf     = v264[1]
  of     = v267[1]
memory:
  addr=v245+0x1356[32] value=v268[32]
  addr=v244[32] value=v245[32]
== Symbolic ==
registers:
  edx    = v14609[32]
  ebx    = {defs={0x0804836f}, expr=(add[32] v14604[32] 4954[32])}
  esp    = {defs={0x0804836e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x08048375}, expr=0x0804837b[32]}
  pf     = {defs={0x0804836f}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14604[32] 4954[32])) (extract[1] 1[32] 2[32] (add[32] v14604[32] 4954[32])) (extract[1] 2[32] 3[32] (add[32] v14604[32] 4954[32])) (extract[1] 3[32] 4[32] (add[32] v14604[32] 4954[32])) (extract[1] 4[32] 5[32] (add[32] v14604[32] 4954[32])) (extract[1] 5[32] 6[32] (add[32] v14604[32] 4954[32])) (extract[1] 6[32] 7[32] (add[32] v14604[32] 4954[32])) (extract[1] 7[32] 8[32] (add[32] v14604[32] 4954[32]))))}
  sf     = {defs={0x0804836f}, expr=(extract[1] 31[32] 32[32] (add[32] v14604[32] 4954[32]))}
  zf     = {defs={0x0804836f}, expr=(zerop[1] (add[32] v14604[32] 4954[32]))}
  af     = {defs={0x0804836f}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14604[32]) (add[33] (uextend[33] 33[32] v14604[32]) 4954[33]) 4954[33]))}
  cf     = {defs={0x0804836f}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14604[32]) (add[33] (uextend[33] 33[32] v14604[32]) 4954[33]) 4954[33]))}
  of     = {defs={0x0804836f}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14604[32]) (add[33] (uextend[33] 33[32] v14604[32]) 4954[33]) 4954[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14604[32]) (add[33] (uextend[33] 33[32] v14604[32]) 4954[33]) 4954[33])))}
memory:
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v14604[32] 4953[32])} value=(extract[8] 24[32] 32[32] v14609[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v14604[32] 4952[32])} value=(extract[8] 16[32] 24[32] v14609[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v14604[32] 4951[32])} value=(extract[8] 8[32] 16[32] v14609[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v14604[32] 4950[32])} value=(extract[8] 0[32] 8[32] v14609[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14604[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14604[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14604[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14604[32])
== Interval ==
registers:
  edx    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x0804837b[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x804837b:test   edx, edx
== PartialSymbolic ==
registers:
  edx    = v268[32]
  ebx    = v245+0x135a[32]
  esp    = v244+0x4[32]
  eip    = 0x804837d[32]
  pf     = -v314+0x1[1]
  sf     = v315[1]
  zf     = v316[1]
  af     = v317[1]
  cf     = 0x0[1]
  of     = 0x0[1]
memory:
  addr=v245+0x1356[32] value=v268[32]
  addr=v244[32] value=v245[32]
== Symbolic ==
registers:
  edx    = v14609[32]
  ebx    = {defs={0x0804836f}, expr=(add[32] v14604[32] 4954[32])}
  esp    = {defs={0x0804836e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x0804837b}, expr=0x0804837d[32]}
  pf     = {defs={0x0804837b}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] v14609[32] v14609[32])) (extract[1] 1[32] 2[32] (bv-and[32] v14609[32] v14609[32])) (extract[1] 2[32] 3[32] (bv-and[32] v14609[32] v14609[32])) (extract[1] 3[32] 4[32] (bv-and[32] v14609[32] v14609[32])) (extract[1] 4[32] 5[32] (bv-and[32] v14609[32] v14609[32])) (extract[1] 5[32] 6[32] (bv-and[32] v14609[32] v14609[32])) (extract[1] 6[32] 7[32] (bv-and[32] v14609[32] v14609[32])) (extract[1] 7[32] 8[32] (bv-and[32] v14609[32] v14609[32]))))}
  sf     = {defs={0x0804837b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v14609[32] v14609[32]))}
  zf     = {defs={0x0804837b}, expr=(zerop[1] (bv-and[32] v14609[32] v14609[32]))}
  af     = v14614[1]
  cf     = 0[1]
  of     = 0[1]
memory:
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v14604[32] 4953[32])} value=(extract[8] 24[32] 32[32] v14609[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v14604[32] 4952[32])} value=(extract[8] 16[32] 24[32] v14609[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v14604[32] 4951[32])} value=(extract[8] 8[32] 16[32] v14609[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v14604[32] 4950[32])} value=(extract[8] 0[32] 8[32] v14609[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14604[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14604[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14604[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14604[32])
== Interval ==
registers:
  edx    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x0804837d[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  af     = 0..1[1]
  cf     = 0[1]
  of     = 0[1]
memory:

0x804837d:je     0x08048384<<Insn>>
== PartialSymbolic ==
registers:
  edx    = v268[32]
  ebx    = v245+0x135a[32]
  esp    = v244+0x4[32]
  eip    = v318[32]
  pf     = -v314+0x1[1]
  sf     = v315[1]
  zf     = v316[1]
  af     = v317[1]
  cf     = 0x0[1]
  of     = 0x0[1]
memory:
  addr=v245+0x1356[32] value=v268[32]
  addr=v244[32] value=v245[32]
== Symbolic ==
registers:
  edx    = v14609[32]
  ebx    = {defs={0x0804836f}, expr=(add[32] v14604[32] 4954[32])}
  esp    = {defs={0x0804836e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x0804837b,0x0804837d}, expr=(ite[32] (zerop[1] (bv-and[32] v14609[32] v14609[32])) 0x08048384[32] 0x0804837f[32])}
  pf     = {defs={0x0804837b}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] v14609[32] v14609[32])) (extract[1] 1[32] 2[32] (bv-and[32] v14609[32] v14609[32])) (extract[1] 2[32] 3[32] (bv-and[32] v14609[32] v14609[32])) (extract[1] 3[32] 4[32] (bv-and[32] v14609[32] v14609[32])) (extract[1] 4[32] 5[32] (bv-and[32] v14609[32] v14609[32])) (extract[1] 5[32] 6[32] (bv-and[32] v14609[32] v14609[32])) (extract[1] 6[32] 7[32] (bv-and[32] v14609[32] v14609[32])) (extract[1] 7[32] 8[32] (bv-and[32] v14609[32] v14609[32]))))}
  sf     = {defs={0x0804837b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v14609[32] v14609[32]))}
  zf     = {defs={0x0804837b}, expr=(zerop[1] (bv-and[32] v14609[32] v14609[32]))}
  af     = v14614[1]
  cf     = 0[1]
  of     = 0[1]
memory:
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v14604[32] 4953[32])} value=(extract[8] 24[32] 32[32] v14609[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v14604[32] 4952[32])} value=(extract[8] 16[32] 24[32] v14609[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v14604[32] 4951[32])} value=(extract[8] 8[32] 16[32] v14609[32])
  addr={defs={0x0804836f,0x08048375}, expr=(add[32] v14604[32] 4950[32])} value=(extract[8] 0[32] 8[32] v14609[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14604[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14604[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14604[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14604[32])
== Interval ==
registers:
  edx    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x08048384[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  af     = 0..1[1]
  cf     = 0[1]
  of     = 0[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x804837f:call   0x08048330<__gmon_start__@plt>
== PartialSymbolic ==
registers:
  esp    = v320-0x4[32]
  eip    = 0x8048330[32]
memory:
  addr=v320-0x4[32] value=0x8048384[32]
== Symbolic ==
registers:
  esp    = {defs={0x0804837f}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x08048330[32]
memory:
  addr={defs={0x0804837f}, expr=(add[32] esp_0[32] -1[32])} value={defs={0x0804837f}, expr=8[8]}
  addr={defs={0x0804837f}, expr=(add[32] esp_0[32] -2[32])} value={defs={0x0804837f}, expr=4[8]}
  addr={defs={0x0804837f}, expr=(add[32] esp_0[32] -3[32])} value={defs={0x0804837f}, expr=-125[8]}
  addr={defs={0x0804837f}, expr=(add[32] esp_0[32] -4[32])} value={defs={0x0804837f}, expr=-124[8]}
== Interval ==
registers:
  esp    = doubleword[32]
  eip    = 0x08048330[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048384:pop    eax
== PartialSymbolic ==
registers:
  eax    = v323[32]
  esp    = v322+0x4[32]
  eip    = 0x8048385[32]
memory:
  addr=v322[32] value=v323[32]
== Symbolic ==
registers:
  eax    = v14619[32]
  esp    = {defs={0x08048384}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x08048384}, expr=0x08048385[32]}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14619[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14619[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14619[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14619[32])
== Interval ==
registers:
  eax    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x08048385[32]
memory:

0x8048385:pop    ebx
== PartialSymbolic ==
registers:
  eax    = v323[32]
  ebx    = v325[32]
  esp    = v322+0x8[32]
  eip    = 0x8048386[32]
memory:
  addr=v322+0x4[32] value=v325[32]
  addr=v322[32] value=v323[32]
== Symbolic ==
registers:
  eax    = v14619[32]
  ebx    = v14624[32]
  esp    = {defs={0x08048384,0x08048385}, expr=(add[32] esp_0[32] 8[32])}
  eip    = {defs={0x08048385}, expr=0x08048386[32]}
memory:
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14624[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14624[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14624[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14624[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14619[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14619[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14619[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14619[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x08048386[32]
memory:

0x8048386:leave  
== PartialSymbolic ==
registers:
  eax    = v323[32]
  ebx    = v325[32]
  esp    = v327+0x4[32]
  ebp    = v328[32]
  eip    = 0x8048387[32]
memory:
  addr=v327[32] value=v328[32]
  addr=v322+0x4[32] value=v325[32]
  addr=v322[32] value=v323[32]
== Symbolic ==
registers:
  eax    = v14619[32]
  ebx    = v14624[32]
  esp    = {defs={0x08048386}, expr=(add[32] ebp_0[32] 4[32])}
  ebp    = v14630[32]
  eip    = {defs={0x08048386}, expr=0x08048387[32]}
memory:
  addr=(add[32] ebp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14630[32])
  addr=(add[32] ebp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14630[32])
  addr=(add[32] ebp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14630[32])
  addr=ebp_0[32] value=(extract[8] 0[32] 8[32] v14630[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14624[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14624[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14624[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14624[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14619[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14619[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14619[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14619[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048387[32]
memory:

0x8048387:ret    
== PartialSymbolic ==
registers:
  eax    = v323[32]
  ebx    = v325[32]
  esp    = v327+0x8[32]
  ebp    = v328[32]
  eip    = v390[32]
memory:
  addr=v327+0x4[32] value=v390[32]
  addr=v327[32] value=v328[32]
  addr=v322+0x4[32] value=v325[32]
  addr=v322[32] value=v323[32]
== Symbolic ==
registers:
  eax    = v14619[32]
  ebx    = v14624[32]
  esp    = {defs={0x08048386,0x08048387}, expr=(add[32] ebp_0[32] 8[32])}
  ebp    = v14630[32]
  eip    = v14635[32]
memory:
  addr={defs={0x08048386}, expr=(add[32] ebp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14635[32])
  addr={defs={0x08048386}, expr=(add[32] ebp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14635[32])
  addr={defs={0x08048386}, expr=(add[32] ebp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14635[32])
  addr={defs={0x08048386}, expr=(add[32] ebp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14635[32])
  addr=(add[32] ebp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14630[32])
  addr=(add[32] ebp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14630[32])
  addr=(add[32] ebp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14630[32])
  addr=ebp_0[32] value=(extract[8] 0[32] 8[32] v14630[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14624[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14624[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14624[32])
  addr={defs={0x08048384}, expr=(add[32] esp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14624[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14619[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14619[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14619[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14619[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = doubleword[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048390:push   ebp
== PartialSymbolic ==
registers:
  esp    = v453-0x4[32]
  ebp    = v454[32]
  eip    = 0x8048391[32]
memory:
  addr=v453-0x4[32] value=v454[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048390}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048390}, expr=0x08048391[32]}
memory:
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048391[32]
memory:

0x8048391:mov    ebp, esp
== PartialSymbolic ==
registers:
  esp    = v453-0x4[32]
  ebp    = v453-0x4[32]
  eip    = 0x8048393[32]
memory:
  addr=v453-0x4[32] value=v454[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048390}, expr=(add[32] esp_0[32] -4[32])}
  ebp    = {defs={0x08048390}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048391}, expr=0x08048393[32]}
memory:
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048393[32]
memory:

0x8048393:sub    esp, 0x08
== PartialSymbolic ==
registers:
  esp    = v453-0xc[32]
  ebp    = v453-0x4[32]
  eip    = 0x8048396[32]
  pf     = -v469+0x1[1]
  sf     = v470[1]
  zf     = v471[1]
  af     = -v474+0x1[1]
  cf     = -v472+0x1[1]
  of     = v475[1]
memory:
  addr=v453-0x4[32] value=v454[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048390,0x08048393}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048390}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048393}, expr=0x08048396[32]}
  pf     = {defs={0x08048390,0x08048393}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x08048390,0x08048393}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x08048390,0x08048393}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x08048390,0x08048393}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  cf     = {defs={0x08048390,0x08048393}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x08048390,0x08048393}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
memory:
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048396[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048396:cmp    BYTE PTR ds:[0x080496f4<.bss>], 0x00
== PartialSymbolic ==
registers:
  esp    = v453-0xc[32]
  ebp    = v453-0x4[32]
  eip    = 0x804839d[32]
  pf     = -v518+0x1[1]
  sf     = v519[1]
  zf     = v520[1]
  af     = -v523+0x1[1]
  cf     = -v521+0x1[1]
  of     = v524[1]
memory:
  addr=0x80496f4[32] value=v476[8]
  addr=v453-0x4[32] value=v454[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048390,0x08048393}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048390}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048396}, expr=0x0804839d[32]}
  pf     = {defs={0x08048396}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] v14643[8]) (extract[1] 1[32] 2[32] v14643[8]) (extract[1] 2[32] 3[32] v14643[8]) (extract[1] 3[32] 4[32] v14643[8]) (extract[1] 4[32] 5[32] v14643[8]) (extract[1] 5[32] 6[32] v14643[8]) (extract[1] 6[32] 7[32] v14643[8]) (extract[1] 7[32] 8[32] v14643[8])))}
  sf     = {defs={0x08048396}, expr=(extract[1] 7[32] 8[32] v14643[8])}
  zf     = {defs={0x08048396}, expr=(zerop[1] v14643[8])}
  af     = {defs={0x08048396}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[9] (uextend[9] 9[32] v14643[8]) (add[9] (uextend[9] 9[32] v14643[8]) -256[9]) 255[9])))}
  cf     = {defs={0x08048396}, expr=(invert[1] (extract[1] 8[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v14643[8]) (add[9] (uextend[9] 9[32] v14643[8]) -256[9]) 255[9])))}
  of     = {defs={0x08048396}, expr=(bv-xor[1] (extract[1] 8[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v14643[8]) (add[9] (uextend[9] 9[32] v14643[8]) -256[9]) 255[9])) (extract[1] 7[32] 8[32] (bv-xor[9] (uextend[9] 9[32] v14643[8]) (add[9] (uextend[9] 9[32] v14643[8]) -256[9]) 255[9])))}
memory:
  addr=0x080496f4[32] value=v14643[8]
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x0804839d[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0[1]
  cf     = 0[1]
  of     = 0[1]
memory:

0x804839d:jne    0x080483cc<<Insn>>
== PartialSymbolic ==
registers:
  esp    = v453-0xc[32]
  ebp    = v453-0x4[32]
  eip    = v525[32]
  pf     = -v518+0x1[1]
  sf     = v519[1]
  zf     = v520[1]
  af     = -v523+0x1[1]
  cf     = -v521+0x1[1]
  of     = v524[1]
memory:
  addr=0x80496f4[32] value=v476[8]
  addr=v453-0x4[32] value=v454[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048390,0x08048393}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048390}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048396,0x0804839d}, expr=(ite[32] (invert[1] (zerop[1] v14643[8])) 0x080483cc[32] 0x0804839f[32])}
  pf     = {defs={0x08048396}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] v14643[8]) (extract[1] 1[32] 2[32] v14643[8]) (extract[1] 2[32] 3[32] v14643[8]) (extract[1] 3[32] 4[32] v14643[8]) (extract[1] 4[32] 5[32] v14643[8]) (extract[1] 5[32] 6[32] v14643[8]) (extract[1] 6[32] 7[32] v14643[8]) (extract[1] 7[32] 8[32] v14643[8])))}
  sf     = {defs={0x08048396}, expr=(extract[1] 7[32] 8[32] v14643[8])}
  zf     = {defs={0x08048396}, expr=(zerop[1] v14643[8])}
  af     = {defs={0x08048396}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[9] (uextend[9] 9[32] v14643[8]) (add[9] (uextend[9] 9[32] v14643[8]) -256[9]) 255[9])))}
  cf     = {defs={0x08048396}, expr=(invert[1] (extract[1] 8[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v14643[8]) (add[9] (uextend[9] 9[32] v14643[8]) -256[9]) 255[9])))}
  of     = {defs={0x08048396}, expr=(bv-xor[1] (extract[1] 8[32] 9[32] (bv-xor[9] (uextend[9] 9[32] v14643[8]) (add[9] (uextend[9] 9[32] v14643[8]) -256[9]) 255[9])) (extract[1] 7[32] 8[32] (bv-xor[9] (uextend[9] 9[32] v14643[8]) (add[9] (uextend[9] 9[32] v14643[8]) -256[9]) 255[9])))}
memory:
  addr=0x080496f4[32] value=v14643[8]
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048390}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x0804839f, 0x080483cc[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0[1]
  cf     = 0[1]
  of     = 0[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x804839f:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
== PartialSymbolic ==
registers:
  eax    = v527[32]
  eip    = 0x80483a4[32]
memory:
  addr=0x80496f0[32] value=v527[32]
== Symbolic ==
registers:
  eax    = v14646[32]
  eip    = {defs={0x0804839f}, expr=0x080483a4[32]}
memory:
  addr=0x080496f3[32] value=(extract[8] 24[32] 32[32] v14646[32])
  addr=0x080496f2[32] value=(extract[8] 16[32] 24[32] v14646[32])
  addr=0x080496f1[32] value=(extract[8] 8[32] 16[32] v14646[32])
  addr=0x080496f0[32] value=(extract[8] 0[32] 8[32] v14646[32])
== Interval ==
registers:
  eax    = doubleword[32]
  eip    = 0x080483a4[32]
memory:

0x80483a4:mov    edx, DWORD PTR ds:[eax]
== PartialSymbolic ==
registers:
  eax    = v527[32]
  edx    = v529[32]
  eip    = 0x80483a6[32]
memory:
  addr=v527[32] value=v529[32]
  addr=0x80496f0[32] value=v527[32]
== Symbolic ==
registers:
  eax    = v14646[32]
  edx    = v14651[32]
  eip    = {defs={0x080483a4}, expr=0x080483a6[32]}
memory:
  addr=(add[32] v14646[32] 3[32]) value=(extract[8] 24[32] 32[32] v14651[32])
  addr=(add[32] v14646[32] 2[32]) value=(extract[8] 16[32] 24[32] v14651[32])
  addr=(add[32] v14646[32] 1[32]) value=(extract[8] 8[32] 16[32] v14651[32])
  addr=v14646[32] value=(extract[8] 0[32] 8[32] v14651[32])
  addr=0x080496f3[32] value=(extract[8] 24[32] 32[32] v14646[32])
  addr=0x080496f2[32] value=(extract[8] 16[32] 24[32] v14646[32])
  addr=0x080496f1[32] value=(extract[8] 8[32] 16[32] v14646[32])
  addr=0x080496f0[32] value=(extract[8] 0[32] 8[32] v14646[32])
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  eip    = 0x080483a6[32]
memory:

0x80483a6:test   edx, edx
== PartialSymbolic ==
registers:
  eax    = v527[32]
  edx    = v529[32]
  eip    = 0x80483a8[32]
  pf     = -v571+0x1[1]
  sf     = v572[1]
  zf     = v573[1]
  of     = 0x0[1]
  af     = v574[1]
  cf     = 0x0[1]
memory:
  addr=v527[32] value=v529[32]
  addr=0x80496f0[32] value=v527[32]
== Symbolic ==
registers:
  eax    = v14646[32]
  edx    = v14651[32]
  eip    = {defs={0x080483a6}, expr=0x080483a8[32]}
  pf     = {defs={0x080483a6}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] v14651[32] v14651[32])) (extract[1] 1[32] 2[32] (bv-and[32] v14651[32] v14651[32])) (extract[1] 2[32] 3[32] (bv-and[32] v14651[32] v14651[32])) (extract[1] 3[32] 4[32] (bv-and[32] v14651[32] v14651[32])) (extract[1] 4[32] 5[32] (bv-and[32] v14651[32] v14651[32])) (extract[1] 5[32] 6[32] (bv-and[32] v14651[32] v14651[32])) (extract[1] 6[32] 7[32] (bv-and[32] v14651[32] v14651[32])) (extract[1] 7[32] 8[32] (bv-and[32] v14651[32] v14651[32]))))}
  sf     = {defs={0x080483a6}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v14651[32] v14651[32]))}
  zf     = {defs={0x080483a6}, expr=(zerop[1] (bv-and[32] v14651[32] v14651[32]))}
  of     = 0[1]
  af     = v14656[1]
  cf     = 0[1]
memory:
  addr=(add[32] v14646[32] 3[32]) value=(extract[8] 24[32] 32[32] v14651[32])
  addr=(add[32] v14646[32] 2[32]) value=(extract[8] 16[32] 24[32] v14651[32])
  addr=(add[32] v14646[32] 1[32]) value=(extract[8] 8[32] 16[32] v14651[32])
  addr=v14646[32] value=(extract[8] 0[32] 8[32] v14651[32])
  addr=0x080496f3[32] value=(extract[8] 24[32] 32[32] v14646[32])
  addr=0x080496f2[32] value=(extract[8] 16[32] 24[32] v14646[32])
  addr=0x080496f1[32] value=(extract[8] 8[32] 16[32] v14646[32])
  addr=0x080496f0[32] value=(extract[8] 0[32] 8[32] v14646[32])
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  eip    = 0x080483a8[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x80483a8:je     0x080483c5<<Insn>>
== PartialSymbolic ==
registers:
  eax    = v527[32]
  edx    = v529[32]
  eip    = v575[32]
  pf     = -v571+0x1[1]
  sf     = v572[1]
  zf     = v573[1]
  of     = 0x0[1]
  af     = v574[1]
  cf     = 0x0[1]
memory:
  addr=v527[32] value=v529[32]
  addr=0x80496f0[32] value=v527[32]
== Symbolic ==
registers:
  eax    = v14646[32]
  edx    = v14651[32]
  eip    = {defs={0x080483a6,0x080483a8}, expr=(ite[32] (zerop[1] (bv-and[32] v14651[32] v14651[32])) 0x080483c5[32] 0x080483aa[32])}
  pf     = {defs={0x080483a6}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] v14651[32] v14651[32])) (extract[1] 1[32] 2[32] (bv-and[32] v14651[32] v14651[32])) (extract[1] 2[32] 3[32] (bv-and[32] v14651[32] v14651[32])) (extract[1] 3[32] 4[32] (bv-and[32] v14651[32] v14651[32])) (extract[1] 4[32] 5[32] (bv-and[32] v14651[32] v14651[32])) (extract[1] 5[32] 6[32] (bv-and[32] v14651[32] v14651[32])) (extract[1] 6[32] 7[32] (bv-and[32] v14651[32] v14651[32])) (extract[1] 7[32] 8[32] (bv-and[32] v14651[32] v14651[32]))))}
  sf     = {defs={0x080483a6}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v14651[32] v14651[32]))}
  zf     = {defs={0x080483a6}, expr=(zerop[1] (bv-and[32] v14651[32] v14651[32]))}
  of     = 0[1]
  af     = v14656[1]
  cf     = 0[1]
memory:
  addr=(add[32] v14646[32] 3[32]) value=(extract[8] 24[32] 32[32] v14651[32])
  addr=(add[32] v14646[32] 2[32]) value=(extract[8] 16[32] 24[32] v14651[32])
  addr=(add[32] v14646[32] 1[32]) value=(extract[8] 8[32] 16[32] v14651[32])
  addr=v14646[32] value=(extract[8] 0[32] 8[32] v14651[32])
  addr=0x080496f3[32] value=(extract[8] 24[32] 32[32] v14646[32])
  addr=0x080496f2[32] value=(extract[8] 16[32] 24[32] v14646[32])
  addr=0x080496f1[32] value=(extract[8] 8[32] 16[32] v14646[32])
  addr=0x080496f0[32] value=(extract[8] 0[32] 8[32] v14646[32])
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  eip    = 0x080483c5[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80483aa:lea    esi, [esi + 0x00000000]
== PartialSymbolic ==
registers:
  esi    = v577[32]
  eip    = 0x80483b0[32]
memory:
== Symbolic ==
registers:
  eip    = {defs={0x080483aa}, expr=0x080483b0[32]}
memory:
== Interval ==
registers:
  esi    = doubleword[32]
  eip    = 0x080483b0[32]
memory:

0x80483b0:add    eax, 0x04
== PartialSymbolic ==
registers:
  eax    = v578+0x4[32]
  esi    = v577[32]
  eip    = 0x80483b3[32]
  pf     = -v593+0x1[1]
  sf     = v594[1]
  zf     = v595[1]
  af     = v598[1]
  cf     = v596[1]
  of     = v599[1]
memory:
== Symbolic ==
registers:
  eax    = {defs={0x080483b0}, expr=(add[32] eax_0[32] 4[32])}
  eip    = {defs={0x080483b0}, expr=0x080483b3[32]}
  pf     = {defs={0x080483b0}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] 4[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] 4[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] 4[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] 4[32])) (extract[1] 4[32] 5[32] (add[32] eax_0[32] 4[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] 4[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] 4[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] 4[32]))))}
  sf     = {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (add[32] eax_0[32] 4[32]))}
  zf     = {defs={0x080483b0}, expr=(zerop[1] (add[32] eax_0[32] 4[32]))}
  af     = {defs={0x080483b0}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] eax_0[32]) (add[33] (uextend[33] 33[32] eax_0[32]) 4[33]) 4[33]))}
  cf     = {defs={0x080483b0}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] eax_0[32]) (add[33] (uextend[33] 33[32] eax_0[32]) 4[33]) 4[33]))}
  of     = {defs={0x080483b0}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] eax_0[32]) (add[33] (uextend[33] 33[32] eax_0[32]) 4[33]) 4[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] eax_0[32]) (add[33] (uextend[33] 33[32] eax_0[32]) 4[33]) 4[33])))}
memory:
== Interval ==
registers:
  eax    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x080483b3[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80483b3:mov    DWORD PTR ds:[0x080496f0<.data+8>], eax
== PartialSymbolic ==
registers:
  eax    = v578+0x4[32]
  esi    = v577[32]
  eip    = 0x80483b8[32]
  pf     = -v593+0x1[1]
  sf     = v594[1]
  zf     = v595[1]
  af     = v598[1]
  cf     = v596[1]
  of     = v599[1]
memory:
  addr=0x80496f0[32] value=v578+0x4[32]
== Symbolic ==
registers:
  eax    = {defs={0x080483b0}, expr=(add[32] eax_0[32] 4[32])}
  eip    = {defs={0x080483b3}, expr=0x080483b8[32]}
  pf     = {defs={0x080483b0}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] 4[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] 4[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] 4[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] 4[32])) (extract[1] 4[32] 5[32] (add[32] eax_0[32] 4[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] 4[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] 4[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] 4[32]))))}
  sf     = {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (add[32] eax_0[32] 4[32]))}
  zf     = {defs={0x080483b0}, expr=(zerop[1] (add[32] eax_0[32] 4[32]))}
  af     = {defs={0x080483b0}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] eax_0[32]) (add[33] (uextend[33] 33[32] eax_0[32]) 4[33]) 4[33]))}
  cf     = {defs={0x080483b0}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] eax_0[32]) (add[33] (uextend[33] 33[32] eax_0[32]) 4[33]) 4[33]))}
  of     = {defs={0x080483b0}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] eax_0[32]) (add[33] (uextend[33] 33[32] eax_0[32]) 4[33]) 4[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] eax_0[32]) (add[33] (uextend[33] 33[32] eax_0[32]) 4[33]) 4[33])))}
memory:
  addr=0x080496f3[32] value={defs={0x080483b0}, expr=(extract[8] 24[32] 32[32] (add[32] eax_0[32] 4[32]))}
  addr=0x080496f2[32] value={defs={0x080483b0}, expr=(extract[8] 16[32] 24[32] (add[32] eax_0[32] 4[32]))}
  addr=0x080496f1[32] value={defs={0x080483b0}, expr=(extract[8] 8[32] 16[32] (add[32] eax_0[32] 4[32]))}
  addr=0x080496f0[32] value={defs={0x080483b0}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] 4[32]))}
== Interval ==
registers:
  eax    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x080483b8[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80483b8:call   edx
== PartialSymbolic ==
registers:
  eax    = v578+0x4[32]
  edx    = v601[32]
  esp    = v600-0x4[32]
  esi    = v577[32]
  eip    = v601[32]
  pf     = -v593+0x1[1]
  sf     = v594[1]
  zf     = v595[1]
  af     = v598[1]
  cf     = v596[1]
  of     = v599[1]
memory:
  addr=v600-0x4[32] value=0x80483ba[32]
  addr=0x80496f0[32] value=v578+0x4[32]
== Symbolic ==
registers:
  eax    = {defs={0x080483b0}, expr=(add[32] eax_0[32] 4[32])}
  esp    = {defs={0x080483b8}, expr=(add[32] esp_0[32] -4[32])}
  eip    = edx_0[32]
  pf     = {defs={0x080483b0}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] eax_0[32] 4[32])) (extract[1] 1[32] 2[32] (add[32] eax_0[32] 4[32])) (extract[1] 2[32] 3[32] (add[32] eax_0[32] 4[32])) (extract[1] 3[32] 4[32] (add[32] eax_0[32] 4[32])) (extract[1] 4[32] 5[32] (add[32] eax_0[32] 4[32])) (extract[1] 5[32] 6[32] (add[32] eax_0[32] 4[32])) (extract[1] 6[32] 7[32] (add[32] eax_0[32] 4[32])) (extract[1] 7[32] 8[32] (add[32] eax_0[32] 4[32]))))}
  sf     = {defs={0x080483b0}, expr=(extract[1] 31[32] 32[32] (add[32] eax_0[32] 4[32]))}
  zf     = {defs={0x080483b0}, expr=(zerop[1] (add[32] eax_0[32] 4[32]))}
  af     = {defs={0x080483b0}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] eax_0[32]) (add[33] (uextend[33] 33[32] eax_0[32]) 4[33]) 4[33]))}
  cf     = {defs={0x080483b0}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] eax_0[32]) (add[33] (uextend[33] 33[32] eax_0[32]) 4[33]) 4[33]))}
  of     = {defs={0x080483b0}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] eax_0[32]) (add[33] (uextend[33] 33[32] eax_0[32]) 4[33]) 4[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] eax_0[32]) (add[33] (uextend[33] 33[32] eax_0[32]) 4[33]) 4[33])))}
memory:
  addr={defs={0x080483b8}, expr=(add[32] esp_0[32] -1[32])} value={defs={0x080483b8}, expr=8[8]}
  addr={defs={0x080483b8}, expr=(add[32] esp_0[32] -2[32])} value={defs={0x080483b8}, expr=4[8]}
  addr={defs={0x080483b8}, expr=(add[32] esp_0[32] -3[32])} value={defs={0x080483b8}, expr=-125[8]}
  addr={defs={0x080483b8}, expr=(add[32] esp_0[32] -4[32])} value={defs={0x080483b8}, expr=-70[8]}
  addr=0x080496f3[32] value={defs={0x080483b0}, expr=(extract[8] 24[32] 32[32] (add[32] eax_0[32] 4[32]))}
  addr=0x080496f2[32] value={defs={0x080483b0}, expr=(extract[8] 16[32] 24[32] (add[32] eax_0[32] 4[32]))}
  addr=0x080496f1[32] value={defs={0x080483b0}, expr=(extract[8] 8[32] 16[32] (add[32] eax_0[32] 4[32]))}
  addr=0x080496f0[32] value={defs={0x080483b0}, expr=(extract[8] 0[32] 8[32] (add[32] eax_0[32] 4[32]))}
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  esp    = doubleword[32]
  esi    = doubleword[32]
  eip    = doubleword[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0<.data+8>]
== PartialSymbolic ==
registers:
  eax    = v603[32]
  eip    = 0x80483bf[32]
memory:
  addr=0x80496f0[32] value=v603[32]
== Symbolic ==
registers:
  eax    = v14663[32]
  eip    = {defs={0x080483ba}, expr=0x080483bf[32]}
memory:
  addr=0x080496f3[32] value=(extract[8] 24[32] 32[32] v14663[32])
  addr=0x080496f2[32] value=(extract[8] 16[32] 24[32] v14663[32])
  addr=0x080496f1[32] value=(extract[8] 8[32] 16[32] v14663[32])
  addr=0x080496f0[32] value=(extract[8] 0[32] 8[32] v14663[32])
== Interval ==
registers:
  eax    = doubleword[32]
  eip    = 0x080483bf[32]
memory:

0x80483bf:mov    edx, DWORD PTR ds:[eax]
== PartialSymbolic ==
registers:
  eax    = v603[32]
  edx    = v605[32]
  eip    = 0x80483c1[32]
memory:
  addr=v603[32] value=v605[32]
  addr=0x80496f0[32] value=v603[32]
== Symbolic ==
registers:
  eax    = v14663[32]
  edx    = v14668[32]
  eip    = {defs={0x080483bf}, expr=0x080483c1[32]}
memory:
  addr=(add[32] v14663[32] 3[32]) value=(extract[8] 24[32] 32[32] v14668[32])
  addr=(add[32] v14663[32] 2[32]) value=(extract[8] 16[32] 24[32] v14668[32])
  addr=(add[32] v14663[32] 1[32]) value=(extract[8] 8[32] 16[32] v14668[32])
  addr=v14663[32] value=(extract[8] 0[32] 8[32] v14668[32])
  addr=0x080496f3[32] value=(extract[8] 24[32] 32[32] v14663[32])
  addr=0x080496f2[32] value=(extract[8] 16[32] 24[32] v14663[32])
  addr=0x080496f1[32] value=(extract[8] 8[32] 16[32] v14663[32])
  addr=0x080496f0[32] value=(extract[8] 0[32] 8[32] v14663[32])
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  eip    = 0x080483c1[32]
memory:

0x80483c1:test   edx, edx
== PartialSymbolic ==
registers:
  eax    = v603[32]
  edx    = v605[32]
  eip    = 0x80483c3[32]
  pf     = -v647+0x1[1]
  sf     = v648[1]
  zf     = v649[1]
  of     = 0x0[1]
  af     = v650[1]
  cf     = 0x0[1]
memory:
  addr=v603[32] value=v605[32]
  addr=0x80496f0[32] value=v603[32]
== Symbolic ==
registers:
  eax    = v14663[32]
  edx    = v14668[32]
  eip    = {defs={0x080483c1}, expr=0x080483c3[32]}
  pf     = {defs={0x080483c1}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] v14668[32] v14668[32])) (extract[1] 1[32] 2[32] (bv-and[32] v14668[32] v14668[32])) (extract[1] 2[32] 3[32] (bv-and[32] v14668[32] v14668[32])) (extract[1] 3[32] 4[32] (bv-and[32] v14668[32] v14668[32])) (extract[1] 4[32] 5[32] (bv-and[32] v14668[32] v14668[32])) (extract[1] 5[32] 6[32] (bv-and[32] v14668[32] v14668[32])) (extract[1] 6[32] 7[32] (bv-and[32] v14668[32] v14668[32])) (extract[1] 7[32] 8[32] (bv-and[32] v14668[32] v14668[32]))))}
  sf     = {defs={0x080483c1}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v14668[32] v14668[32]))}
  zf     = {defs={0x080483c1}, expr=(zerop[1] (bv-and[32] v14668[32] v14668[32]))}
  of     = 0[1]
  af     = v14673[1]
  cf     = 0[1]
memory:
  addr=(add[32] v14663[32] 3[32]) value=(extract[8] 24[32] 32[32] v14668[32])
  addr=(add[32] v14663[32] 2[32]) value=(extract[8] 16[32] 24[32] v14668[32])
  addr=(add[32] v14663[32] 1[32]) value=(extract[8] 8[32] 16[32] v14668[32])
  addr=v14663[32] value=(extract[8] 0[32] 8[32] v14668[32])
  addr=0x080496f3[32] value=(extract[8] 24[32] 32[32] v14663[32])
  addr=0x080496f2[32] value=(extract[8] 16[32] 24[32] v14663[32])
  addr=0x080496f1[32] value=(extract[8] 8[32] 16[32] v14663[32])
  addr=0x080496f0[32] value=(extract[8] 0[32] 8[32] v14663[32])
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  eip    = 0x080483c3[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x80483c3:jne    0x080483b0<<Insn>>
== PartialSymbolic ==
registers:
  eax    = v603[32]
  edx    = v605[32]
  eip    = v651[32]
  pf     = -v647+0x1[1]
  sf     = v648[1]
  zf     = v649[1]
  of     = 0x0[1]
  af     = v650[1]
  cf     = 0x0[1]
memory:
  addr=v603[32] value=v605[32]
  addr=0x80496f0[32] value=v603[32]
== Symbolic ==
registers:
  eax    = v14663[32]
  edx    = v14668[32]
  eip    = {defs={0x080483c1,0x080483c3}, expr=(ite[32] (invert[1] (zerop[1] (bv-and[32] v14668[32] v14668[32]))) 0x080483b0[32] 0x080483c5[32])}
  pf     = {defs={0x080483c1}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] v14668[32] v14668[32])) (extract[1] 1[32] 2[32] (bv-and[32] v14668[32] v14668[32])) (extract[1] 2[32] 3[32] (bv-and[32] v14668[32] v14668[32])) (extract[1] 3[32] 4[32] (bv-and[32] v14668[32] v14668[32])) (extract[1] 4[32] 5[32] (bv-and[32] v14668[32] v14668[32])) (extract[1] 5[32] 6[32] (bv-and[32] v14668[32] v14668[32])) (extract[1] 6[32] 7[32] (bv-and[32] v14668[32] v14668[32])) (extract[1] 7[32] 8[32] (bv-and[32] v14668[32] v14668[32]))))}
  sf     = {defs={0x080483c1}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v14668[32] v14668[32]))}
  zf     = {defs={0x080483c1}, expr=(zerop[1] (bv-and[32] v14668[32] v14668[32]))}
  of     = 0[1]
  af     = v14673[1]
  cf     = 0[1]
memory:
  addr=(add[32] v14663[32] 3[32]) value=(extract[8] 24[32] 32[32] v14668[32])
  addr=(add[32] v14663[32] 2[32]) value=(extract[8] 16[32] 24[32] v14668[32])
  addr=(add[32] v14663[32] 1[32]) value=(extract[8] 8[32] 16[32] v14668[32])
  addr=v14663[32] value=(extract[8] 0[32] 8[32] v14668[32])
  addr=0x080496f3[32] value=(extract[8] 24[32] 32[32] v14663[32])
  addr=0x080496f2[32] value=(extract[8] 16[32] 24[32] v14663[32])
  addr=0x080496f1[32] value=(extract[8] 8[32] 16[32] v14663[32])
  addr=0x080496f0[32] value=(extract[8] 0[32] 8[32] v14663[32])
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  eip    = 0x080483c5[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80483c5:mov    BYTE PTR ds:[0x080496f4<.bss>], 0x01
== PartialSymbolic ==
registers:
  eip    = 0x80483cc[32]
memory:
  addr=0x80496f4[32] value=0x1[8]
== Symbolic ==
registers:
  eip    = {defs={0x080483c5}, expr=0x080483cc[32]}
memory:
  addr=0x080496f4[32] value=1[8]
== Interval ==
registers:
  eip    = 0x080483cc[32]
memory:

0x80483cc:leave  
== PartialSymbolic ==
registers:
  esp    = v653+0x4[32]
  ebp    = v654[32]
  eip    = 0x80483cd[32]
memory:
  addr=v653[32] value=v654[32]
  addr=0x80496f4[32] value=0x1[8]
== Symbolic ==
registers:
  esp    = {defs={0x080483cc}, expr=(add[32] ebp_0[32] 4[32])}
  ebp    = v14676[32]
  eip    = {defs={0x080483cc}, expr=0x080483cd[32]}
memory:
  addr=(add[32] ebp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14676[32])
  addr=(add[32] ebp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14676[32])
  addr=(add[32] ebp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14676[32])
  addr=ebp_0[32] value=(extract[8] 0[32] 8[32] v14676[32])
  addr=0x080496f4[32] value=1[8]
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080483cd[32]
memory:

0x80483cd:ret    
== PartialSymbolic ==
registers:
  esp    = v653+0x8[32]
  ebp    = v654[32]
  eip    = v682[32]
memory:
  addr=v653+0x4[32] value=v682[32]
  addr=v653[32] value=v654[32]
  addr=0x80496f4[32] value=0x1[8]
== Symbolic ==
registers:
  esp    = {defs={0x080483cc,0x080483cd}, expr=(add[32] ebp_0[32] 8[32])}
  ebp    = v14676[32]
  eip    = v14681[32]
memory:
  addr={defs={0x080483cc}, expr=(add[32] ebp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14681[32])
  addr={defs={0x080483cc}, expr=(add[32] ebp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14681[32])
  addr={defs={0x080483cc}, expr=(add[32] ebp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14681[32])
  addr={defs={0x080483cc}, expr=(add[32] ebp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14681[32])
  addr=(add[32] ebp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14676[32])
  addr=(add[32] ebp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14676[32])
  addr=(add[32] ebp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14676[32])
  addr=ebp_0[32] value=(extract[8] 0[32] 8[32] v14676[32])
  addr=0x080496f4[32] value=1[8]
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = doubleword[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80483d0:push   ebp
== PartialSymbolic ==
registers:
  esp    = v711-0x4[32]
  ebp    = v712[32]
  eip    = 0x80483d1[32]
memory:
  addr=v711-0x4[32] value=v712[32]
== Symbolic ==
registers:
  esp    = {defs={0x080483d0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080483d0}, expr=0x080483d1[32]}
memory:
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080483d1[32]
memory:

0x80483d1:mov    ebp, esp
== PartialSymbolic ==
registers:
  esp    = v711-0x4[32]
  ebp    = v711-0x4[32]
  eip    = 0x80483d3[32]
memory:
  addr=v711-0x4[32] value=v712[32]
== Symbolic ==
registers:
  esp    = {defs={0x080483d0}, expr=(add[32] esp_0[32] -4[32])}
  ebp    = {defs={0x080483d0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080483d1}, expr=0x080483d3[32]}
memory:
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080483d3[32]
memory:

0x80483d3:sub    esp, 0x08
== PartialSymbolic ==
registers:
  esp    = v711-0xc[32]
  ebp    = v711-0x4[32]
  eip    = 0x80483d6[32]
  pf     = -v727+0x1[1]
  sf     = v728[1]
  zf     = v729[1]
  af     = -v732+0x1[1]
  cf     = -v730+0x1[1]
  of     = v733[1]
memory:
  addr=v711-0x4[32] value=v712[32]
== Symbolic ==
registers:
  esp    = {defs={0x080483d0,0x080483d3}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x080483d0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080483d3}, expr=0x080483d6[32]}
  pf     = {defs={0x080483d0,0x080483d3}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x080483d0,0x080483d3}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x080483d0,0x080483d3}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  cf     = {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x080483d0,0x080483d3}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
memory:
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080483d6[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8<.jcr>]
== PartialSymbolic ==
registers:
  eax    = v734[32]
  esp    = v711-0xc[32]
  ebp    = v711-0x4[32]
  eip    = 0x80483db[32]
  pf     = -v727+0x1[1]
  sf     = v728[1]
  zf     = v729[1]
  af     = -v732+0x1[1]
  cf     = -v730+0x1[1]
  of     = v733[1]
memory:
  addr=0x80495f8[32] value=v734[32]
  addr=v711-0x4[32] value=v712[32]
== Symbolic ==
registers:
  eax    = v14689[32]
  esp    = {defs={0x080483d0,0x080483d3}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x080483d0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080483d6}, expr=0x080483db[32]}
  pf     = {defs={0x080483d0,0x080483d3}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x080483d0,0x080483d3}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x080483d0,0x080483d3}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  cf     = {defs={0x080483d0,0x080483d3}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x080483d0,0x080483d3}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
memory:
  addr=0x080495fb[32] value=(extract[8] 24[32] 32[32] v14689[32])
  addr=0x080495fa[32] value=(extract[8] 16[32] 24[32] v14689[32])
  addr=0x080495f9[32] value=(extract[8] 8[32] 16[32] v14689[32])
  addr=0x080495f8[32] value=(extract[8] 0[32] 8[32] v14689[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  eax    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080483db[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80483db:test   eax, eax
== PartialSymbolic ==
registers:
  eax    = v734[32]
  esp    = v711-0xc[32]
  ebp    = v711-0x4[32]
  eip    = 0x80483dd[32]
  pf     = -v776+0x1[1]
  sf     = v777[1]
  zf     = v778[1]
  af     = v779[1]
  cf     = 0x0[1]
  of     = 0x0[1]
memory:
  addr=0x80495f8[32] value=v734[32]
  addr=v711-0x4[32] value=v712[32]
== Symbolic ==
registers:
  eax    = v14689[32]
  esp    = {defs={0x080483d0,0x080483d3}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x080483d0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080483db}, expr=0x080483dd[32]}
  pf     = {defs={0x080483db}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] v14689[32] v14689[32])) (extract[1] 1[32] 2[32] (bv-and[32] v14689[32] v14689[32])) (extract[1] 2[32] 3[32] (bv-and[32] v14689[32] v14689[32])) (extract[1] 3[32] 4[32] (bv-and[32] v14689[32] v14689[32])) (extract[1] 4[32] 5[32] (bv-and[32] v14689[32] v14689[32])) (extract[1] 5[32] 6[32] (bv-and[32] v14689[32] v14689[32])) (extract[1] 6[32] 7[32] (bv-and[32] v14689[32] v14689[32])) (extract[1] 7[32] 8[32] (bv-and[32] v14689[32] v14689[32]))))}
  sf     = {defs={0x080483db}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v14689[32] v14689[32]))}
  zf     = {defs={0x080483db}, expr=(zerop[1] (bv-and[32] v14689[32] v14689[32]))}
  af     = v14694[1]
  cf     = 0[1]
  of     = 0[1]
memory:
  addr=0x080495fb[32] value=(extract[8] 24[32] 32[32] v14689[32])
  addr=0x080495fa[32] value=(extract[8] 16[32] 24[32] v14689[32])
  addr=0x080495f9[32] value=(extract[8] 8[32] 16[32] v14689[32])
  addr=0x080495f8[32] value=(extract[8] 0[32] 8[32] v14689[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  eax    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080483dd[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  af     = 0..1[1]
  cf     = 0[1]
  of     = 0[1]
memory:

0x80483dd:je     0x08048400<<Insn>>
== PartialSymbolic ==
registers:
  eax    = v734[32]
  esp    = v711-0xc[32]
  ebp    = v711-0x4[32]
  eip    = v780[32]
  pf     = -v776+0x1[1]
  sf     = v777[1]
  zf     = v778[1]
  af     = v779[1]
  cf     = 0x0[1]
  of     = 0x0[1]
memory:
  addr=0x80495f8[32] value=v734[32]
  addr=v711-0x4[32] value=v712[32]
== Symbolic ==
registers:
  eax    = v14689[32]
  esp    = {defs={0x080483d0,0x080483d3}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x080483d0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080483db,0x080483dd}, expr=(ite[32] (zerop[1] (bv-and[32] v14689[32] v14689[32])) 0x08048400[32] 0x080483df[32])}
  pf     = {defs={0x080483db}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] v14689[32] v14689[32])) (extract[1] 1[32] 2[32] (bv-and[32] v14689[32] v14689[32])) (extract[1] 2[32] 3[32] (bv-and[32] v14689[32] v14689[32])) (extract[1] 3[32] 4[32] (bv-and[32] v14689[32] v14689[32])) (extract[1] 4[32] 5[32] (bv-and[32] v14689[32] v14689[32])) (extract[1] 5[32] 6[32] (bv-and[32] v14689[32] v14689[32])) (extract[1] 6[32] 7[32] (bv-and[32] v14689[32] v14689[32])) (extract[1] 7[32] 8[32] (bv-and[32] v14689[32] v14689[32]))))}
  sf     = {defs={0x080483db}, expr=(extract[1] 31[32] 32[32] (bv-and[32] v14689[32] v14689[32]))}
  zf     = {defs={0x080483db}, expr=(zerop[1] (bv-and[32] v14689[32] v14689[32]))}
  af     = v14694[1]
  cf     = 0[1]
  of     = 0[1]
memory:
  addr=0x080495fb[32] value=(extract[8] 24[32] 32[32] v14689[32])
  addr=0x080495fa[32] value=(extract[8] 16[32] 24[32] v14689[32])
  addr=0x080495f9[32] value=(extract[8] 8[32] 16[32] v14689[32])
  addr=0x080495f8[32] value=(extract[8] 0[32] 8[32] v14689[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080483d0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  eax    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048400[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  af     = 0..1[1]
  cf     = 0[1]
  of     = 0[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80483df:mov    eax, 0x00000000
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  eip    = 0x80483e4[32]
memory:
== Symbolic ==
registers:
  eax    = 0[32]
  eip    = {defs={0x080483df}, expr=0x080483e4[32]}
memory:
== Interval ==
registers:
  eax    = 0[32]
  eip    = 0x080483e4[32]
memory:

0x80483e4:test   eax, eax
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  eip    = 0x80483e6[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v782[1]
  cf     = 0x0[1]
memory:
== Symbolic ==
registers:
  eax    = 0[32]
  eip    = {defs={0x080483e4}, expr=0x080483e6[32]}
  pf     = {defs={0x080483e4}, expr=1[1]}
  sf     = {defs={0x080483e4}, expr=0[1]}
  zf     = {defs={0x080483e4}, expr=1[1]}
  of     = 0[1]
  af     = v14696[1]
  cf     = 0[1]
memory:
== Interval ==
registers:
  eax    = 0[32]
  eip    = 0x080483e6[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x80483e6:je     0x08048400<<Insn>>
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  eip    = 0x8048400[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v782[1]
  cf     = 0x0[1]
memory:
== Symbolic ==
registers:
  eax    = 0[32]
  eip    = {defs={0x080483e4,0x080483e6}, expr=0x08048400[32]}
  pf     = {defs={0x080483e4}, expr=1[1]}
  sf     = {defs={0x080483e4}, expr=0[1]}
  zf     = {defs={0x080483e4}, expr=1[1]}
  of     = 0[1]
  af     = v14696[1]
  cf     = 0[1]
memory:
== Interval ==
registers:
  eax    = 0[32]
  eip    = 0x08048400[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048400:mov    esp, ebp
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  esp    = v783[32]
  ebp    = v783[32]
  eip    = 0x8048402[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v782[1]
  cf     = 0x0[1]
memory:
== Symbolic ==
registers:
  eax    = 0[32]
  esp    = ebp_0[32]
  eip    = {defs={0x08048400}, expr=0x08048402[32]}
  pf     = {defs={0x080483e4}, expr=1[1]}
  sf     = {defs={0x080483e4}, expr=0[1]}
  zf     = {defs={0x080483e4}, expr=1[1]}
  of     = 0[1]
  af     = v14696[1]
  cf     = 0[1]
memory:
== Interval ==
registers:
  eax    = 0[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048402[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048402:pop    ebp
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  esp    = v783+0x4[32]
  ebp    = v784[32]
  eip    = 0x8048403[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v782[1]
  cf     = 0x0[1]
memory:
  addr=v783[32] value=v784[32]
== Symbolic ==
registers:
  eax    = 0[32]
  esp    = {defs={0x08048402}, expr=(add[32] ebp_0[32] 4[32])}
  ebp    = v14698[32]
  eip    = {defs={0x08048402}, expr=0x08048403[32]}
  pf     = {defs={0x080483e4}, expr=1[1]}
  sf     = {defs={0x080483e4}, expr=0[1]}
  zf     = {defs={0x080483e4}, expr=1[1]}
  of     = 0[1]
  af     = v14696[1]
  cf     = 0[1]
memory:
  addr=(add[32] ebp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14698[32])
  addr=(add[32] ebp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14698[32])
  addr=(add[32] ebp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14698[32])
  addr=ebp_0[32] value=(extract[8] 0[32] 8[32] v14698[32])
== Interval ==
registers:
  eax    = 0[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048403[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048403:ret    
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  esp    = v783+0x8[32]
  ebp    = v784[32]
  eip    = v786[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v782[1]
  cf     = 0x0[1]
memory:
  addr=v783+0x4[32] value=v786[32]
  addr=v783[32] value=v784[32]
== Symbolic ==
registers:
  eax    = 0[32]
  esp    = {defs={0x08048402,0x08048403}, expr=(add[32] ebp_0[32] 8[32])}
  ebp    = v14698[32]
  eip    = v14703[32]
  pf     = {defs={0x080483e4}, expr=1[1]}
  sf     = {defs={0x080483e4}, expr=0[1]}
  zf     = {defs={0x080483e4}, expr=1[1]}
  of     = 0[1]
  af     = v14696[1]
  cf     = 0[1]
memory:
  addr={defs={0x08048402}, expr=(add[32] ebp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14703[32])
  addr={defs={0x08048402}, expr=(add[32] ebp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14703[32])
  addr={defs={0x08048402}, expr=(add[32] ebp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14703[32])
  addr={defs={0x08048402}, expr=(add[32] ebp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14703[32])
  addr=(add[32] ebp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14698[32])
  addr=(add[32] ebp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14698[32])
  addr=(add[32] ebp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14698[32])
  addr=ebp_0[32] value=(extract[8] 0[32] 8[32] v14698[32])
== Interval ==
registers:
  eax    = 0[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = doubleword[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8<.jcr>
== PartialSymbolic ==
registers:
  esp    = v789[32]
  eip    = 0x80483ef[32]
memory:
  addr=v789[32] value=0x80495f8[32]
== Symbolic ==
registers:
  eip    = {defs={0x080483e8}, expr=0x080483ef[32]}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=8[8]
  addr=(add[32] esp_0[32] 2[32]) value=4[8]
  addr=(add[32] esp_0[32] 1[32]) value=-107[8]
  addr=esp_0[32] value=-8[8]
== Interval ==
registers:
  esp    = doubleword[32]
  eip    = 0x080483ef[32]
memory:

0x80483ef:call   0x00000000
== PartialSymbolic ==
registers:
  esp    = v789-0x4[32]
  eip    = 0x0[32]
memory:
  addr=v789-0x4[32] value=0x80483f4[32]
  addr=v789[32] value=0x80495f8[32]
== Symbolic ==
registers:
  esp    = {defs={0x080483ef}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0[32]
memory:
  addr={defs={0x080483ef}, expr=(add[32] esp_0[32] -1[32])} value={defs={0x080483ef}, expr=8[8]}
  addr={defs={0x080483ef}, expr=(add[32] esp_0[32] -2[32])} value={defs={0x080483ef}, expr=4[8]}
  addr={defs={0x080483ef}, expr=(add[32] esp_0[32] -3[32])} value={defs={0x080483ef}, expr=-125[8]}
  addr={defs={0x080483ef}, expr=(add[32] esp_0[32] -4[32])} value={defs={0x080483ef}, expr=-12[8]}
  addr=(add[32] esp_0[32] 3[32]) value=8[8]
  addr=(add[32] esp_0[32] 2[32]) value=4[8]
  addr=(add[32] esp_0[32] 1[32]) value=-107[8]
  addr=esp_0[32] value=-8[8]
== Interval ==
registers:
  esp    = doubleword[32]
  eip    = 0[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80483f4:lea    esi, [esi + 0x00000000]
== PartialSymbolic ==
registers:
  esi    = v791[32]
  eip    = 0x80483fa[32]
memory:
== Symbolic ==
registers:
  eip    = {defs={0x080483f4}, expr=0x080483fa[32]}
memory:
== Interval ==
registers:
  esi    = doubleword[32]
  eip    = 0x080483fa[32]
memory:

0x80483fa:lea    edi, [edi + 0x00000000]
== PartialSymbolic ==
registers:
  esi    = v791[32]
  edi    = v792[32]
  eip    = 0x8048400[32]
memory:
== Symbolic ==
registers:
  eip    = {defs={0x080483fa}, expr=0x08048400[32]}
memory:
== Interval ==
registers:
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x08048400[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048410:push   ebp
== PartialSymbolic ==
registers:
  esp    = v794-0x4[32]
  ebp    = v795[32]
  eip    = 0x8048411[32]
memory:
  addr=v794-0x4[32] value=v795[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048410}, expr=0x08048411[32]}
memory:
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048411[32]
memory:

0x8048411:mov    edx, 0x08048480<handler>
== PartialSymbolic ==
registers:
  edx    = 0x8048480[32]
  esp    = v794-0x4[32]
  ebp    = v795[32]
  eip    = 0x8048416[32]
memory:
  addr=v794-0x4[32] value=v795[32]
== Symbolic ==
registers:
  edx    = 0x08048480[32]
  esp    = {defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048411}, expr=0x08048416[32]}
memory:
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  edx    = 0x08048480[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048416[32]
memory:

0x8048416:mov    ebp, esp
== PartialSymbolic ==
registers:
  edx    = 0x8048480[32]
  esp    = v794-0x4[32]
  ebp    = v794-0x4[32]
  eip    = 0x8048418[32]
memory:
  addr=v794-0x4[32] value=v795[32]
== Symbolic ==
registers:
  edx    = 0x08048480[32]
  esp    = {defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])}
  ebp    = {defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048416}, expr=0x08048418[32]}
memory:
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  edx    = 0x08048480[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048418[32]
memory:

0x8048418:sub    esp, 0x08
== PartialSymbolic ==
registers:
  edx    = 0x8048480[32]
  esp    = v794-0xc[32]
  ebp    = v794-0x4[32]
  eip    = 0x804841b[32]
  pf     = -v810+0x1[1]
  sf     = v811[1]
  zf     = v812[1]
  af     = -v815+0x1[1]
  cf     = -v813+0x1[1]
  of     = v816[1]
memory:
  addr=v794-0x4[32] value=v795[32]
== Symbolic ==
registers:
  edx    = 0x08048480[32]
  esp    = {defs={0x08048410,0x08048418}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048418}, expr=0x0804841b[32]}
  pf     = {defs={0x08048410,0x08048418}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x08048410,0x08048418}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x08048410,0x08048418}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x08048410,0x08048418}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  cf     = {defs={0x08048410,0x08048418}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x08048410,0x08048418}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
memory:
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  edx    = 0x08048480[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x0804841b[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x804841b:and    esp, 0xf0<-0x10>
== PartialSymbolic ==
registers:
  edx    = 0x8048480[32]
  esp    = v817[32]
  ebp    = v794-0x4[32]
  eip    = 0x804841e[32]
  pf     = -v831+0x1[1]
  sf     = v832[1]
  zf     = v833[1]
  af     = v834[1]
  cf     = 0x0[1]
  of     = 0x0[1]
memory:
  addr=v794-0x4[32] value=v795[32]
== Symbolic ==
registers:
  edx    = 0x08048480[32]
  esp    = {defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])}
  ebp    = {defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x0804841b}, expr=0x0804841e[32]}
  pf     = {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 1[32] 2[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 2[32] 3[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 3[32] 4[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 4[32] 5[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 5[32] 6[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 6[32] 7[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 7[32] 8[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]))))}
  sf     = {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]))}
  zf     = {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]))}
  af     = v14716[1]
  cf     = 0[1]
  of     = 0[1]
memory:
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  edx    = 0x08048480[32]
  esp    = 0[32]
  ebp    = doubleword[32]
  eip    = 0x0804841e[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  af     = 0..1[1]
  cf     = 0[1]
  of     = 0[1]
memory:

0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
== PartialSymbolic ==
registers:
  edx    = 0x8048480[32]
  esp    = v817[32]
  ebp    = v794-0x4[32]
  eip    = 0x8048422[32]
  pf     = -v831+0x1[1]
  sf     = v832[1]
  zf     = v833[1]
  af     = v834[1]
  cf     = 0x0[1]
  of     = 0x0[1]
memory:
  addr=v817+0x4[32] value=0x8048480[32]
  addr=v794-0x4[32] value=v795[32]
== Symbolic ==
registers:
  edx    = 0x08048480[32]
  esp    = {defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])}
  ebp    = {defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x0804841e}, expr=0x08048422[32]}
  pf     = {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 1[32] 2[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 2[32] 3[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 3[32] 4[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 4[32] 5[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 5[32] 6[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 6[32] 7[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 7[32] 8[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]))))}
  sf     = {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]))}
  zf     = {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]))}
  af     = v14716[1]
  cf     = 0[1]
  of     = 0[1]
memory:
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 7[32])} value=8[8]
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 6[32])} value=4[8]
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 5[32])} value=-124[8]
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 4[32])} value=-128[8]
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  edx    = 0x08048480[32]
  esp    = 0[32]
  ebp    = doubleword[32]
  eip    = 0x08048422[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  af     = 0..1[1]
  cf     = 0[1]
  of     = 0[1]
memory:

0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
== PartialSymbolic ==
registers:
  edx    = 0x8048480[32]
  esp    = v817[32]
  ebp    = v794-0x4[32]
  eip    = 0x8048429[32]
  pf     = -v831+0x1[1]
  sf     = v832[1]
  zf     = v833[1]
  af     = v834[1]
  cf     = 0x0[1]
  of     = 0x0[1]
memory:
  addr=v817[32] value=0xa[32]
  addr=v817+0x4[32] value=0x8048480[32]
  addr=v794-0x4[32] value=v795[32]
== Symbolic ==
registers:
  edx    = 0x08048480[32]
  esp    = {defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])}
  ebp    = {defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048422}, expr=0x08048429[32]}
  pf     = {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 1[32] 2[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 2[32] 3[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 3[32] 4[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 4[32] 5[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 5[32] 6[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 6[32] 7[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 7[32] 8[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]))))}
  sf     = {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]))}
  zf     = {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]))}
  af     = v14716[1]
  cf     = 0[1]
  of     = 0[1]
memory:
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 3[32])} value=0[8]
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 2[32])} value=0[8]
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 1[32])} value=0[8]
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])} value=10[8]
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 7[32])} value=8[8]
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 6[32])} value=4[8]
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 5[32])} value=-124[8]
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 4[32])} value=-128[8]
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  edx    = 0x08048480[32]
  esp    = 0[32]
  ebp    = doubleword[32]
  eip    = 0x08048429[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  af     = 0..1[1]
  cf     = 0[1]
  of     = 0[1]
memory:

0x8048429:call   0x080482f0<signal@plt>
== PartialSymbolic ==
registers:
  edx    = 0x8048480[32]
  esp    = v817-0x4[32]
  ebp    = v794-0x4[32]
  eip    = 0x80482f0[32]
  pf     = -v831+0x1[1]
  sf     = v832[1]
  zf     = v833[1]
  af     = v834[1]
  cf     = 0x0[1]
  of     = 0x0[1]
memory:
  addr=v817-0x4[32] value=0x804842e[32]
  addr=v817[32] value=0xa[32]
  addr=v817+0x4[32] value=0x8048480[32]
  addr=v794-0x4[32] value=v795[32]
== Symbolic ==
registers:
  edx    = 0x08048480[32]
  esp    = {defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) -4[32])}
  ebp    = {defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x080482f0[32]
  pf     = {defs={0x08048410,0x08048418,0x0804841b}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 1[32] 2[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 2[32] 3[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 3[32] 4[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 4[32] 5[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 5[32] 6[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 6[32] 7[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])) (extract[1] 7[32] 8[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]))))}
  sf     = {defs={0x08048410,0x08048418,0x0804841b}, expr=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]))}
  zf     = {defs={0x08048410,0x08048418,0x0804841b}, expr=(zerop[1] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]))}
  af     = v14716[1]
  cf     = 0[1]
  of     = 0[1]
memory:
  addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) -1[32])} value={defs={0x08048429}, expr=8[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) -2[32])} value={defs={0x08048429}, expr=4[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) -3[32])} value={defs={0x08048429}, expr=-124[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b,0x08048429}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) -4[32])} value={defs={0x08048429}, expr=46[8]}
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 3[32])} value=0[8]
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 2[32])} value=0[8]
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 1[32])} value=0[8]
  addr={defs={0x08048410,0x08048418,0x0804841b}, expr=(bv-and[32] (add[32] esp_0[32] -12[32]) -16[32])} value=10[8]
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 7[32])} value=8[8]
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 6[32])} value=4[8]
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 5[32])} value=-124[8]
  addr={defs={0x08048410,0x08048418,0x0804841b,0x0804841e}, expr=(add[32] (bv-and[32] (add[32] esp_0[32] -12[32]) -16[32]) 4[32])} value=-128[8]
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048410}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  edx    = 0x08048480[32]
  esp    = 0xfffffffc[32]
  ebp    = doubleword[32]
  eip    = 0x080482f0[32]
  pf     = 1[1]
  sf     = 0[1]
  zf     = 1[1]
  af     = 0..1[1]
  cf     = 0[1]
  of     = 0[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x804842e:mov    esp, ebp
== PartialSymbolic ==
registers:
  esp    = v836[32]
  ebp    = v836[32]
  eip    = 0x8048430[32]
memory:
== Symbolic ==
registers:
  esp    = ebp_0[32]
  eip    = {defs={0x0804842e}, expr=0x08048430[32]}
memory:
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048430[32]
memory:

0x8048430:xor    eax, eax
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  esp    = v836[32]
  ebp    = v836[32]
  eip    = 0x8048432[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v838[1]
  cf     = 0x0[1]
memory:
== Symbolic ==
registers:
  eax    = {defs={0x08048430}, expr=0[32]}
  esp    = ebp_0[32]
  eip    = {defs={0x08048430}, expr=0x08048432[32]}
  pf     = {defs={0x08048430}, expr=1[1]}
  sf     = {defs={0x08048430}, expr=0[1]}
  zf     = {defs={0x08048430}, expr=1[1]}
  of     = 0[1]
  af     = v14720[1]
  cf     = 0[1]
memory:
== Interval ==
registers:
  eax    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048432[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048432:pop    ebp
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  esp    = v836+0x4[32]
  ebp    = v839[32]
  eip    = 0x8048433[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v838[1]
  cf     = 0x0[1]
memory:
  addr=v836[32] value=v839[32]
== Symbolic ==
registers:
  eax    = {defs={0x08048430}, expr=0[32]}
  esp    = {defs={0x08048432}, expr=(add[32] ebp_0[32] 4[32])}
  ebp    = v14721[32]
  eip    = {defs={0x08048432}, expr=0x08048433[32]}
  pf     = {defs={0x08048430}, expr=1[1]}
  sf     = {defs={0x08048430}, expr=0[1]}
  zf     = {defs={0x08048430}, expr=1[1]}
  of     = 0[1]
  af     = v14720[1]
  cf     = 0[1]
memory:
  addr=(add[32] ebp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14721[32])
  addr=(add[32] ebp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14721[32])
  addr=(add[32] ebp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14721[32])
  addr=ebp_0[32] value=(extract[8] 0[32] 8[32] v14721[32])
== Interval ==
registers:
  eax    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048433[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048433:ret    
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  esp    = v836+0x8[32]
  ebp    = v839[32]
  eip    = v841[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v838[1]
  cf     = 0x0[1]
memory:
  addr=v836+0x4[32] value=v841[32]
  addr=v836[32] value=v839[32]
== Symbolic ==
registers:
  eax    = {defs={0x08048430}, expr=0[32]}
  esp    = {defs={0x08048432,0x08048433}, expr=(add[32] ebp_0[32] 8[32])}
  ebp    = v14721[32]
  eip    = v14726[32]
  pf     = {defs={0x08048430}, expr=1[1]}
  sf     = {defs={0x08048430}, expr=0[1]}
  zf     = {defs={0x08048430}, expr=1[1]}
  of     = 0[1]
  af     = v14720[1]
  cf     = 0[1]
memory:
  addr={defs={0x08048432}, expr=(add[32] ebp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14726[32])
  addr={defs={0x08048432}, expr=(add[32] ebp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14726[32])
  addr={defs={0x08048432}, expr=(add[32] ebp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14726[32])
  addr={defs={0x08048432}, expr=(add[32] ebp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14726[32])
  addr=(add[32] ebp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14721[32])
  addr=(add[32] ebp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14721[32])
  addr=(add[32] ebp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14721[32])
  addr=ebp_0[32] value=(extract[8] 0[32] 8[32] v14721[32])
== Interval ==
registers:
  eax    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = doubleword[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048440:push   ebp
== PartialSymbolic ==
registers:
  esp    = v844-0x4[32]
  ebp    = v845[32]
  eip    = 0x8048441[32]
memory:
  addr=v844-0x4[32] value=v845[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048440}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048440}, expr=0x08048441[32]}
memory:
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048441[32]
memory:

0x8048441:mov    ebp, esp
== PartialSymbolic ==
registers:
  esp    = v844-0x4[32]
  ebp    = v844-0x4[32]
  eip    = 0x8048443[32]
memory:
  addr=v844-0x4[32] value=v845[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048440}, expr=(add[32] esp_0[32] -4[32])}
  ebp    = {defs={0x08048440}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048441}, expr=0x08048443[32]}
memory:
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048443[32]
memory:

0x8048443:sub    esp, 0x08
== PartialSymbolic ==
registers:
  esp    = v844-0xc[32]
  ebp    = v844-0x4[32]
  eip    = 0x8048446[32]
  pf     = -v860+0x1[1]
  sf     = v861[1]
  zf     = v862[1]
  af     = -v865+0x1[1]
  cf     = -v863+0x1[1]
  of     = v866[1]
memory:
  addr=v844-0x4[32] value=v845[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048440}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048443}, expr=0x08048446[32]}
  pf     = {defs={0x08048440,0x08048443}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x08048440,0x08048443}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x08048440,0x08048443}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  cf     = {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x08048440,0x08048443}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
memory:
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048446[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
== PartialSymbolic ==
registers:
  esp    = v844-0xc[32]
  ebp    = v844-0x4[32]
  eip    = 0x804844d[32]
  pf     = -v860+0x1[1]
  sf     = v861[1]
  zf     = v862[1]
  af     = -v865+0x1[1]
  cf     = -v863+0x1[1]
  of     = v866[1]
memory:
  addr=v844-0xc[32] value=0x80485d4[32]
  addr=v844-0x4[32] value=v845[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048440}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048446}, expr=0x0804844d[32]}
  pf     = {defs={0x08048440,0x08048443}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x08048440,0x08048443}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x08048440,0x08048443}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  cf     = {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x08048440,0x08048443}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
memory:
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] -9[32])} value=8[8]
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] -10[32])} value=4[8]
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] -11[32])} value=-123[8]
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] -12[32])} value=-44[8]
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x0804844d[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x804844d:call   0x08048300<puts@plt>
== PartialSymbolic ==
registers:
  esp    = v844-0x10[32]
  ebp    = v844-0x4[32]
  eip    = 0x8048300[32]
  pf     = -v860+0x1[1]
  sf     = v861[1]
  zf     = v862[1]
  af     = -v865+0x1[1]
  cf     = -v863+0x1[1]
  of     = v866[1]
memory:
  addr=v844-0x10[32] value=0x8048452[32]
  addr=v844-0xc[32] value=0x80485d4[32]
  addr=v844-0x4[32] value=v845[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] esp_0[32] -16[32])}
  ebp    = {defs={0x08048440}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x08048300[32]
  pf     = {defs={0x08048440,0x08048443}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x08048440,0x08048443}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x08048440,0x08048443}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  cf     = {defs={0x08048440,0x08048443}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x08048440,0x08048443}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
memory:
  addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] esp_0[32] -13[32])} value={defs={0x0804844d}, expr=8[8]}
  addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] esp_0[32] -14[32])} value={defs={0x0804844d}, expr=4[8]}
  addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] esp_0[32] -15[32])} value={defs={0x0804844d}, expr=-124[8]}
  addr={defs={0x08048440,0x08048443,0x0804844d}, expr=(add[32] esp_0[32] -16[32])} value={defs={0x0804844d}, expr=82[8]}
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] -9[32])} value=8[8]
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] -10[32])} value=4[8]
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] -11[32])} value=-123[8]
  addr={defs={0x08048440,0x08048443}, expr=(add[32] esp_0[32] -12[32])} value=-44[8]
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048440}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048300[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048452:mov    esp, ebp
== PartialSymbolic ==
registers:
  esp    = v868[32]
  ebp    = v868[32]
  eip    = 0x8048454[32]
memory:
== Symbolic ==
registers:
  esp    = ebp_0[32]
  eip    = {defs={0x08048452}, expr=0x08048454[32]}
memory:
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048454[32]
memory:

0x8048454:pop    ebp
== PartialSymbolic ==
registers:
  esp    = v868+0x4[32]
  ebp    = v869[32]
  eip    = 0x8048455[32]
memory:
  addr=v868[32] value=v869[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048454}, expr=(add[32] ebp_0[32] 4[32])}
  ebp    = v14736[32]
  eip    = {defs={0x08048454}, expr=0x08048455[32]}
memory:
  addr=(add[32] ebp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14736[32])
  addr=(add[32] ebp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14736[32])
  addr=(add[32] ebp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14736[32])
  addr=ebp_0[32] value=(extract[8] 0[32] 8[32] v14736[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048455[32]
memory:

0x8048455:ret    
== PartialSymbolic ==
registers:
  esp    = v868+0x8[32]
  ebp    = v869[32]
  eip    = v871[32]
memory:
  addr=v868+0x4[32] value=v871[32]
  addr=v868[32] value=v869[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048454,0x08048455}, expr=(add[32] ebp_0[32] 8[32])}
  ebp    = v14736[32]
  eip    = v14741[32]
memory:
  addr={defs={0x08048454}, expr=(add[32] ebp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14741[32])
  addr={defs={0x08048454}, expr=(add[32] ebp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14741[32])
  addr={defs={0x08048454}, expr=(add[32] ebp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14741[32])
  addr={defs={0x08048454}, expr=(add[32] ebp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14741[32])
  addr=(add[32] ebp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14736[32])
  addr=(add[32] ebp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14736[32])
  addr=(add[32] ebp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14736[32])
  addr=ebp_0[32] value=(extract[8] 0[32] 8[32] v14736[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = doubleword[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048460:push   ebp
== PartialSymbolic ==
registers:
  esp    = v874-0x4[32]
  ebp    = v875[32]
  eip    = 0x8048461[32]
memory:
  addr=v874-0x4[32] value=v875[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048460}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048460}, expr=0x08048461[32]}
memory:
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048461[32]
memory:

0x8048461:mov    ebp, esp
== PartialSymbolic ==
registers:
  esp    = v874-0x4[32]
  ebp    = v874-0x4[32]
  eip    = 0x8048463[32]
memory:
  addr=v874-0x4[32] value=v875[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048460}, expr=(add[32] esp_0[32] -4[32])}
  ebp    = {defs={0x08048460}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048461}, expr=0x08048463[32]}
memory:
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048463[32]
memory:

0x8048463:sub    esp, 0x08
== PartialSymbolic ==
registers:
  esp    = v874-0xc[32]
  ebp    = v874-0x4[32]
  eip    = 0x8048466[32]
  pf     = -v890+0x1[1]
  sf     = v891[1]
  zf     = v892[1]
  af     = -v895+0x1[1]
  cf     = -v893+0x1[1]
  of     = v896[1]
memory:
  addr=v874-0x4[32] value=v875[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048460}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048463}, expr=0x08048466[32]}
  pf     = {defs={0x08048460,0x08048463}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x08048460,0x08048463}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x08048460,0x08048463}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  cf     = {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x08048460,0x08048463}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
memory:
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048466[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
== PartialSymbolic ==
registers:
  esp    = v874-0xc[32]
  ebp    = v874-0x4[32]
  eip    = 0x804846d[32]
  pf     = -v890+0x1[1]
  sf     = v891[1]
  zf     = v892[1]
  af     = -v895+0x1[1]
  cf     = -v893+0x1[1]
  of     = v896[1]
memory:
  addr=v874-0xc[32] value=0x80485d4[32]
  addr=v874-0x4[32] value=v875[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048460}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048466}, expr=0x0804846d[32]}
  pf     = {defs={0x08048460,0x08048463}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x08048460,0x08048463}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x08048460,0x08048463}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  cf     = {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x08048460,0x08048463}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
memory:
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] -9[32])} value=8[8]
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] -10[32])} value=4[8]
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] -11[32])} value=-123[8]
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] -12[32])} value=-44[8]
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x0804846d[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x804846d:call   0x08048300<puts@plt>
== PartialSymbolic ==
registers:
  esp    = v874-0x10[32]
  ebp    = v874-0x4[32]
  eip    = 0x8048300[32]
  pf     = -v890+0x1[1]
  sf     = v891[1]
  zf     = v892[1]
  af     = -v895+0x1[1]
  cf     = -v893+0x1[1]
  of     = v896[1]
memory:
  addr=v874-0x10[32] value=0x8048472[32]
  addr=v874-0xc[32] value=0x80485d4[32]
  addr=v874-0x4[32] value=v875[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] esp_0[32] -16[32])}
  ebp    = {defs={0x08048460}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x08048300[32]
  pf     = {defs={0x08048460,0x08048463}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x08048460,0x08048463}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x08048460,0x08048463}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  cf     = {defs={0x08048460,0x08048463}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x08048460,0x08048463}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
memory:
  addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] esp_0[32] -13[32])} value={defs={0x0804846d}, expr=8[8]}
  addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] esp_0[32] -14[32])} value={defs={0x0804846d}, expr=4[8]}
  addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] esp_0[32] -15[32])} value={defs={0x0804846d}, expr=-124[8]}
  addr={defs={0x08048460,0x08048463,0x0804846d}, expr=(add[32] esp_0[32] -16[32])} value={defs={0x0804846d}, expr=114[8]}
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] -9[32])} value=8[8]
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] -10[32])} value=4[8]
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] -11[32])} value=-123[8]
  addr={defs={0x08048460,0x08048463}, expr=(add[32] esp_0[32] -12[32])} value=-44[8]
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048460}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048300[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
== PartialSymbolic ==
registers:
  esp    = v898[32]
  eip    = 0x8048479[32]
memory:
  addr=v898[32] value=0x0[32]
== Symbolic ==
registers:
  eip    = {defs={0x08048472}, expr=0x08048479[32]}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=0[8]
  addr=(add[32] esp_0[32] 2[32]) value=0[8]
  addr=(add[32] esp_0[32] 1[32]) value=0[8]
  addr=esp_0[32] value=0[8]
== Interval ==
registers:
  esp    = doubleword[32]
  eip    = 0x08048479[32]
memory:

0x8048479:call   0x08048320<_exit@plt>
== PartialSymbolic ==
registers:
  esp    = v898-0x4[32]
  eip    = 0x8048320[32]
memory:
  addr=v898-0x4[32] value=0x804847e[32]
  addr=v898[32] value=0x0[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048479}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x08048320[32]
memory:
  addr={defs={0x08048479}, expr=(add[32] esp_0[32] -1[32])} value={defs={0x08048479}, expr=8[8]}
  addr={defs={0x08048479}, expr=(add[32] esp_0[32] -2[32])} value={defs={0x08048479}, expr=4[8]}
  addr={defs={0x08048479}, expr=(add[32] esp_0[32] -3[32])} value={defs={0x08048479}, expr=-124[8]}
  addr={defs={0x08048479}, expr=(add[32] esp_0[32] -4[32])} value={defs={0x08048479}, expr=126[8]}
  addr=(add[32] esp_0[32] 3[32]) value=0[8]
  addr=(add[32] esp_0[32] 2[32]) value=0[8]
  addr=(add[32] esp_0[32] 1[32]) value=0[8]
  addr=esp_0[32] value=0[8]
== Interval ==
registers:
  esp    = doubleword[32]
  eip    = 0x08048320[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048480:push   ebp
== PartialSymbolic ==
registers:
  esp    = v900-0x4[32]
  ebp    = v901[32]
  eip    = 0x8048481[32]
memory:
  addr=v900-0x4[32] value=v901[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048480}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048480}, expr=0x08048481[32]}
memory:
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048481[32]
memory:

0x8048481:mov    ebp, esp
== PartialSymbolic ==
registers:
  esp    = v900-0x4[32]
  ebp    = v900-0x4[32]
  eip    = 0x8048483[32]
memory:
  addr=v900-0x4[32] value=v901[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048480}, expr=(add[32] esp_0[32] -4[32])}
  ebp    = {defs={0x08048480}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048481}, expr=0x08048483[32]}
memory:
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048483[32]
memory:

0x8048483:sub    esp, 0x08
== PartialSymbolic ==
registers:
  esp    = v900-0xc[32]
  ebp    = v900-0x4[32]
  eip    = 0x8048486[32]
  pf     = -v916+0x1[1]
  sf     = v917[1]
  zf     = v918[1]
  af     = -v921+0x1[1]
  cf     = -v919+0x1[1]
  of     = v922[1]
memory:
  addr=v900-0x4[32] value=v901[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048480}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048483}, expr=0x08048486[32]}
  pf     = {defs={0x08048480,0x08048483}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x08048480,0x08048483}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x08048480,0x08048483}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  cf     = {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x08048480,0x08048483}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
memory:
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048486[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048486:inc    DWORD PTR ds:[0x080496f8<.bss+4>]
== PartialSymbolic ==
registers:
  esp    = v900-0xc[32]
  ebp    = v900-0x4[32]
  eip    = 0x804848c[32]
  pf     = -v965+0x1[1]
  sf     = v966[1]
  zf     = v967[1]
  af     = v970[1]
  cf     = -v919+0x1[1]
  of     = v971[1]
memory:
  addr=0x80496f8[32] value=v923+0x1[32]
  addr=0x80496f8[32] value=v923[32]
  addr=v900-0x4[32] value=v901[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048480}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048486}, expr=0x0804848c[32]}
  pf     = {defs={0x08048486}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14754[32] 1[32])) (extract[1] 1[32] 2[32] (add[32] v14754[32] 1[32])) (extract[1] 2[32] 3[32] (add[32] v14754[32] 1[32])) (extract[1] 3[32] 4[32] (add[32] v14754[32] 1[32])) (extract[1] 4[32] 5[32] (add[32] v14754[32] 1[32])) (extract[1] 5[32] 6[32] (add[32] v14754[32] 1[32])) (extract[1] 6[32] 7[32] (add[32] v14754[32] 1[32])) (extract[1] 7[32] 8[32] (add[32] v14754[32] 1[32]))))}
  sf     = {defs={0x08048486}, expr=(extract[1] 31[32] 32[32] (add[32] v14754[32] 1[32]))}
  zf     = {defs={0x08048486}, expr=(zerop[1] (add[32] v14754[32] 1[32]))}
  af     = {defs={0x08048486}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14754[32]) (add[33] (uextend[33] 33[32] v14754[32]) 1[33]) 1[33]))}
  cf     = {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x08048486}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14754[32]) (add[33] (uextend[33] 33[32] v14754[32]) 1[33]) 1[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14754[32]) (add[33] (uextend[33] 33[32] v14754[32]) 1[33]) 1[33])))}
memory:
  addr=0x080496fb[32] value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] (add[32] v14754[32] 1[32]))}
  addr=0x080496fa[32] value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] (add[32] v14754[32] 1[32]))}
  addr=0x080496f9[32] value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] (add[32] v14754[32] 1[32]))}
  addr=0x080496f8[32] value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] (add[32] v14754[32] 1[32]))}
  addr=0x080496fb[32] value=(extract[8] 24[32] 32[32] v14754[32])
  addr=0x080496fa[32] value=(extract[8] 16[32] 24[32] v14754[32])
  addr=0x080496f9[32] value=(extract[8] 8[32] 16[32] v14754[32])
  addr=0x080496f8[32] value=(extract[8] 0[32] 8[32] v14754[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x0804848c[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4<<StaticData@0x080485ca>+0x0a>
== PartialSymbolic ==
registers:
  esp    = v900-0xc[32]
  ebp    = v900-0x4[32]
  eip    = 0x8048493[32]
  pf     = -v965+0x1[1]
  sf     = v966[1]
  zf     = v967[1]
  af     = v970[1]
  cf     = -v919+0x1[1]
  of     = v971[1]
memory:
  addr=v900-0xc[32] value=0x80485d4[32]
  addr=0x80496f8[32] value=v923+0x1[32]
  addr=0x80496f8[32] value=v923[32]
  addr=v900-0x4[32] value=v901[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048480}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x0804848c}, expr=0x08048493[32]}
  pf     = {defs={0x08048486}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14754[32] 1[32])) (extract[1] 1[32] 2[32] (add[32] v14754[32] 1[32])) (extract[1] 2[32] 3[32] (add[32] v14754[32] 1[32])) (extract[1] 3[32] 4[32] (add[32] v14754[32] 1[32])) (extract[1] 4[32] 5[32] (add[32] v14754[32] 1[32])) (extract[1] 5[32] 6[32] (add[32] v14754[32] 1[32])) (extract[1] 6[32] 7[32] (add[32] v14754[32] 1[32])) (extract[1] 7[32] 8[32] (add[32] v14754[32] 1[32]))))}
  sf     = {defs={0x08048486}, expr=(extract[1] 31[32] 32[32] (add[32] v14754[32] 1[32]))}
  zf     = {defs={0x08048486}, expr=(zerop[1] (add[32] v14754[32] 1[32]))}
  af     = {defs={0x08048486}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14754[32]) (add[33] (uextend[33] 33[32] v14754[32]) 1[33]) 1[33]))}
  cf     = {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x08048486}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14754[32]) (add[33] (uextend[33] 33[32] v14754[32]) 1[33]) 1[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14754[32]) (add[33] (uextend[33] 33[32] v14754[32]) 1[33]) 1[33])))}
memory:
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] -9[32])} value=8[8]
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] -10[32])} value=4[8]
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] -11[32])} value=-123[8]
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] -12[32])} value=-44[8]
  addr=0x080496fb[32] value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] (add[32] v14754[32] 1[32]))}
  addr=0x080496fa[32] value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] (add[32] v14754[32] 1[32]))}
  addr=0x080496f9[32] value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] (add[32] v14754[32] 1[32]))}
  addr=0x080496f8[32] value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] (add[32] v14754[32] 1[32]))}
  addr=0x080496fb[32] value=(extract[8] 24[32] 32[32] v14754[32])
  addr=0x080496fa[32] value=(extract[8] 16[32] 24[32] v14754[32])
  addr=0x080496f9[32] value=(extract[8] 8[32] 16[32] v14754[32])
  addr=0x080496f8[32] value=(extract[8] 0[32] 8[32] v14754[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048493[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048493:call   0x08048300<puts@plt>
== PartialSymbolic ==
registers:
  esp    = v900-0x10[32]
  ebp    = v900-0x4[32]
  eip    = 0x8048300[32]
  pf     = -v965+0x1[1]
  sf     = v966[1]
  zf     = v967[1]
  af     = v970[1]
  cf     = -v919+0x1[1]
  of     = v971[1]
memory:
  addr=v900-0x10[32] value=0x8048498[32]
  addr=v900-0xc[32] value=0x80485d4[32]
  addr=0x80496f8[32] value=v923+0x1[32]
  addr=0x80496f8[32] value=v923[32]
  addr=v900-0x4[32] value=v901[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] esp_0[32] -16[32])}
  ebp    = {defs={0x08048480}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x08048300[32]
  pf     = {defs={0x08048486}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14754[32] 1[32])) (extract[1] 1[32] 2[32] (add[32] v14754[32] 1[32])) (extract[1] 2[32] 3[32] (add[32] v14754[32] 1[32])) (extract[1] 3[32] 4[32] (add[32] v14754[32] 1[32])) (extract[1] 4[32] 5[32] (add[32] v14754[32] 1[32])) (extract[1] 5[32] 6[32] (add[32] v14754[32] 1[32])) (extract[1] 6[32] 7[32] (add[32] v14754[32] 1[32])) (extract[1] 7[32] 8[32] (add[32] v14754[32] 1[32]))))}
  sf     = {defs={0x08048486}, expr=(extract[1] 31[32] 32[32] (add[32] v14754[32] 1[32]))}
  zf     = {defs={0x08048486}, expr=(zerop[1] (add[32] v14754[32] 1[32]))}
  af     = {defs={0x08048486}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14754[32]) (add[33] (uextend[33] 33[32] v14754[32]) 1[33]) 1[33]))}
  cf     = {defs={0x08048480,0x08048483}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -4[32])) 4294967288[33]) 4294967287[33])))}
  of     = {defs={0x08048486}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14754[32]) (add[33] (uextend[33] 33[32] v14754[32]) 1[33]) 1[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14754[32]) (add[33] (uextend[33] 33[32] v14754[32]) 1[33]) 1[33])))}
memory:
  addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] esp_0[32] -13[32])} value={defs={0x08048493}, expr=8[8]}
  addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] esp_0[32] -14[32])} value={defs={0x08048493}, expr=4[8]}
  addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] esp_0[32] -15[32])} value={defs={0x08048493}, expr=-124[8]}
  addr={defs={0x08048480,0x08048483,0x08048493}, expr=(add[32] esp_0[32] -16[32])} value={defs={0x08048493}, expr=-104[8]}
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] -9[32])} value=8[8]
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] -10[32])} value=4[8]
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] -11[32])} value=-123[8]
  addr={defs={0x08048480,0x08048483}, expr=(add[32] esp_0[32] -12[32])} value=-44[8]
  addr=0x080496fb[32] value={defs={0x08048486}, expr=(extract[8] 24[32] 32[32] (add[32] v14754[32] 1[32]))}
  addr=0x080496fa[32] value={defs={0x08048486}, expr=(extract[8] 16[32] 24[32] (add[32] v14754[32] 1[32]))}
  addr=0x080496f9[32] value={defs={0x08048486}, expr=(extract[8] 8[32] 16[32] (add[32] v14754[32] 1[32]))}
  addr=0x080496f8[32] value={defs={0x08048486}, expr=(extract[8] 0[32] 8[32] (add[32] v14754[32] 1[32]))}
  addr=0x080496fb[32] value=(extract[8] 24[32] 32[32] v14754[32])
  addr=0x080496fa[32] value=(extract[8] 16[32] 24[32] v14754[32])
  addr=0x080496f9[32] value=(extract[8] 8[32] 16[32] v14754[32])
  addr=0x080496f8[32] value=(extract[8] 0[32] 8[32] v14754[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048480}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048300[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
== PartialSymbolic ==
registers:
  esp    = v973[32]
  eip    = 0x804849f[32]
memory:
  addr=v973[32] value=0x0[32]
== Symbolic ==
registers:
  eip    = {defs={0x08048498}, expr=0x0804849f[32]}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=0[8]
  addr=(add[32] esp_0[32] 2[32]) value=0[8]
  addr=(add[32] esp_0[32] 1[32]) value=0[8]
  addr=esp_0[32] value=0[8]
== Interval ==
registers:
  esp    = doubleword[32]
  eip    = 0x0804849f[32]
memory:

0x804849f:call   0x08048320<_exit@plt>
== PartialSymbolic ==
registers:
  esp    = v973-0x4[32]
  eip    = 0x8048320[32]
memory:
  addr=v973-0x4[32] value=0x80484a4[32]
  addr=v973[32] value=0x0[32]
== Symbolic ==
registers:
  esp    = {defs={0x0804849f}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x08048320[32]
memory:
  addr={defs={0x0804849f}, expr=(add[32] esp_0[32] -1[32])} value={defs={0x0804849f}, expr=8[8]}
  addr={defs={0x0804849f}, expr=(add[32] esp_0[32] -2[32])} value={defs={0x0804849f}, expr=4[8]}
  addr={defs={0x0804849f}, expr=(add[32] esp_0[32] -3[32])} value={defs={0x0804849f}, expr=-124[8]}
  addr={defs={0x0804849f}, expr=(add[32] esp_0[32] -4[32])} value={defs={0x0804849f}, expr=-92[8]}
  addr=(add[32] esp_0[32] 3[32]) value=0[8]
  addr=(add[32] esp_0[32] 2[32]) value=0[8]
  addr=(add[32] esp_0[32] 1[32]) value=0[8]
  addr=esp_0[32] value=0[8]
== Interval ==
registers:
  esp    = doubleword[32]
  eip    = 0x08048320[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80484b0:push   ebp
== PartialSymbolic ==
registers:
  esp    = v975-0x4[32]
  ebp    = v976[32]
  eip    = 0x80484b1[32]
memory:
  addr=v975-0x4[32] value=v976[32]
== Symbolic ==
registers:
  esp    = {defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080484b0}, expr=0x080484b1[32]}
memory:
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080484b1[32]
memory:

0x80484b1:mov    ebp, esp
== PartialSymbolic ==
registers:
  esp    = v975-0x4[32]
  ebp    = v975-0x4[32]
  eip    = 0x80484b3[32]
memory:
  addr=v975-0x4[32] value=v976[32]
== Symbolic ==
registers:
  esp    = {defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])}
  ebp    = {defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080484b1}, expr=0x080484b3[32]}
memory:
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080484b3[32]
memory:

0x80484b3:push   edi
== PartialSymbolic ==
registers:
  esp    = v975-0x8[32]
  ebp    = v975-0x4[32]
  edi    = v977[32]
  eip    = 0x80484b4[32]
memory:
  addr=v975-0x8[32] value=v977[32]
  addr=v975-0x4[32] value=v976[32]
== Symbolic ==
registers:
  esp    = {defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -8[32])}
  ebp    = {defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080484b3}, expr=0x080484b4[32]}
memory:
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] edi_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x080484b4[32]
memory:

0x80484b4:push   esi
== PartialSymbolic ==
registers:
  esp    = v975-0xc[32]
  ebp    = v975-0x4[32]
  esi    = v978[32]
  edi    = v977[32]
  eip    = 0x80484b5[32]
memory:
  addr=v975-0xc[32] value=v978[32]
  addr=v975-0x8[32] value=v977[32]
  addr=v975-0x4[32] value=v976[32]
== Symbolic ==
registers:
  esp    = {defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080484b4}, expr=0x080484b5[32]}
memory:
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -9[32])} value=(extract[8] 24[32] 32[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -10[32])} value=(extract[8] 16[32] 24[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -11[32])} value=(extract[8] 8[32] 16[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -12[32])} value=(extract[8] 0[32] 8[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] edi_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x080484b5[32]
memory:

0x80484b5:push   ebx
== PartialSymbolic ==
registers:
  ebx    = v979[32]
  esp    = v975-0x10[32]
  ebp    = v975-0x4[32]
  esi    = v978[32]
  edi    = v977[32]
  eip    = 0x80484b6[32]
memory:
  addr=v975-0x10[32] value=v979[32]
  addr=v975-0xc[32] value=v978[32]
  addr=v975-0x8[32] value=v977[32]
  addr=v975-0x4[32] value=v976[32]
== Symbolic ==
registers:
  esp    = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] -16[32])}
  ebp    = {defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080484b5}, expr=0x080484b6[32]}
memory:
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] -13[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] -14[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] -15[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] -16[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -9[32])} value=(extract[8] 24[32] 32[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -10[32])} value=(extract[8] 16[32] 24[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -11[32])} value=(extract[8] 8[32] 16[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -12[32])} value=(extract[8] 0[32] 8[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] edi_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x080484b6[32]
memory:

0x80484b6:sub    esp, 0x0c
== PartialSymbolic ==
registers:
  ebx    = v979[32]
  esp    = v975-0x1c[32]
  ebp    = v975-0x4[32]
  esi    = v978[32]
  edi    = v977[32]
  eip    = 0x80484b9[32]
  pf     = -v994+0x1[1]
  sf     = v995[1]
  zf     = v996[1]
  af     = -v999+0x1[1]
  cf     = -v997+0x1[1]
  of     = v1000[1]
memory:
  addr=v975-0x10[32] value=v979[32]
  addr=v975-0xc[32] value=v978[32]
  addr=v975-0x8[32] value=v977[32]
  addr=v975-0x4[32] value=v976[32]
== Symbolic ==
registers:
  esp    = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(add[32] esp_0[32] -28[32])}
  ebp    = {defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080484b6}, expr=0x080484b9[32]}
  pf     = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -28[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -28[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -28[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -28[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -28[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -28[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -28[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -28[32]))))}
  sf     = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -28[32]))}
  zf     = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(zerop[1] (add[32] esp_0[32] -28[32]))}
  af     = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])))}
  cf     = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])))}
  of     = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])))}
memory:
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] -13[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] -14[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] -15[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] -16[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -9[32])} value=(extract[8] 24[32] 32[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -10[32])} value=(extract[8] 16[32] 24[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -11[32])} value=(extract[8] 8[32] 16[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -12[32])} value=(extract[8] 0[32] 8[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] edi_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x080484b9[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80484b9:call   0x080484be<<Insn>>
== PartialSymbolic ==
registers:
  ebx    = v979[32]
  esp    = v975-0x20[32]
  ebp    = v975-0x4[32]
  esi    = v978[32]
  edi    = v977[32]
  eip    = 0x80484be[32]
  pf     = -v994+0x1[1]
  sf     = v995[1]
  zf     = v996[1]
  af     = -v999+0x1[1]
  cf     = -v997+0x1[1]
  of     = v1000[1]
memory:
  addr=v975-0x20[32] value=0x80484be[32]
  addr=v975-0x10[32] value=v979[32]
  addr=v975-0xc[32] value=v978[32]
  addr=v975-0x8[32] value=v977[32]
  addr=v975-0x4[32] value=v976[32]
== Symbolic ==
registers:
  esp    = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] esp_0[32] -32[32])}
  ebp    = {defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x080484be[32]
  pf     = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -28[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -28[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -28[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -28[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -28[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -28[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -28[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -28[32]))))}
  sf     = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -28[32]))}
  zf     = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(zerop[1] (add[32] esp_0[32] -28[32]))}
  af     = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])))}
  cf     = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])))}
  of     = {defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])))}
memory:
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] esp_0[32] -29[32])} value={defs={0x080484b9}, expr=8[8]}
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] esp_0[32] -30[32])} value={defs={0x080484b9}, expr=4[8]}
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] esp_0[32] -31[32])} value={defs={0x080484b9}, expr=-124[8]}
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5,0x080484b6,0x080484b9}, expr=(add[32] esp_0[32] -32[32])} value={defs={0x080484b9}, expr=-66[8]}
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] -13[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] -14[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] -15[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4,0x080484b5}, expr=(add[32] esp_0[32] -16[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -9[32])} value=(extract[8] 24[32] 32[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -10[32])} value=(extract[8] 16[32] 24[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -11[32])} value=(extract[8] 8[32] 16[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3,0x080484b4}, expr=(add[32] esp_0[32] -12[32])} value=(extract[8] 0[32] 8[32] esi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] edi_0[32])
  addr={defs={0x080484b0,0x080484b3}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] edi_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080484b0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x080484be[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80484be:pop    ebx
== PartialSymbolic ==
registers:
  ebx    = v1003[32]
  esp    = v1002+0x4[32]
  eip    = 0x80484bf[32]
memory:
  addr=v1002[32] value=v1003[32]
== Symbolic ==
registers:
  ebx    = v14769[32]
  esp    = {defs={0x080484be}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x080484be}, expr=0x080484bf[32]}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14769[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14769[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14769[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14769[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x080484bf[32]
memory:

0x80484bf:add    ebx, 0x0000120a
== PartialSymbolic ==
registers:
  ebx    = v1003+0x120a[32]
  esp    = v1002+0x4[32]
  eip    = 0x80484c5[32]
  pf     = -v1019+0x1[1]
  sf     = v1020[1]
  zf     = v1021[1]
  af     = v1024[1]
  cf     = v1022[1]
  of     = v1025[1]
memory:
  addr=v1002[32] value=v1003[32]
== Symbolic ==
registers:
  ebx    = {defs={0x080484bf}, expr=(add[32] v14769[32] 4618[32])}
  esp    = {defs={0x080484be}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x080484bf}, expr=0x080484c5[32]}
  pf     = {defs={0x080484bf}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14769[32] 4618[32])) (extract[1] 1[32] 2[32] (add[32] v14769[32] 4618[32])) (extract[1] 2[32] 3[32] (add[32] v14769[32] 4618[32])) (extract[1] 3[32] 4[32] (add[32] v14769[32] 4618[32])) (extract[1] 4[32] 5[32] (add[32] v14769[32] 4618[32])) (extract[1] 5[32] 6[32] (add[32] v14769[32] 4618[32])) (extract[1] 6[32] 7[32] (add[32] v14769[32] 4618[32])) (extract[1] 7[32] 8[32] (add[32] v14769[32] 4618[32]))))}
  sf     = {defs={0x080484bf}, expr=(extract[1] 31[32] 32[32] (add[32] v14769[32] 4618[32]))}
  zf     = {defs={0x080484bf}, expr=(zerop[1] (add[32] v14769[32] 4618[32]))}
  af     = {defs={0x080484bf}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14769[32]) (add[33] (uextend[33] 33[32] v14769[32]) 4618[33]) 4618[33]))}
  cf     = {defs={0x080484bf}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14769[32]) (add[33] (uextend[33] 33[32] v14769[32]) 4618[33]) 4618[33]))}
  of     = {defs={0x080484bf}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14769[32]) (add[33] (uextend[33] 33[32] v14769[32]) 4618[33]) 4618[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14769[32]) (add[33] (uextend[33] 33[32] v14769[32]) 4618[33]) 4618[33])))}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14769[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14769[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14769[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14769[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x080484c5[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80484c5:call   0x080482c8<_init>
== PartialSymbolic ==
registers:
  ebx    = v1003+0x120a[32]
  esp    = v1002[32]
  eip    = 0x80482c8[32]
  pf     = -v1019+0x1[1]
  sf     = v1020[1]
  zf     = v1021[1]
  af     = v1024[1]
  cf     = v1022[1]
  of     = v1025[1]
memory:
  addr=v1002[32] value=0x80484ca[32]
  addr=v1002[32] value=v1003[32]
== Symbolic ==
registers:
  ebx    = {defs={0x080484bf}, expr=(add[32] v14769[32] 4618[32])}
  eip    = 0x080482c8[32]
  pf     = {defs={0x080484bf}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14769[32] 4618[32])) (extract[1] 1[32] 2[32] (add[32] v14769[32] 4618[32])) (extract[1] 2[32] 3[32] (add[32] v14769[32] 4618[32])) (extract[1] 3[32] 4[32] (add[32] v14769[32] 4618[32])) (extract[1] 4[32] 5[32] (add[32] v14769[32] 4618[32])) (extract[1] 5[32] 6[32] (add[32] v14769[32] 4618[32])) (extract[1] 6[32] 7[32] (add[32] v14769[32] 4618[32])) (extract[1] 7[32] 8[32] (add[32] v14769[32] 4618[32]))))}
  sf     = {defs={0x080484bf}, expr=(extract[1] 31[32] 32[32] (add[32] v14769[32] 4618[32]))}
  zf     = {defs={0x080484bf}, expr=(zerop[1] (add[32] v14769[32] 4618[32]))}
  af     = {defs={0x080484bf}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14769[32]) (add[33] (uextend[33] 33[32] v14769[32]) 4618[33]) 4618[33]))}
  cf     = {defs={0x080484bf}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14769[32]) (add[33] (uextend[33] 33[32] v14769[32]) 4618[33]) 4618[33]))}
  of     = {defs={0x080484bf}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14769[32]) (add[33] (uextend[33] 33[32] v14769[32]) 4618[33]) 4618[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14769[32]) (add[33] (uextend[33] 33[32] v14769[32]) 4618[33]) 4618[33])))}
memory:
  addr={defs={0x080484be,0x080484c5}, expr=(add[32] esp_0[32] 3[32])} value={defs={0x080484c5}, expr=8[8]}
  addr={defs={0x080484be,0x080484c5}, expr=(add[32] esp_0[32] 2[32])} value={defs={0x080484c5}, expr=4[8]}
  addr={defs={0x080484be,0x080484c5}, expr=(add[32] esp_0[32] 1[32])} value={defs={0x080484c5}, expr=-124[8]}
  addr={defs={0x080484be,0x080484c5}, expr=esp_0[32]} value={defs={0x080484c5}, expr=-54[8]}
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14769[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14769[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14769[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14769[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x080482c8[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
== PartialSymbolic ==
registers:
  eax    = v1027-0xe0[32]
  ebx    = v1027[32]
  eip    = 0x80484d0[32]
memory:
== Symbolic ==
registers:
  eax    = {defs={0x080484ca}, expr=(add[32] ebx_0[32] -224[32])}
  eip    = {defs={0x080484ca}, expr=0x080484d0[32]}
memory:
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  eip    = 0x080484d0[32]
memory:

0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
== PartialSymbolic ==
registers:
  eax    = v1027-0xe0[32]
  edx    = v1027-0xe0[32]
  ebx    = v1027[32]
  eip    = 0x80484d6[32]
memory:
== Symbolic ==
registers:
  eax    = {defs={0x080484ca}, expr=(add[32] ebx_0[32] -224[32])}
  edx    = {defs={0x080484d0}, expr=(add[32] ebx_0[32] -224[32])}
  eip    = {defs={0x080484d0}, expr=0x080484d6[32]}
memory:
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  ebx    = doubleword[32]
  eip    = 0x080484d6[32]
memory:

0x80484d6:sub    eax, edx
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  edx    = v1027-0xe0[32]
  ebx    = v1027[32]
  eip    = 0x80484d8[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  af     = 0x0[1]
  cf     = 0x0[1]
  of     = 0x0[1]
memory:
== Symbolic ==
registers:
  eax    = {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])}
  edx    = {defs={0x080484d0}, expr=(add[32] ebx_0[32] -224[32])}
  eip    = {defs={0x080484d6}, expr=0x080484d8[32]}
  pf     = {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])) (extract[1] 1[32] 2[32] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])) (extract[1] 2[32] 3[32] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])) (extract[1] 3[32] 4[32] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])) (extract[1] 4[32] 5[32] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])) (extract[1] 5[32] 6[32] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])) (extract[1] 6[32] 7[32] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])) (extract[1] 7[32] 8[32] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))))}
  sf     = {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(extract[1] 31[32] 32[32] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))}
  zf     = {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(zerop[1] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))}
  af     = {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] ebx_0[32] -224[32])) (uextend[33] 33[32] (invert[32] (add[32] ebx_0[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] ebx_0[32] -224[32])) (uextend[33] 33[32] (invert[32] (add[32] ebx_0[32] -224[32]))) 1[33]))))}
  cf     = {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] ebx_0[32] -224[32])) (uextend[33] 33[32] (invert[32] (add[32] ebx_0[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] ebx_0[32] -224[32])) (uextend[33] 33[32] (invert[32] (add[32] ebx_0[32] -224[32]))) 1[33]))))}
  of     = {defs={0x080484ca,0x080484d0,0x080484d6}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] ebx_0[32] -224[32])) (uextend[33] 33[32] (invert[32] (add[32] ebx_0[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] ebx_0[32] -224[32])) (uextend[33] 33[32] (invert[32] (add[32] ebx_0[32] -224[32]))) 1[33]))) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] ebx_0[32] -224[32])) (uextend[33] 33[32] (invert[32] (add[32] ebx_0[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] ebx_0[32] -224[32])) (uextend[33] 33[32] (invert[32] (add[32] ebx_0[32] -224[32]))) 1[33]))))}
memory:
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  ebx    = doubleword[32]
  eip    = 0x080484d8[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80484d8:sar    eax, 0x02
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  edx    = v1027-0xe0[32]
  ebx    = v1027[32]
  eip    = 0x80484db[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  af     = v1029[1]
  cf     = 0x0[1]
  of     = v1030[1]
memory:
== Symbolic ==
registers:
  eax    = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))}
  edx    = {defs={0x080484d0}, expr=(add[32] ebx_0[32] -224[32])}
  eip    = {defs={0x080484d8}, expr=0x080484db[32]}
  pf     = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 1[32] 2[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 2[32] 3[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 3[32] 4[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 4[32] 5[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 5[32] 6[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 6[32] 7[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 7[32] 8[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))))}
  sf     = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  zf     = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(zerop[1] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  af     = {defs={0x080484d8}, expr=v14777[1]}
  cf     = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  of     = {defs={0x080484d8}, expr=v14778[1]}
memory:
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  ebx    = doubleword[32]
  eip    = 0x080484db[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  edx    = v1027-0xe0[32]
  ebx    = v1027[32]
  ebp    = v1031[32]
  eip    = 0x80484de[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  af     = v1029[1]
  cf     = 0x0[1]
  of     = v1030[1]
memory:
  addr=v1031-0x10[32] value=0x0[32]
== Symbolic ==
registers:
  eax    = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))}
  edx    = {defs={0x080484d0}, expr=(add[32] ebx_0[32] -224[32])}
  eip    = {defs={0x080484db}, expr=0x080484de[32]}
  pf     = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 1[32] 2[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 2[32] 3[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 3[32] 4[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 4[32] 5[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 5[32] 6[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 6[32] 7[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 7[32] 8[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))))}
  sf     = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  zf     = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(zerop[1] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  af     = {defs={0x080484d8}, expr=v14777[1]}
  cf     = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  of     = {defs={0x080484d8}, expr=v14778[1]}
memory:
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] -13[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] -14[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] -15[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] -16[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  ebx    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080484de[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80484de:jne    0x080484f0<<StaticData@0x080484e8>+8>
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  edx    = v1027-0xe0[32]
  ebx    = v1027[32]
  ebp    = v1031[32]
  eip    = 0x80484e0[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  af     = v1029[1]
  cf     = 0x0[1]
  of     = v1030[1]
memory:
  addr=v1031-0x10[32] value=0x0[32]
== Symbolic ==
registers:
  eax    = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))}
  edx    = {defs={0x080484d0}, expr=(add[32] ebx_0[32] -224[32])}
  eip    = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8,0x080484de}, expr=(ite[32] (invert[1] (zerop[1] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))) 0x080484f0[32] 0x080484e0[32])}
  pf     = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 1[32] 2[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 2[32] 3[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 3[32] 4[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 4[32] 5[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 5[32] 6[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 6[32] 7[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32]))) (extract[1] 7[32] 8[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))))}
  sf     = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  zf     = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(zerop[1] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  af     = {defs={0x080484d8}, expr=v14777[1]}
  cf     = {defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  of     = {defs={0x080484d8}, expr=v14778[1]}
memory:
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] -13[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] -14[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] -15[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
  addr={defs={0x080484db}, expr=(add[32] ebp_0[32] -16[32])} value={defs={0x080484ca,0x080484d0,0x080484d6,0x080484d8}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] ebx_0[32] -224[32])) ebx_0[32] -223[32])))}
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  ebx    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080484e0, 0x080484f0[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80484e0:add    esp, 0x0c
== PartialSymbolic ==
registers:
  esp    = v1033+0xc[32]
  eip    = 0x80484e3[32]
  pf     = -v1048+0x1[1]
  sf     = v1049[1]
  zf     = v1050[1]
  af     = v1053[1]
  cf     = v1051[1]
  of     = v1054[1]
memory:
== Symbolic ==
registers:
  esp    = {defs={0x080484e0}, expr=(add[32] esp_0[32] 12[32])}
  eip    = {defs={0x080484e0}, expr=0x080484e3[32]}
  pf     = {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] 12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] 12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] 12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] 12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] 12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] 12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] 12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] 12[32]))))}
  sf     = {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] 12[32]))}
  zf     = {defs={0x080484e0}, expr=(zerop[1] (add[32] esp_0[32] 12[32]))}
  af     = {defs={0x080484e0}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  cf     = {defs={0x080484e0}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  of     = {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])))}
memory:
== Interval ==
registers:
  esp    = doubleword[32]
  eip    = 0x080484e3[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80484e3:pop    ebx
== PartialSymbolic ==
registers:
  ebx    = v1055[32]
  esp    = v1033+0x10[32]
  eip    = 0x80484e4[32]
  pf     = -v1048+0x1[1]
  sf     = v1049[1]
  zf     = v1050[1]
  af     = v1053[1]
  cf     = v1051[1]
  of     = v1054[1]
memory:
  addr=v1033+0xc[32] value=v1055[32]
== Symbolic ==
registers:
  ebx    = v14782[32]
  esp    = {defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 16[32])}
  eip    = {defs={0x080484e3}, expr=0x080484e4[32]}
  pf     = {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] 12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] 12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] 12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] 12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] 12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] 12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] 12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] 12[32]))))}
  sf     = {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] 12[32]))}
  zf     = {defs={0x080484e0}, expr=(zerop[1] (add[32] esp_0[32] 12[32]))}
  af     = {defs={0x080484e0}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  cf     = {defs={0x080484e0}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  of     = {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])))}
memory:
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 15[32])} value=(extract[8] 24[32] 32[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 14[32])} value=(extract[8] 16[32] 24[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 13[32])} value=(extract[8] 8[32] 16[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 12[32])} value=(extract[8] 0[32] 8[32] v14782[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x080484e4[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80484e4:pop    esi
== PartialSymbolic ==
registers:
  ebx    = v1055[32]
  esp    = v1033+0x14[32]
  esi    = v1057[32]
  eip    = 0x80484e5[32]
  pf     = -v1048+0x1[1]
  sf     = v1049[1]
  zf     = v1050[1]
  af     = v1053[1]
  cf     = v1051[1]
  of     = v1054[1]
memory:
  addr=v1033+0x10[32] value=v1057[32]
  addr=v1033+0xc[32] value=v1055[32]
== Symbolic ==
registers:
  ebx    = v14782[32]
  esp    = {defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 20[32])}
  esi    = v14787[32]
  eip    = {defs={0x080484e4}, expr=0x080484e5[32]}
  pf     = {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] 12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] 12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] 12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] 12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] 12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] 12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] 12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] 12[32]))))}
  sf     = {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] 12[32]))}
  zf     = {defs={0x080484e0}, expr=(zerop[1] (add[32] esp_0[32] 12[32]))}
  af     = {defs={0x080484e0}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  cf     = {defs={0x080484e0}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  of     = {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])))}
memory:
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 19[32])} value=(extract[8] 24[32] 32[32] v14787[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 18[32])} value=(extract[8] 16[32] 24[32] v14787[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 17[32])} value=(extract[8] 8[32] 16[32] v14787[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 16[32])} value=(extract[8] 0[32] 8[32] v14787[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 15[32])} value=(extract[8] 24[32] 32[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 14[32])} value=(extract[8] 16[32] 24[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 13[32])} value=(extract[8] 8[32] 16[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 12[32])} value=(extract[8] 0[32] 8[32] v14782[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x080484e5[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80484e5:pop    edi
== PartialSymbolic ==
registers:
  ebx    = v1055[32]
  esp    = v1033+0x18[32]
  esi    = v1057[32]
  edi    = v1059[32]
  eip    = 0x80484e6[32]
  pf     = -v1048+0x1[1]
  sf     = v1049[1]
  zf     = v1050[1]
  af     = v1053[1]
  cf     = v1051[1]
  of     = v1054[1]
memory:
  addr=v1033+0x14[32] value=v1059[32]
  addr=v1033+0x10[32] value=v1057[32]
  addr=v1033+0xc[32] value=v1055[32]
== Symbolic ==
registers:
  ebx    = v14782[32]
  esp    = {defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 24[32])}
  esi    = v14787[32]
  edi    = v14792[32]
  eip    = {defs={0x080484e5}, expr=0x080484e6[32]}
  pf     = {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] 12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] 12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] 12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] 12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] 12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] 12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] 12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] 12[32]))))}
  sf     = {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] 12[32]))}
  zf     = {defs={0x080484e0}, expr=(zerop[1] (add[32] esp_0[32] 12[32]))}
  af     = {defs={0x080484e0}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  cf     = {defs={0x080484e0}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  of     = {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])))}
memory:
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 23[32])} value=(extract[8] 24[32] 32[32] v14792[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 22[32])} value=(extract[8] 16[32] 24[32] v14792[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 21[32])} value=(extract[8] 8[32] 16[32] v14792[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 20[32])} value=(extract[8] 0[32] 8[32] v14792[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 19[32])} value=(extract[8] 24[32] 32[32] v14787[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 18[32])} value=(extract[8] 16[32] 24[32] v14787[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 17[32])} value=(extract[8] 8[32] 16[32] v14787[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 16[32])} value=(extract[8] 0[32] 8[32] v14787[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 15[32])} value=(extract[8] 24[32] 32[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 14[32])} value=(extract[8] 16[32] 24[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 13[32])} value=(extract[8] 8[32] 16[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 12[32])} value=(extract[8] 0[32] 8[32] v14782[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x080484e6[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80484e6:pop    ebp
== PartialSymbolic ==
registers:
  ebx    = v1055[32]
  esp    = v1033+0x1c[32]
  ebp    = v1061[32]
  esi    = v1057[32]
  edi    = v1059[32]
  eip    = 0x80484e7[32]
  pf     = -v1048+0x1[1]
  sf     = v1049[1]
  zf     = v1050[1]
  af     = v1053[1]
  cf     = v1051[1]
  of     = v1054[1]
memory:
  addr=v1033+0x18[32] value=v1061[32]
  addr=v1033+0x14[32] value=v1059[32]
  addr=v1033+0x10[32] value=v1057[32]
  addr=v1033+0xc[32] value=v1055[32]
== Symbolic ==
registers:
  ebx    = v14782[32]
  esp    = {defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] esp_0[32] 28[32])}
  ebp    = v14797[32]
  esi    = v14787[32]
  edi    = v14792[32]
  eip    = {defs={0x080484e6}, expr=0x080484e7[32]}
  pf     = {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] 12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] 12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] 12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] 12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] 12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] 12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] 12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] 12[32]))))}
  sf     = {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] 12[32]))}
  zf     = {defs={0x080484e0}, expr=(zerop[1] (add[32] esp_0[32] 12[32]))}
  af     = {defs={0x080484e0}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  cf     = {defs={0x080484e0}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  of     = {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])))}
memory:
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 27[32])} value=(extract[8] 24[32] 32[32] v14797[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 26[32])} value=(extract[8] 16[32] 24[32] v14797[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 25[32])} value=(extract[8] 8[32] 16[32] v14797[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 24[32])} value=(extract[8] 0[32] 8[32] v14797[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 23[32])} value=(extract[8] 24[32] 32[32] v14792[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 22[32])} value=(extract[8] 16[32] 24[32] v14792[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 21[32])} value=(extract[8] 8[32] 16[32] v14792[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 20[32])} value=(extract[8] 0[32] 8[32] v14792[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 19[32])} value=(extract[8] 24[32] 32[32] v14787[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 18[32])} value=(extract[8] 16[32] 24[32] v14787[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 17[32])} value=(extract[8] 8[32] 16[32] v14787[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 16[32])} value=(extract[8] 0[32] 8[32] v14787[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 15[32])} value=(extract[8] 24[32] 32[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 14[32])} value=(extract[8] 16[32] 24[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 13[32])} value=(extract[8] 8[32] 16[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 12[32])} value=(extract[8] 0[32] 8[32] v14782[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x080484e7[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80484e7:ret    
== PartialSymbolic ==
registers:
  ebx    = v1055[32]
  esp    = v1033+0x20[32]
  ebp    = v1061[32]
  esi    = v1057[32]
  edi    = v1059[32]
  eip    = v1063[32]
  pf     = -v1048+0x1[1]
  sf     = v1049[1]
  zf     = v1050[1]
  af     = v1053[1]
  cf     = v1051[1]
  of     = v1054[1]
memory:
  addr=v1033+0x1c[32] value=v1063[32]
  addr=v1033+0x18[32] value=v1061[32]
  addr=v1033+0x14[32] value=v1059[32]
  addr=v1033+0x10[32] value=v1057[32]
  addr=v1033+0xc[32] value=v1055[32]
== Symbolic ==
registers:
  ebx    = v14782[32]
  esp    = {defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6,0x080484e7}, expr=(add[32] esp_0[32] 32[32])}
  ebp    = v14797[32]
  esi    = v14787[32]
  edi    = v14792[32]
  eip    = v14802[32]
  pf     = {defs={0x080484e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] 12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] 12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] 12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] 12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] 12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] 12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] 12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] 12[32]))))}
  sf     = {defs={0x080484e0}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] 12[32]))}
  zf     = {defs={0x080484e0}, expr=(zerop[1] (add[32] esp_0[32] 12[32]))}
  af     = {defs={0x080484e0}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  cf     = {defs={0x080484e0}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  of     = {defs={0x080484e0}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])))}
memory:
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] esp_0[32] 31[32])} value=(extract[8] 24[32] 32[32] v14802[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] esp_0[32] 30[32])} value=(extract[8] 16[32] 24[32] v14802[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] esp_0[32] 29[32])} value=(extract[8] 8[32] 16[32] v14802[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5,0x080484e6}, expr=(add[32] esp_0[32] 28[32])} value=(extract[8] 0[32] 8[32] v14802[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 27[32])} value=(extract[8] 24[32] 32[32] v14797[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 26[32])} value=(extract[8] 16[32] 24[32] v14797[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 25[32])} value=(extract[8] 8[32] 16[32] v14797[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4,0x080484e5}, expr=(add[32] esp_0[32] 24[32])} value=(extract[8] 0[32] 8[32] v14797[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 23[32])} value=(extract[8] 24[32] 32[32] v14792[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 22[32])} value=(extract[8] 16[32] 24[32] v14792[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 21[32])} value=(extract[8] 8[32] 16[32] v14792[32])
  addr={defs={0x080484e0,0x080484e3,0x080484e4}, expr=(add[32] esp_0[32] 20[32])} value=(extract[8] 0[32] 8[32] v14792[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 19[32])} value=(extract[8] 24[32] 32[32] v14787[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 18[32])} value=(extract[8] 16[32] 24[32] v14787[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 17[32])} value=(extract[8] 8[32] 16[32] v14787[32])
  addr={defs={0x080484e0,0x080484e3}, expr=(add[32] esp_0[32] 16[32])} value=(extract[8] 0[32] 8[32] v14787[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 15[32])} value=(extract[8] 24[32] 32[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 14[32])} value=(extract[8] 16[32] 24[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 13[32])} value=(extract[8] 8[32] 16[32] v14782[32])
  addr={defs={0x080484e0}, expr=(add[32] esp_0[32] 12[32])} value=(extract[8] 0[32] 8[32] v14782[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = doubleword[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048520:push   ebp
== PartialSymbolic ==
registers:
  esp    = v1066-0x4[32]
  ebp    = v1067[32]
  eip    = 0x8048521[32]
memory:
  addr=v1066-0x4[32] value=v1067[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048520}, expr=0x08048521[32]}
memory:
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048521[32]
memory:

0x8048521:mov    ebp, esp
== PartialSymbolic ==
registers:
  esp    = v1066-0x4[32]
  ebp    = v1066-0x4[32]
  eip    = 0x8048523[32]
memory:
  addr=v1066-0x4[32] value=v1067[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])}
  ebp    = {defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048521}, expr=0x08048523[32]}
memory:
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048523[32]
memory:

0x8048523:push   edi
== PartialSymbolic ==
registers:
  esp    = v1066-0x8[32]
  ebp    = v1066-0x4[32]
  edi    = v1068[32]
  eip    = 0x8048524[32]
memory:
  addr=v1066-0x8[32] value=v1068[32]
  addr=v1066-0x4[32] value=v1067[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -8[32])}
  ebp    = {defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048523}, expr=0x08048524[32]}
memory:
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] edi_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x08048524[32]
memory:

0x8048524:push   esi
== PartialSymbolic ==
registers:
  esp    = v1066-0xc[32]
  ebp    = v1066-0x4[32]
  esi    = v1069[32]
  edi    = v1068[32]
  eip    = 0x8048525[32]
memory:
  addr=v1066-0xc[32] value=v1069[32]
  addr=v1066-0x8[32] value=v1068[32]
  addr=v1066-0x4[32] value=v1067[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048524}, expr=0x08048525[32]}
memory:
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -9[32])} value=(extract[8] 24[32] 32[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -10[32])} value=(extract[8] 16[32] 24[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -11[32])} value=(extract[8] 8[32] 16[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -12[32])} value=(extract[8] 0[32] 8[32] esi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] edi_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x08048525[32]
memory:

0x8048525:push   ebx
== PartialSymbolic ==
registers:
  ebx    = v1070[32]
  esp    = v1066-0x10[32]
  ebp    = v1066-0x4[32]
  esi    = v1069[32]
  edi    = v1068[32]
  eip    = 0x8048526[32]
memory:
  addr=v1066-0x10[32] value=v1070[32]
  addr=v1066-0xc[32] value=v1069[32]
  addr=v1066-0x8[32] value=v1068[32]
  addr=v1066-0x4[32] value=v1067[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] -16[32])}
  ebp    = {defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048525}, expr=0x08048526[32]}
memory:
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] -13[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] -14[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] -15[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] -16[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -9[32])} value=(extract[8] 24[32] 32[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -10[32])} value=(extract[8] 16[32] 24[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -11[32])} value=(extract[8] 8[32] 16[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -12[32])} value=(extract[8] 0[32] 8[32] esi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] edi_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x08048526[32]
memory:

0x8048526:sub    esp, 0x0c
== PartialSymbolic ==
registers:
  ebx    = v1070[32]
  esp    = v1066-0x1c[32]
  ebp    = v1066-0x4[32]
  esi    = v1069[32]
  edi    = v1068[32]
  eip    = 0x8048529[32]
  pf     = -v1085+0x1[1]
  sf     = v1086[1]
  zf     = v1087[1]
  af     = -v1090+0x1[1]
  cf     = -v1088+0x1[1]
  of     = v1091[1]
memory:
  addr=v1066-0x10[32] value=v1070[32]
  addr=v1066-0xc[32] value=v1069[32]
  addr=v1066-0x8[32] value=v1068[32]
  addr=v1066-0x4[32] value=v1067[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(add[32] esp_0[32] -28[32])}
  ebp    = {defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048526}, expr=0x08048529[32]}
  pf     = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -28[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -28[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -28[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -28[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -28[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -28[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -28[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -28[32]))))}
  sf     = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -28[32]))}
  zf     = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(zerop[1] (add[32] esp_0[32] -28[32]))}
  af     = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])))}
  cf     = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])))}
  of     = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])))}
memory:
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] -13[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] -14[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] -15[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] -16[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -9[32])} value=(extract[8] 24[32] 32[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -10[32])} value=(extract[8] 16[32] 24[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -11[32])} value=(extract[8] 8[32] 16[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -12[32])} value=(extract[8] 0[32] 8[32] esi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] edi_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x08048529[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048529:call   0x0804852e<<Insn>>
== PartialSymbolic ==
registers:
  ebx    = v1070[32]
  esp    = v1066-0x20[32]
  ebp    = v1066-0x4[32]
  esi    = v1069[32]
  edi    = v1068[32]
  eip    = 0x804852e[32]
  pf     = -v1085+0x1[1]
  sf     = v1086[1]
  zf     = v1087[1]
  af     = -v1090+0x1[1]
  cf     = -v1088+0x1[1]
  of     = v1091[1]
memory:
  addr=v1066-0x20[32] value=0x804852e[32]
  addr=v1066-0x10[32] value=v1070[32]
  addr=v1066-0xc[32] value=v1069[32]
  addr=v1066-0x8[32] value=v1068[32]
  addr=v1066-0x4[32] value=v1067[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] esp_0[32] -32[32])}
  ebp    = {defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x0804852e[32]
  pf     = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -28[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -28[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -28[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -28[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -28[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -28[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -28[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -28[32]))))}
  sf     = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -28[32]))}
  zf     = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(zerop[1] (add[32] esp_0[32] -28[32]))}
  af     = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])))}
  cf     = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])))}
  of     = {defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -16[32])) 4294967284[33]) 4294967283[33])))}
memory:
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] esp_0[32] -29[32])} value={defs={0x08048529}, expr=8[8]}
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] esp_0[32] -30[32])} value={defs={0x08048529}, expr=4[8]}
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] esp_0[32] -31[32])} value={defs={0x08048529}, expr=-123[8]}
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525,0x08048526,0x08048529}, expr=(add[32] esp_0[32] -32[32])} value={defs={0x08048529}, expr=46[8]}
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] -13[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] -14[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] -15[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524,0x08048525}, expr=(add[32] esp_0[32] -16[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -9[32])} value=(extract[8] 24[32] 32[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -10[32])} value=(extract[8] 16[32] 24[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -11[32])} value=(extract[8] 8[32] 16[32] esi_0[32])
  addr={defs={0x08048520,0x08048523,0x08048524}, expr=(add[32] esp_0[32] -12[32])} value=(extract[8] 0[32] 8[32] esi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] edi_0[32])
  addr={defs={0x08048520,0x08048523}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] edi_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048520}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x0804852e[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x804852e:pop    ebx
== PartialSymbolic ==
registers:
  ebx    = v1094[32]
  esp    = v1093+0x4[32]
  eip    = 0x804852f[32]
memory:
  addr=v1093[32] value=v1094[32]
== Symbolic ==
registers:
  ebx    = v14815[32]
  esp    = {defs={0x0804852e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x0804852e}, expr=0x0804852f[32]}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14815[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14815[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14815[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14815[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x0804852f[32]
memory:

0x804852f:add    ebx, 0x0000119a
== PartialSymbolic ==
registers:
  ebx    = v1094+0x119a[32]
  esp    = v1093+0x4[32]
  eip    = 0x8048535[32]
  pf     = -v1110+0x1[1]
  sf     = v1111[1]
  zf     = v1112[1]
  af     = v1115[1]
  cf     = v1113[1]
  of     = v1116[1]
memory:
  addr=v1093[32] value=v1094[32]
== Symbolic ==
registers:
  ebx    = {defs={0x0804852f}, expr=(add[32] v14815[32] 4506[32])}
  esp    = {defs={0x0804852e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x0804852f}, expr=0x08048535[32]}
  pf     = {defs={0x0804852f}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14815[32] 4506[32])) (extract[1] 1[32] 2[32] (add[32] v14815[32] 4506[32])) (extract[1] 2[32] 3[32] (add[32] v14815[32] 4506[32])) (extract[1] 3[32] 4[32] (add[32] v14815[32] 4506[32])) (extract[1] 4[32] 5[32] (add[32] v14815[32] 4506[32])) (extract[1] 5[32] 6[32] (add[32] v14815[32] 4506[32])) (extract[1] 6[32] 7[32] (add[32] v14815[32] 4506[32])) (extract[1] 7[32] 8[32] (add[32] v14815[32] 4506[32]))))}
  sf     = {defs={0x0804852f}, expr=(extract[1] 31[32] 32[32] (add[32] v14815[32] 4506[32]))}
  zf     = {defs={0x0804852f}, expr=(zerop[1] (add[32] v14815[32] 4506[32]))}
  af     = {defs={0x0804852f}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14815[32]) (add[33] (uextend[33] 33[32] v14815[32]) 4506[33]) 4506[33]))}
  cf     = {defs={0x0804852f}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14815[32]) (add[33] (uextend[33] 33[32] v14815[32]) 4506[33]) 4506[33]))}
  of     = {defs={0x0804852f}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14815[32]) (add[33] (uextend[33] 33[32] v14815[32]) 4506[33]) 4506[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14815[32]) (add[33] (uextend[33] 33[32] v14815[32]) 4506[33]) 4506[33])))}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14815[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14815[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14815[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14815[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x08048535[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
== PartialSymbolic ==
registers:
  eax    = v1094+0x10ba[32]
  ebx    = v1094+0x119a[32]
  esp    = v1093+0x4[32]
  eip    = 0x804853b[32]
  pf     = -v1110+0x1[1]
  sf     = v1111[1]
  zf     = v1112[1]
  af     = v1115[1]
  cf     = v1113[1]
  of     = v1116[1]
memory:
  addr=v1093[32] value=v1094[32]
== Symbolic ==
registers:
  eax    = {defs={0x0804852f,0x08048535}, expr=(add[32] v14815[32] 4282[32])}
  ebx    = {defs={0x0804852f}, expr=(add[32] v14815[32] 4506[32])}
  esp    = {defs={0x0804852e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x08048535}, expr=0x0804853b[32]}
  pf     = {defs={0x0804852f}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14815[32] 4506[32])) (extract[1] 1[32] 2[32] (add[32] v14815[32] 4506[32])) (extract[1] 2[32] 3[32] (add[32] v14815[32] 4506[32])) (extract[1] 3[32] 4[32] (add[32] v14815[32] 4506[32])) (extract[1] 4[32] 5[32] (add[32] v14815[32] 4506[32])) (extract[1] 5[32] 6[32] (add[32] v14815[32] 4506[32])) (extract[1] 6[32] 7[32] (add[32] v14815[32] 4506[32])) (extract[1] 7[32] 8[32] (add[32] v14815[32] 4506[32]))))}
  sf     = {defs={0x0804852f}, expr=(extract[1] 31[32] 32[32] (add[32] v14815[32] 4506[32]))}
  zf     = {defs={0x0804852f}, expr=(zerop[1] (add[32] v14815[32] 4506[32]))}
  af     = {defs={0x0804852f}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14815[32]) (add[33] (uextend[33] 33[32] v14815[32]) 4506[33]) 4506[33]))}
  cf     = {defs={0x0804852f}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14815[32]) (add[33] (uextend[33] 33[32] v14815[32]) 4506[33]) 4506[33]))}
  of     = {defs={0x0804852f}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14815[32]) (add[33] (uextend[33] 33[32] v14815[32]) 4506[33]) 4506[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14815[32]) (add[33] (uextend[33] 33[32] v14815[32]) 4506[33]) 4506[33])))}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14815[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14815[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14815[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14815[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x0804853b[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
== PartialSymbolic ==
registers:
  eax    = v1094+0x10ba[32]
  edx    = v1094+0x10ba[32]
  ebx    = v1094+0x119a[32]
  esp    = v1093+0x4[32]
  eip    = 0x8048541[32]
  pf     = -v1110+0x1[1]
  sf     = v1111[1]
  zf     = v1112[1]
  af     = v1115[1]
  cf     = v1113[1]
  of     = v1116[1]
memory:
  addr=v1093[32] value=v1094[32]
== Symbolic ==
registers:
  eax    = {defs={0x0804852f,0x08048535}, expr=(add[32] v14815[32] 4282[32])}
  edx    = {defs={0x0804852f,0x0804853b}, expr=(add[32] v14815[32] 4282[32])}
  ebx    = {defs={0x0804852f}, expr=(add[32] v14815[32] 4506[32])}
  esp    = {defs={0x0804852e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x0804853b}, expr=0x08048541[32]}
  pf     = {defs={0x0804852f}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14815[32] 4506[32])) (extract[1] 1[32] 2[32] (add[32] v14815[32] 4506[32])) (extract[1] 2[32] 3[32] (add[32] v14815[32] 4506[32])) (extract[1] 3[32] 4[32] (add[32] v14815[32] 4506[32])) (extract[1] 4[32] 5[32] (add[32] v14815[32] 4506[32])) (extract[1] 5[32] 6[32] (add[32] v14815[32] 4506[32])) (extract[1] 6[32] 7[32] (add[32] v14815[32] 4506[32])) (extract[1] 7[32] 8[32] (add[32] v14815[32] 4506[32]))))}
  sf     = {defs={0x0804852f}, expr=(extract[1] 31[32] 32[32] (add[32] v14815[32] 4506[32]))}
  zf     = {defs={0x0804852f}, expr=(zerop[1] (add[32] v14815[32] 4506[32]))}
  af     = {defs={0x0804852f}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14815[32]) (add[33] (uextend[33] 33[32] v14815[32]) 4506[33]) 4506[33]))}
  cf     = {defs={0x0804852f}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14815[32]) (add[33] (uextend[33] 33[32] v14815[32]) 4506[33]) 4506[33]))}
  of     = {defs={0x0804852f}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14815[32]) (add[33] (uextend[33] 33[32] v14815[32]) 4506[33]) 4506[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14815[32]) (add[33] (uextend[33] 33[32] v14815[32]) 4506[33]) 4506[33])))}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14815[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14815[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14815[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14815[32])
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x08048541[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048541:sub    eax, edx
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  edx    = v1094+0x10ba[32]
  ebx    = v1094+0x119a[32]
  esp    = v1093+0x4[32]
  eip    = 0x8048543[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  af     = 0x0[1]
  cf     = 0x0[1]
  of     = 0x0[1]
memory:
  addr=v1093[32] value=v1094[32]
== Symbolic ==
registers:
  eax    = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])}
  edx    = {defs={0x0804852f,0x0804853b}, expr=(add[32] v14815[32] 4282[32])}
  ebx    = {defs={0x0804852f}, expr=(add[32] v14815[32] 4506[32])}
  esp    = {defs={0x0804852e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x08048541}, expr=0x08048543[32]}
  pf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) (extract[1] 1[32] 2[32] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) (extract[1] 2[32] 3[32] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) (extract[1] 3[32] 4[32] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) (extract[1] 4[32] 5[32] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) (extract[1] 5[32] 6[32] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) (extract[1] 6[32] 7[32] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) (extract[1] 7[32] 8[32] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))))}
  sf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(extract[1] 31[32] 32[32] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))}
  zf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(zerop[1] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))}
  af     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v14815[32] 4282[32])) (uextend[33] 33[32] (invert[32] (add[32] v14815[32] 4282[32]))) (add[33] (uextend[33] 33[32] (add[32] v14815[32] 4282[32])) (uextend[33] 33[32] (invert[32] (add[32] v14815[32] 4282[32]))) 1[33]))))}
  cf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v14815[32] 4282[32])) (uextend[33] 33[32] (invert[32] (add[32] v14815[32] 4282[32]))) (add[33] (uextend[33] 33[32] (add[32] v14815[32] 4282[32])) (uextend[33] 33[32] (invert[32] (add[32] v14815[32] 4282[32]))) 1[33]))))}
  of     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v14815[32] 4282[32])) (uextend[33] 33[32] (invert[32] (add[32] v14815[32] 4282[32]))) (add[33] (uextend[33] 33[32] (add[32] v14815[32] 4282[32])) (uextend[33] 33[32] (invert[32] (add[32] v14815[32] 4282[32]))) 1[33]))) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v14815[32] 4282[32])) (uextend[33] 33[32] (invert[32] (add[32] v14815[32] 4282[32]))) (add[33] (uextend[33] 33[32] (add[32] v14815[32] 4282[32])) (uextend[33] 33[32] (invert[32] (add[32] v14815[32] 4282[32]))) 1[33]))))}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14815[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14815[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14815[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14815[32])
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x08048543[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048543:sar    eax, 0x02
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  edx    = v1094+0x10ba[32]
  ebx    = v1094+0x119a[32]
  esp    = v1093+0x4[32]
  eip    = 0x8048546[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  af     = v1118[1]
  cf     = 0x0[1]
  of     = v1119[1]
memory:
  addr=v1093[32] value=v1094[32]
== Symbolic ==
registers:
  eax    = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))}
  edx    = {defs={0x0804852f,0x0804853b}, expr=(add[32] v14815[32] 4282[32])}
  ebx    = {defs={0x0804852f}, expr=(add[32] v14815[32] 4506[32])}
  esp    = {defs={0x0804852e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x08048543}, expr=0x08048546[32]}
  pf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 1[32] 2[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 2[32] 3[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 3[32] 4[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 4[32] 5[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 5[32] 6[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 6[32] 7[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 7[32] 8[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))))}
  sf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  zf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(zerop[1] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  af     = {defs={0x08048543}, expr=v14821[1]}
  cf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  of     = {defs={0x08048543}, expr=v14822[1]}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14815[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14815[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14815[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14815[32])
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x08048546[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
== PartialSymbolic ==
registers:
  eax    = 0x0[32]
  edx    = v1094+0x10ba[32]
  ebx    = v1094+0x119a[32]
  esp    = v1093+0x4[32]
  ebp    = v1120[32]
  eip    = 0x8048549[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  af     = v1118[1]
  cf     = 0x0[1]
  of     = v1119[1]
memory:
  addr=v1120-0x10[32] value=0x0[32]
  addr=v1093[32] value=v1094[32]
== Symbolic ==
registers:
  eax    = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))}
  edx    = {defs={0x0804852f,0x0804853b}, expr=(add[32] v14815[32] 4282[32])}
  ebx    = {defs={0x0804852f}, expr=(add[32] v14815[32] 4506[32])}
  esp    = {defs={0x0804852e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x08048546}, expr=0x08048549[32]}
  pf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 1[32] 2[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 2[32] 3[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 3[32] 4[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 4[32] 5[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 5[32] 6[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 6[32] 7[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 7[32] 8[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))))}
  sf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  zf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(zerop[1] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  af     = {defs={0x08048543}, expr=v14821[1]}
  cf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  of     = {defs={0x08048543}, expr=v14822[1]}
memory:
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -13[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -14[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -15[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -16[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14815[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14815[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14815[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14815[32])
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048549[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048549:dec    eax
== PartialSymbolic ==
registers:
  eax    = 0xffffffff (-0x1)[32]
  edx    = v1094+0x10ba[32]
  ebx    = v1094+0x119a[32]
  esp    = v1093+0x4[32]
  ebp    = v1120[32]
  eip    = 0x804854a[32]
  pf     = 0x1[1]
  sf     = 0x1[1]
  zf     = 0x0[1]
  af     = 0x1[1]
  cf     = 0x0[1]
  of     = 0x0[1]
memory:
  addr=v1120-0x10[32] value=0x0[32]
  addr=v1093[32] value=v1094[32]
== Symbolic ==
registers:
  eax    = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])}
  edx    = {defs={0x0804852f,0x0804853b}, expr=(add[32] v14815[32] 4282[32])}
  ebx    = {defs={0x0804852f}, expr=(add[32] v14815[32] 4506[32])}
  esp    = {defs={0x0804852e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x08048549}, expr=0x0804854a[32]}
  pf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (extract[1] 1[32] 2[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (extract[1] 2[32] 3[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (extract[1] 3[32] 4[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (extract[1] 4[32] 5[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (extract[1] 5[32] 6[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (extract[1] 6[32] 7[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (extract[1] 7[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32]))))}
  sf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(extract[1] 31[32] 32[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32]))}
  zf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(zerop[1] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32]))}
  af     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) 4294967295[33]) 4294967295[33])))}
  cf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  of     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) 4294967295[33]) 4294967295[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) 4294967295[33]) 4294967295[33])))}
memory:
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -13[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -14[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -15[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -16[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14815[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14815[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14815[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14815[32])
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x0804854a[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x804854a:cmp    eax, 0xff<-0x01>
== PartialSymbolic ==
registers:
  eax    = 0xffffffff (-0x1)[32]
  edx    = v1094+0x10ba[32]
  ebx    = v1094+0x119a[32]
  esp    = v1093+0x4[32]
  ebp    = v1120[32]
  eip    = 0x804854d[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  af     = 0x0[1]
  cf     = 0x0[1]
  of     = 0x0[1]
memory:
  addr=v1120-0x10[32] value=0x0[32]
  addr=v1093[32] value=v1094[32]
== Symbolic ==
registers:
  eax    = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])}
  edx    = {defs={0x0804852f,0x0804853b}, expr=(add[32] v14815[32] 4282[32])}
  ebx    = {defs={0x0804852f}, expr=(add[32] v14815[32] 4506[32])}
  esp    = {defs={0x0804852e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x0804854a}, expr=0x0804854d[32]}
  pf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 1[32] 2[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 2[32] 3[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 3[32] 4[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 4[32] 5[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 5[32] 6[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 6[32] 7[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 7[32] 8[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))))}
  sf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  zf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(zerop[1] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  af     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) 1[33]) 0[33])))}
  cf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) 1[33]) 0[33])))}
  of     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) 1[33]) 0[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) 1[33]) 0[33])))}
memory:
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -13[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -14[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -15[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -16[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14815[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14815[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14815[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14815[32])
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x0804854d[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x804854d:je     0x0804856b<<Insn>>
== PartialSymbolic ==
registers:
  eax    = 0xffffffff (-0x1)[32]
  edx    = v1094+0x10ba[32]
  ebx    = v1094+0x119a[32]
  esp    = v1093+0x4[32]
  ebp    = v1120[32]
  eip    = 0x804856b[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  af     = 0x0[1]
  cf     = 0x0[1]
  of     = 0x0[1]
memory:
  addr=v1120-0x10[32] value=0x0[32]
  addr=v1093[32] value=v1094[32]
== Symbolic ==
registers:
  eax    = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549}, expr=(add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])}
  edx    = {defs={0x0804852f,0x0804853b}, expr=(add[32] v14815[32] 4282[32])}
  ebx    = {defs={0x0804852f}, expr=(add[32] v14815[32] 4506[32])}
  esp    = {defs={0x0804852e}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a,0x0804854d}, expr=(ite[32] (zerop[1] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) 0x0804856b[32] 0x0804854f[32])}
  pf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 1[32] 2[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 2[32] 3[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 3[32] 4[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 4[32] 5[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 5[32] 6[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 6[32] 7[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32]))) (extract[1] 7[32] 8[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))))}
  sf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  zf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(zerop[1] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  af     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) 1[33]) 0[33])))}
  cf     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) 1[33]) 0[33])))}
  of     = {defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543,0x08048549,0x0804854a}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) 1[33]) 0[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])) -1[32])) 1[33]) 0[33])))}
memory:
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -13[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 24[32] 32[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -14[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 16[32] 24[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -15[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 8[32] 16[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr={defs={0x08048546}, expr=(add[32] ebp_0[32] -16[32])} value={defs={0x0804852f,0x08048535,0x0804853b,0x08048541,0x08048543}, expr=(extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (invert[32] (add[32] v14815[32] 4282[32])) v14815[32] 4283[32])))}
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14815[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14815[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14815[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14815[32])
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x0804854f, 0x0804856b[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x804854f:lea    esi, [edx + eax*0x04]
== PartialSymbolic ==
registers:
  eax    = v1123[32]
  edx    = v1122[32]
  esi    = v1125[32]
  eip    = 0x8048552[32]
memory:
== Symbolic ==
registers:
  esi    = {defs={0x0804854f}, expr=(add[32] (extract[32] 0[32] 32[32] (umul[64] eax_0[32] 4[32])) edx_0[32])}
  eip    = {defs={0x0804854f}, expr=0x08048552[32]}
memory:
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x08048552[32]
memory:

0x8048552:xor    edi, edi
== PartialSymbolic ==
registers:
  eax    = v1123[32]
  edx    = v1122[32]
  esi    = v1125[32]
  edi    = 0x0[32]
  eip    = 0x8048554[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v1127[1]
  cf     = 0x0[1]
memory:
== Symbolic ==
registers:
  esi    = {defs={0x0804854f}, expr=(add[32] (extract[32] 0[32] 32[32] (umul[64] eax_0[32] 4[32])) edx_0[32])}
  edi    = {defs={0x08048552}, expr=0[32]}
  eip    = {defs={0x08048552}, expr=0x08048554[32]}
  pf     = {defs={0x08048552}, expr=1[1]}
  sf     = {defs={0x08048552}, expr=0[1]}
  zf     = {defs={0x08048552}, expr=1[1]}
  of     = 0[1]
  af     = v14828[1]
  cf     = 0[1]
memory:
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x08048554[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048554:lea    esi, [esi + 0x00000000]
== PartialSymbolic ==
registers:
  eax    = v1123[32]
  edx    = v1122[32]
  esi    = v1125[32]
  edi    = 0x0[32]
  eip    = 0x804855a[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v1127[1]
  cf     = 0x0[1]
memory:
== Symbolic ==
registers:
  esi    = {defs={0x0804854f,0x08048554}, expr=(add[32] (extract[32] 0[32] 32[32] (umul[64] eax_0[32] 4[32])) edx_0[32])}
  edi    = {defs={0x08048552}, expr=0[32]}
  eip    = {defs={0x08048554}, expr=0x0804855a[32]}
  pf     = {defs={0x08048552}, expr=1[1]}
  sf     = {defs={0x08048552}, expr=0[1]}
  zf     = {defs={0x08048552}, expr=1[1]}
  of     = 0[1]
  af     = v14828[1]
  cf     = 0[1]
memory:
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x0804855a[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x804855a:lea    edi, [edi + 0x00000000]
== PartialSymbolic ==
registers:
  eax    = v1123[32]
  edx    = v1122[32]
  esi    = v1125[32]
  edi    = 0x0[32]
  eip    = 0x8048560[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v1127[1]
  cf     = 0x0[1]
memory:
== Symbolic ==
registers:
  esi    = {defs={0x0804854f,0x08048554}, expr=(add[32] (extract[32] 0[32] 32[32] (umul[64] eax_0[32] 4[32])) edx_0[32])}
  edi    = {defs={0x08048552,0x0804855a}, expr=0[32]}
  eip    = {defs={0x0804855a}, expr=0x08048560[32]}
  pf     = {defs={0x08048552}, expr=1[1]}
  sf     = {defs={0x08048552}, expr=0[1]}
  zf     = {defs={0x08048552}, expr=1[1]}
  of     = 0[1]
  af     = v14828[1]
  cf     = 0[1]
memory:
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x08048560[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:

0x8048560:call   DWORD PTR ds:[esi]
== PartialSymbolic ==
registers:
  eax    = v1123[32]
  edx    = v1122[32]
  esp    = v1128-0x4[32]
  esi    = v1125[32]
  edi    = 0x0[32]
  eip    = v1129[32]
  pf     = 0x1[1]
  sf     = 0x0[1]
  zf     = 0x1[1]
  of     = 0x0[1]
  af     = v1127[1]
  cf     = 0x0[1]
memory:
  addr=v1125[32] value=v1129[32]
  addr=v1128-0x4[32] value=0x8048562[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048560}, expr=(add[32] esp_0[32] -4[32])}
  esi    = {defs={0x0804854f,0x08048554}, expr=(add[32] (extract[32] 0[32] 32[32] (umul[64] eax_0[32] 4[32])) edx_0[32])}
  edi    = {defs={0x08048552,0x0804855a}, expr=0[32]}
  eip    = v14830[32]
  pf     = {defs={0x08048552}, expr=1[1]}
  sf     = {defs={0x08048552}, expr=0[1]}
  zf     = {defs={0x08048552}, expr=1[1]}
  of     = 0[1]
  af     = v14828[1]
  cf     = 0[1]
memory:
  addr={defs={0x0804854f,0x08048554}, expr=(add[32] (extract[32] 0[32] 32[32] (umul[64] eax_0[32] 4[32])) edx_0[32] 3[32])} value=(extract[8] 24[32] 32[32] v14830[32])
  addr={defs={0x0804854f,0x08048554}, expr=(add[32] (extract[32] 0[32] 32[32] (umul[64] eax_0[32] 4[32])) edx_0[32] 2[32])} value=(extract[8] 16[32] 24[32] v14830[32])
  addr={defs={0x0804854f,0x08048554}, expr=(add[32] (extract[32] 0[32] 32[32] (umul[64] eax_0[32] 4[32])) edx_0[32] 1[32])} value=(extract[8] 8[32] 16[32] v14830[32])
  addr={defs={0x0804854f,0x08048554}, expr=(add[32] (extract[32] 0[32] 32[32] (umul[64] eax_0[32] 4[32])) edx_0[32])} value=(extract[8] 0[32] 8[32] v14830[32])
  addr={defs={0x08048560}, expr=(add[32] esp_0[32] -1[32])} value={defs={0x08048560}, expr=8[8]}
  addr={defs={0x08048560}, expr=(add[32] esp_0[32] -2[32])} value={defs={0x08048560}, expr=4[8]}
  addr={defs={0x08048560}, expr=(add[32] esp_0[32] -3[32])} value={defs={0x08048560}, expr=-123[8]}
  addr={defs={0x08048560}, expr=(add[32] esp_0[32] -4[32])} value={defs={0x08048560}, expr=98[8]}
== Interval ==
registers:
  eax    = doubleword[32]
  edx    = doubleword[32]
  esp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = doubleword[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  of     = 0[1]
  af     = 0..1[1]
  cf     = 0[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048562:inc    edi
== PartialSymbolic ==
registers:
  edi    = v1162+0x1[32]
  eip    = 0x8048563[32]
  pf     = -v1177+0x1[1]
  sf     = v1178[1]
  zf     = v1179[1]
  af     = v1182[1]
  of     = v1183[1]
memory:
== Symbolic ==
registers:
  edi    = {defs={0x08048562}, expr=(add[32] edi_0[32] 1[32])}
  eip    = {defs={0x08048562}, expr=0x08048563[32]}
  pf     = {defs={0x08048562}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] edi_0[32] 1[32])) (extract[1] 1[32] 2[32] (add[32] edi_0[32] 1[32])) (extract[1] 2[32] 3[32] (add[32] edi_0[32] 1[32])) (extract[1] 3[32] 4[32] (add[32] edi_0[32] 1[32])) (extract[1] 4[32] 5[32] (add[32] edi_0[32] 1[32])) (extract[1] 5[32] 6[32] (add[32] edi_0[32] 1[32])) (extract[1] 6[32] 7[32] (add[32] edi_0[32] 1[32])) (extract[1] 7[32] 8[32] (add[32] edi_0[32] 1[32]))))}
  sf     = {defs={0x08048562}, expr=(extract[1] 31[32] 32[32] (add[32] edi_0[32] 1[32]))}
  zf     = {defs={0x08048562}, expr=(zerop[1] (add[32] edi_0[32] 1[32]))}
  af     = {defs={0x08048562}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] edi_0[32]) (add[33] (uextend[33] 33[32] edi_0[32]) 1[33]) 1[33]))}
  of     = {defs={0x08048562}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] edi_0[32]) (add[33] (uextend[33] 33[32] edi_0[32]) 1[33]) 1[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] edi_0[32]) (add[33] (uextend[33] 33[32] edi_0[32]) 1[33]) 1[33])))}
memory:
== Interval ==
registers:
  edi    = doubleword[32]
  eip    = 0x08048563[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048563:sub    esi, 0x04
== PartialSymbolic ==
registers:
  esi    = v1184-0x4[32]
  edi    = v1162+0x1[32]
  eip    = 0x8048566[32]
  pf     = -v1199+0x1[1]
  sf     = v1200[1]
  zf     = v1201[1]
  af     = -v1204+0x1[1]
  of     = v1205[1]
  cf     = -v1202+0x1[1]
memory:
== Symbolic ==
registers:
  esi    = {defs={0x08048563}, expr=(add[32] esi_0[32] -4[32])}
  edi    = {defs={0x08048562}, expr=(add[32] edi_0[32] 1[32])}
  eip    = {defs={0x08048563}, expr=0x08048566[32]}
  pf     = {defs={0x08048563}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esi_0[32] -4[32])) (extract[1] 1[32] 2[32] (add[32] esi_0[32] -4[32])) (extract[1] 2[32] 3[32] (add[32] esi_0[32] -4[32])) (extract[1] 3[32] 4[32] (add[32] esi_0[32] -4[32])) (extract[1] 4[32] 5[32] (add[32] esi_0[32] -4[32])) (extract[1] 5[32] 6[32] (add[32] esi_0[32] -4[32])) (extract[1] 6[32] 7[32] (add[32] esi_0[32] -4[32])) (extract[1] 7[32] 8[32] (add[32] esi_0[32] -4[32]))))}
  sf     = {defs={0x08048563}, expr=(extract[1] 31[32] 32[32] (add[32] esi_0[32] -4[32]))}
  zf     = {defs={0x08048563}, expr=(zerop[1] (add[32] esi_0[32] -4[32]))}
  af     = {defs={0x08048563}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] esi_0[32]) (add[33] (uextend[33] 33[32] esi_0[32]) 4294967292[33]) 4294967291[33])))}
  of     = {defs={0x08048563}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esi_0[32]) (add[33] (uextend[33] 33[32] esi_0[32]) 4294967292[33]) 4294967291[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] esi_0[32]) (add[33] (uextend[33] 33[32] esi_0[32]) 4294967292[33]) 4294967291[33])))}
  cf     = {defs={0x08048563}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esi_0[32]) (add[33] (uextend[33] 33[32] esi_0[32]) 4294967292[33]) 4294967291[33])))}
memory:
== Interval ==
registers:
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x08048566[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  of     = 0..1[1]
  cf     = 0..1[1]
memory:

0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
== PartialSymbolic ==
registers:
  ebp    = v1206[32]
  esi    = v1184-0x4[32]
  edi    = v1162+0x1[32]
  eip    = 0x8048569[32]
  pf     = -v1224+0x1[1]
  sf     = v1225[1]
  zf     = v1226[1]
  af     = -v1229+0x1[1]
  of     = v1230[1]
  cf     = -v1227+0x1[1]
memory:
  addr=v1206-0x10[32] value=v1207[32]
== Symbolic ==
registers:
  esi    = {defs={0x08048563}, expr=(add[32] esi_0[32] -4[32])}
  edi    = {defs={0x08048562}, expr=(add[32] edi_0[32] 1[32])}
  eip    = {defs={0x08048566}, expr=0x08048569[32]}
  pf     = {defs={0x08048562,0x08048566}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32])) (extract[1] 1[32] 2[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32])) (extract[1] 2[32] 3[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32])) (extract[1] 3[32] 4[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32])) (extract[1] 4[32] 5[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32])) (extract[1] 5[32] 6[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32])) (extract[1] 6[32] 7[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32])) (extract[1] 7[32] 8[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32]))))}
  sf     = {defs={0x08048562,0x08048566}, expr=(extract[1] 31[32] 32[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32]))}
  zf     = {defs={0x08048562,0x08048566}, expr=(zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32]))}
  af     = {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) (add[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) 1[33]))))}
  of     = {defs={0x08048562,0x08048566}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) (add[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) 1[33]))) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) (add[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) 1[33]))))}
  cf     = {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) (add[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) 1[33]))))}
memory:
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] -13[32])} value=(extract[8] 24[32] 32[32] v14839[32])
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] -14[32])} value=(extract[8] 16[32] 24[32] v14839[32])
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] -15[32])} value=(extract[8] 8[32] 16[32] v14839[32])
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] -16[32])} value=(extract[8] 0[32] 8[32] v14839[32])
== Interval ==
registers:
  ebp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x08048569[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  of     = 0..1[1]
  cf     = 0..1[1]
memory:

0x8048569:jne    0x08048560<<Insn>>
== PartialSymbolic ==
registers:
  ebp    = v1206[32]
  esi    = v1184-0x4[32]
  edi    = v1162+0x1[32]
  eip    = v1231[32]
  pf     = -v1224+0x1[1]
  sf     = v1225[1]
  zf     = v1226[1]
  af     = -v1229+0x1[1]
  of     = v1230[1]
  cf     = -v1227+0x1[1]
memory:
  addr=v1206-0x10[32] value=v1207[32]
== Symbolic ==
registers:
  esi    = {defs={0x08048563}, expr=(add[32] esi_0[32] -4[32])}
  edi    = {defs={0x08048562}, expr=(add[32] edi_0[32] 1[32])}
  eip    = {defs={0x08048562,0x08048566,0x08048569}, expr=(ite[32] (invert[1] (zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32]))) 0x08048560[32] 0x0804856b[32])}
  pf     = {defs={0x08048562,0x08048566}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32])) (extract[1] 1[32] 2[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32])) (extract[1] 2[32] 3[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32])) (extract[1] 3[32] 4[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32])) (extract[1] 4[32] 5[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32])) (extract[1] 5[32] 6[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32])) (extract[1] 6[32] 7[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32])) (extract[1] 7[32] 8[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32]))))}
  sf     = {defs={0x08048562,0x08048566}, expr=(extract[1] 31[32] 32[32] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32]))}
  zf     = {defs={0x08048562,0x08048566}, expr=(zerop[1] (add[32] (invert[32] (add[32] edi_0[32] 1[32])) v14839[32] 1[32]))}
  af     = {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) (add[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) 1[33]))))}
  of     = {defs={0x08048562,0x08048566}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) (add[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) 1[33]))) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) (add[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) 1[33]))))}
  cf     = {defs={0x08048562,0x08048566}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) (add[33] (uextend[33] 33[32] v14839[32]) (uextend[33] 33[32] (invert[32] (add[32] edi_0[32] 1[32]))) 1[33]))))}
memory:
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] -13[32])} value=(extract[8] 24[32] 32[32] v14839[32])
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] -14[32])} value=(extract[8] 16[32] 24[32] v14839[32])
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] -15[32])} value=(extract[8] 8[32] 16[32] v14839[32])
  addr={defs={0x08048566}, expr=(add[32] ebp_0[32] -16[32])} value=(extract[8] 0[32] 8[32] v14839[32])
== Interval ==
registers:
  ebp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x08048560, 0x0804856b[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  of     = 0..1[1]
  cf     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x804856b:call   0x080485b0<_fini>
== PartialSymbolic ==
registers:
  esp    = v1233-0x4[32]
  eip    = 0x80485b0[32]
memory:
  addr=v1233-0x4[32] value=0x8048570[32]
== Symbolic ==
registers:
  esp    = {defs={0x0804856b}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x080485b0[32]
memory:
  addr={defs={0x0804856b}, expr=(add[32] esp_0[32] -1[32])} value={defs={0x0804856b}, expr=8[8]}
  addr={defs={0x0804856b}, expr=(add[32] esp_0[32] -2[32])} value={defs={0x0804856b}, expr=4[8]}
  addr={defs={0x0804856b}, expr=(add[32] esp_0[32] -3[32])} value={defs={0x0804856b}, expr=-123[8]}
  addr={defs={0x0804856b}, expr=(add[32] esp_0[32] -4[32])} value={defs={0x0804856b}, expr=112[8]}
== Interval ==
registers:
  esp    = doubleword[32]
  eip    = 0x080485b0[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048570:add    esp, 0x0c
== PartialSymbolic ==
registers:
  esp    = v1235+0xc[32]
  eip    = 0x8048573[32]
  pf     = -v1250+0x1[1]
  sf     = v1251[1]
  zf     = v1252[1]
  af     = v1255[1]
  cf     = v1253[1]
  of     = v1256[1]
memory:
== Symbolic ==
registers:
  esp    = {defs={0x08048570}, expr=(add[32] esp_0[32] 12[32])}
  eip    = {defs={0x08048570}, expr=0x08048573[32]}
  pf     = {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] 12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] 12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] 12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] 12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] 12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] 12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] 12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] 12[32]))))}
  sf     = {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] 12[32]))}
  zf     = {defs={0x08048570}, expr=(zerop[1] (add[32] esp_0[32] 12[32]))}
  af     = {defs={0x08048570}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  cf     = {defs={0x08048570}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  of     = {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])))}
memory:
== Interval ==
registers:
  esp    = doubleword[32]
  eip    = 0x08048573[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048573:pop    ebx
== PartialSymbolic ==
registers:
  ebx    = v1257[32]
  esp    = v1235+0x10[32]
  eip    = 0x8048574[32]
  pf     = -v1250+0x1[1]
  sf     = v1251[1]
  zf     = v1252[1]
  af     = v1255[1]
  cf     = v1253[1]
  of     = v1256[1]
memory:
  addr=v1235+0xc[32] value=v1257[32]
== Symbolic ==
registers:
  ebx    = v14848[32]
  esp    = {defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 16[32])}
  eip    = {defs={0x08048573}, expr=0x08048574[32]}
  pf     = {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] 12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] 12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] 12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] 12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] 12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] 12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] 12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] 12[32]))))}
  sf     = {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] 12[32]))}
  zf     = {defs={0x08048570}, expr=(zerop[1] (add[32] esp_0[32] 12[32]))}
  af     = {defs={0x08048570}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  cf     = {defs={0x08048570}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  of     = {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])))}
memory:
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 15[32])} value=(extract[8] 24[32] 32[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 14[32])} value=(extract[8] 16[32] 24[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 13[32])} value=(extract[8] 8[32] 16[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 12[32])} value=(extract[8] 0[32] 8[32] v14848[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x08048574[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048574:pop    esi
== PartialSymbolic ==
registers:
  ebx    = v1257[32]
  esp    = v1235+0x14[32]
  esi    = v1259[32]
  eip    = 0x8048575[32]
  pf     = -v1250+0x1[1]
  sf     = v1251[1]
  zf     = v1252[1]
  af     = v1255[1]
  cf     = v1253[1]
  of     = v1256[1]
memory:
  addr=v1235+0x10[32] value=v1259[32]
  addr=v1235+0xc[32] value=v1257[32]
== Symbolic ==
registers:
  ebx    = v14848[32]
  esp    = {defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 20[32])}
  esi    = v14853[32]
  eip    = {defs={0x08048574}, expr=0x08048575[32]}
  pf     = {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] 12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] 12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] 12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] 12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] 12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] 12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] 12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] 12[32]))))}
  sf     = {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] 12[32]))}
  zf     = {defs={0x08048570}, expr=(zerop[1] (add[32] esp_0[32] 12[32]))}
  af     = {defs={0x08048570}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  cf     = {defs={0x08048570}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  of     = {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])))}
memory:
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 19[32])} value=(extract[8] 24[32] 32[32] v14853[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 18[32])} value=(extract[8] 16[32] 24[32] v14853[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 17[32])} value=(extract[8] 8[32] 16[32] v14853[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 16[32])} value=(extract[8] 0[32] 8[32] v14853[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 15[32])} value=(extract[8] 24[32] 32[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 14[32])} value=(extract[8] 16[32] 24[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 13[32])} value=(extract[8] 8[32] 16[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 12[32])} value=(extract[8] 0[32] 8[32] v14848[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  esi    = doubleword[32]
  eip    = 0x08048575[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048575:pop    edi
== PartialSymbolic ==
registers:
  ebx    = v1257[32]
  esp    = v1235+0x18[32]
  esi    = v1259[32]
  edi    = v1261[32]
  eip    = 0x8048576[32]
  pf     = -v1250+0x1[1]
  sf     = v1251[1]
  zf     = v1252[1]
  af     = v1255[1]
  cf     = v1253[1]
  of     = v1256[1]
memory:
  addr=v1235+0x14[32] value=v1261[32]
  addr=v1235+0x10[32] value=v1259[32]
  addr=v1235+0xc[32] value=v1257[32]
== Symbolic ==
registers:
  ebx    = v14848[32]
  esp    = {defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 24[32])}
  esi    = v14853[32]
  edi    = v14858[32]
  eip    = {defs={0x08048575}, expr=0x08048576[32]}
  pf     = {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] 12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] 12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] 12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] 12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] 12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] 12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] 12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] 12[32]))))}
  sf     = {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] 12[32]))}
  zf     = {defs={0x08048570}, expr=(zerop[1] (add[32] esp_0[32] 12[32]))}
  af     = {defs={0x08048570}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  cf     = {defs={0x08048570}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  of     = {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])))}
memory:
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 23[32])} value=(extract[8] 24[32] 32[32] v14858[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 22[32])} value=(extract[8] 16[32] 24[32] v14858[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 21[32])} value=(extract[8] 8[32] 16[32] v14858[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 20[32])} value=(extract[8] 0[32] 8[32] v14858[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 19[32])} value=(extract[8] 24[32] 32[32] v14853[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 18[32])} value=(extract[8] 16[32] 24[32] v14853[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 17[32])} value=(extract[8] 8[32] 16[32] v14853[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 16[32])} value=(extract[8] 0[32] 8[32] v14853[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 15[32])} value=(extract[8] 24[32] 32[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 14[32])} value=(extract[8] 16[32] 24[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 13[32])} value=(extract[8] 8[32] 16[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 12[32])} value=(extract[8] 0[32] 8[32] v14848[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x08048576[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048576:pop    ebp
== PartialSymbolic ==
registers:
  ebx    = v1257[32]
  esp    = v1235+0x1c[32]
  ebp    = v1263[32]
  esi    = v1259[32]
  edi    = v1261[32]
  eip    = 0x8048577[32]
  pf     = -v1250+0x1[1]
  sf     = v1251[1]
  zf     = v1252[1]
  af     = v1255[1]
  cf     = v1253[1]
  of     = v1256[1]
memory:
  addr=v1235+0x18[32] value=v1263[32]
  addr=v1235+0x14[32] value=v1261[32]
  addr=v1235+0x10[32] value=v1259[32]
  addr=v1235+0xc[32] value=v1257[32]
== Symbolic ==
registers:
  ebx    = v14848[32]
  esp    = {defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] esp_0[32] 28[32])}
  ebp    = v14863[32]
  esi    = v14853[32]
  edi    = v14858[32]
  eip    = {defs={0x08048576}, expr=0x08048577[32]}
  pf     = {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] 12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] 12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] 12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] 12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] 12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] 12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] 12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] 12[32]))))}
  sf     = {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] 12[32]))}
  zf     = {defs={0x08048570}, expr=(zerop[1] (add[32] esp_0[32] 12[32]))}
  af     = {defs={0x08048570}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  cf     = {defs={0x08048570}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  of     = {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])))}
memory:
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 27[32])} value=(extract[8] 24[32] 32[32] v14863[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 26[32])} value=(extract[8] 16[32] 24[32] v14863[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 25[32])} value=(extract[8] 8[32] 16[32] v14863[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 24[32])} value=(extract[8] 0[32] 8[32] v14863[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 23[32])} value=(extract[8] 24[32] 32[32] v14858[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 22[32])} value=(extract[8] 16[32] 24[32] v14858[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 21[32])} value=(extract[8] 8[32] 16[32] v14858[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 20[32])} value=(extract[8] 0[32] 8[32] v14858[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 19[32])} value=(extract[8] 24[32] 32[32] v14853[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 18[32])} value=(extract[8] 16[32] 24[32] v14853[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 17[32])} value=(extract[8] 8[32] 16[32] v14853[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 16[32])} value=(extract[8] 0[32] 8[32] v14853[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 15[32])} value=(extract[8] 24[32] 32[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 14[32])} value=(extract[8] 16[32] 24[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 13[32])} value=(extract[8] 8[32] 16[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 12[32])} value=(extract[8] 0[32] 8[32] v14848[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x08048577[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048577:ret    
== PartialSymbolic ==
registers:
  ebx    = v1257[32]
  esp    = v1235+0x20[32]
  ebp    = v1263[32]
  esi    = v1259[32]
  edi    = v1261[32]
  eip    = v1265[32]
  pf     = -v1250+0x1[1]
  sf     = v1251[1]
  zf     = v1252[1]
  af     = v1255[1]
  cf     = v1253[1]
  of     = v1256[1]
memory:
  addr=v1235+0x1c[32] value=v1265[32]
  addr=v1235+0x18[32] value=v1263[32]
  addr=v1235+0x14[32] value=v1261[32]
  addr=v1235+0x10[32] value=v1259[32]
  addr=v1235+0xc[32] value=v1257[32]
== Symbolic ==
registers:
  ebx    = v14848[32]
  esp    = {defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576,0x08048577}, expr=(add[32] esp_0[32] 32[32])}
  ebp    = v14863[32]
  esi    = v14853[32]
  edi    = v14858[32]
  eip    = v14868[32]
  pf     = {defs={0x08048570}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] 12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] 12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] 12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] 12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] 12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] 12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] 12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] 12[32]))))}
  sf     = {defs={0x08048570}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] 12[32]))}
  zf     = {defs={0x08048570}, expr=(zerop[1] (add[32] esp_0[32] 12[32]))}
  af     = {defs={0x08048570}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  cf     = {defs={0x08048570}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33]))}
  of     = {defs={0x08048570}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] esp_0[32]) (add[33] (uextend[33] 33[32] esp_0[32]) 12[33]) 12[33])))}
memory:
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] esp_0[32] 31[32])} value=(extract[8] 24[32] 32[32] v14868[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] esp_0[32] 30[32])} value=(extract[8] 16[32] 24[32] v14868[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] esp_0[32] 29[32])} value=(extract[8] 8[32] 16[32] v14868[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575,0x08048576}, expr=(add[32] esp_0[32] 28[32])} value=(extract[8] 0[32] 8[32] v14868[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 27[32])} value=(extract[8] 24[32] 32[32] v14863[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 26[32])} value=(extract[8] 16[32] 24[32] v14863[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 25[32])} value=(extract[8] 8[32] 16[32] v14863[32])
  addr={defs={0x08048570,0x08048573,0x08048574,0x08048575}, expr=(add[32] esp_0[32] 24[32])} value=(extract[8] 0[32] 8[32] v14863[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 23[32])} value=(extract[8] 24[32] 32[32] v14858[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 22[32])} value=(extract[8] 16[32] 24[32] v14858[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 21[32])} value=(extract[8] 8[32] 16[32] v14858[32])
  addr={defs={0x08048570,0x08048573,0x08048574}, expr=(add[32] esp_0[32] 20[32])} value=(extract[8] 0[32] 8[32] v14858[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 19[32])} value=(extract[8] 24[32] 32[32] v14853[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 18[32])} value=(extract[8] 16[32] 24[32] v14853[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 17[32])} value=(extract[8] 8[32] 16[32] v14853[32])
  addr={defs={0x08048570,0x08048573}, expr=(add[32] esp_0[32] 16[32])} value=(extract[8] 0[32] 8[32] v14853[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 15[32])} value=(extract[8] 24[32] 32[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 14[32])} value=(extract[8] 16[32] 24[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 13[32])} value=(extract[8] 8[32] 16[32] v14848[32])
  addr={defs={0x08048570}, expr=(add[32] esp_0[32] 12[32])} value=(extract[8] 0[32] 8[32] v14848[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = doubleword[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048580:push   ebp
== PartialSymbolic ==
registers:
  esp    = v1268-0x4[32]
  ebp    = v1269[32]
  eip    = 0x8048581[32]
memory:
  addr=v1268-0x4[32] value=v1269[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048580}, expr=0x08048581[32]}
memory:
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048581[32]
memory:

0x8048581:mov    ebp, esp
== PartialSymbolic ==
registers:
  esp    = v1268-0x4[32]
  ebp    = v1268-0x4[32]
  eip    = 0x8048583[32]
memory:
  addr=v1268-0x4[32] value=v1269[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])}
  ebp    = {defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048581}, expr=0x08048583[32]}
memory:
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048583[32]
memory:

0x8048583:push   ebx
== PartialSymbolic ==
registers:
  ebx    = v1270[32]
  esp    = v1268-0x8[32]
  ebp    = v1268-0x4[32]
  eip    = 0x8048584[32]
memory:
  addr=v1268-0x8[32] value=v1270[32]
  addr=v1268-0x4[32] value=v1269[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -8[32])}
  ebp    = {defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048583}, expr=0x08048584[32]}
memory:
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048584[32]
memory:

0x8048584:sub    esp, 0x04
== PartialSymbolic ==
registers:
  ebx    = v1270[32]
  esp    = v1268-0xc[32]
  ebp    = v1268-0x4[32]
  eip    = 0x8048587[32]
  pf     = -v1285+0x1[1]
  sf     = v1286[1]
  zf     = v1287[1]
  af     = -v1290+0x1[1]
  cf     = -v1288+0x1[1]
  of     = v1291[1]
memory:
  addr=v1268-0x8[32] value=v1270[32]
  addr=v1268-0x4[32] value=v1269[32]
== Symbolic ==
registers:
  esp    = {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048584}, expr=0x08048587[32]}
  pf     = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x08048580,0x08048583,0x08048584}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x08048580,0x08048583,0x08048584}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) 4294967292[33]) 4294967291[33])))}
  cf     = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) 4294967292[33]) 4294967291[33])))}
  of     = {defs={0x08048580,0x08048583,0x08048584}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) 4294967292[33]) 4294967291[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) 4294967292[33]) 4294967291[33])))}
memory:
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048587[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048587:mov    ebx, 0x080495e8<.ctors>
== PartialSymbolic ==
registers:
  ebx    = 0x80495e8[32]
  esp    = v1268-0xc[32]
  ebp    = v1268-0x4[32]
  eip    = 0x804858c[32]
  pf     = -v1285+0x1[1]
  sf     = v1286[1]
  zf     = v1287[1]
  af     = -v1290+0x1[1]
  cf     = -v1288+0x1[1]
  of     = v1291[1]
memory:
  addr=v1268-0x8[32] value=v1270[32]
  addr=v1268-0x4[32] value=v1269[32]
== Symbolic ==
registers:
  ebx    = 0x080495e8[32]
  esp    = {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048587}, expr=0x0804858c[32]}
  pf     = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x08048580,0x08048583,0x08048584}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x08048580,0x08048583,0x08048584}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) 4294967292[33]) 4294967291[33])))}
  cf     = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) 4294967292[33]) 4294967291[33])))}
  of     = {defs={0x08048580,0x08048583,0x08048584}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) 4294967292[33]) 4294967291[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) 4294967292[33]) 4294967291[33])))}
memory:
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  ebx    = 0x080495e8[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x0804858c[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x804858c:mov    eax, DWORD PTR ds:[0x080495e8<.ctors>]
== PartialSymbolic ==
registers:
  eax    = v1292[32]
  ebx    = 0x80495e8[32]
  esp    = v1268-0xc[32]
  ebp    = v1268-0x4[32]
  eip    = 0x8048591[32]
  pf     = -v1285+0x1[1]
  sf     = v1286[1]
  zf     = v1287[1]
  af     = -v1290+0x1[1]
  cf     = -v1288+0x1[1]
  of     = v1291[1]
memory:
  addr=0x80495e8[32] value=v1292[32]
  addr=v1268-0x8[32] value=v1270[32]
  addr=v1268-0x4[32] value=v1269[32]
== Symbolic ==
registers:
  eax    = v14877[32]
  ebx    = 0x080495e8[32]
  esp    = {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x0804858c}, expr=0x08048591[32]}
  pf     = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] esp_0[32] -12[32])) (extract[1] 1[32] 2[32] (add[32] esp_0[32] -12[32])) (extract[1] 2[32] 3[32] (add[32] esp_0[32] -12[32])) (extract[1] 3[32] 4[32] (add[32] esp_0[32] -12[32])) (extract[1] 4[32] 5[32] (add[32] esp_0[32] -12[32])) (extract[1] 5[32] 6[32] (add[32] esp_0[32] -12[32])) (extract[1] 6[32] 7[32] (add[32] esp_0[32] -12[32])) (extract[1] 7[32] 8[32] (add[32] esp_0[32] -12[32]))))}
  sf     = {defs={0x08048580,0x08048583,0x08048584}, expr=(extract[1] 31[32] 32[32] (add[32] esp_0[32] -12[32]))}
  zf     = {defs={0x08048580,0x08048583,0x08048584}, expr=(zerop[1] (add[32] esp_0[32] -12[32]))}
  af     = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) 4294967292[33]) 4294967291[33])))}
  cf     = {defs={0x08048580,0x08048583,0x08048584}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) 4294967292[33]) 4294967291[33])))}
  of     = {defs={0x08048580,0x08048583,0x08048584}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) 4294967292[33]) 4294967291[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) (add[33] (uextend[33] 33[32] (add[32] esp_0[32] -8[32])) 4294967292[33]) 4294967291[33])))}
memory:
  addr=0x080495eb[32] value=(extract[8] 24[32] 32[32] v14877[32])
  addr=0x080495ea[32] value=(extract[8] 16[32] 24[32] v14877[32])
  addr=0x080495e9[32] value=(extract[8] 8[32] 16[32] v14877[32])
  addr=0x080495e8[32] value=(extract[8] 0[32] 8[32] v14877[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = 0x080495e8[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048591[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048591:cmp    eax, 0xff<-0x01>
== PartialSymbolic ==
registers:
  eax    = v1292[32]
  ebx    = 0x80495e8[32]
  esp    = v1268-0xc[32]
  ebp    = v1268-0x4[32]
  eip    = 0x8048594[32]
  pf     = -v1360+0x1[1]
  sf     = v1361[1]
  zf     = v1362[1]
  af     = -v1365+0x1[1]
  cf     = -v1363+0x1[1]
  of     = v1366[1]
memory:
  addr=0x80495e8[32] value=v1292[32]
  addr=v1268-0x8[32] value=v1270[32]
  addr=v1268-0x4[32] value=v1269[32]
== Symbolic ==
registers:
  eax    = v14877[32]
  ebx    = 0x080495e8[32]
  esp    = {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048591}, expr=0x08048594[32]}
  pf     = {defs={0x08048591}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14877[32] 1[32])) (extract[1] 1[32] 2[32] (add[32] v14877[32] 1[32])) (extract[1] 2[32] 3[32] (add[32] v14877[32] 1[32])) (extract[1] 3[32] 4[32] (add[32] v14877[32] 1[32])) (extract[1] 4[32] 5[32] (add[32] v14877[32] 1[32])) (extract[1] 5[32] 6[32] (add[32] v14877[32] 1[32])) (extract[1] 6[32] 7[32] (add[32] v14877[32] 1[32])) (extract[1] 7[32] 8[32] (add[32] v14877[32] 1[32]))))}
  sf     = {defs={0x08048591}, expr=(extract[1] 31[32] 32[32] (add[32] v14877[32] 1[32]))}
  zf     = {defs={0x08048591}, expr=(zerop[1] (add[32] v14877[32] 1[32]))}
  af     = {defs={0x08048591}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14877[32]) (add[33] (uextend[33] 33[32] v14877[32]) 1[33]) 0[33])))}
  cf     = {defs={0x08048591}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14877[32]) (add[33] (uextend[33] 33[32] v14877[32]) 1[33]) 0[33])))}
  of     = {defs={0x08048591}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14877[32]) (add[33] (uextend[33] 33[32] v14877[32]) 1[33]) 0[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14877[32]) (add[33] (uextend[33] 33[32] v14877[32]) 1[33]) 0[33])))}
memory:
  addr=0x080495eb[32] value=(extract[8] 24[32] 32[32] v14877[32])
  addr=0x080495ea[32] value=(extract[8] 16[32] 24[32] v14877[32])
  addr=0x080495e9[32] value=(extract[8] 8[32] 16[32] v14877[32])
  addr=0x080495e8[32] value=(extract[8] 0[32] 8[32] v14877[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = 0x080495e8[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048594[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x8048594:je     0x080485ac<<Insn>>
== PartialSymbolic ==
registers:
  eax    = v1292[32]
  ebx    = 0x80495e8[32]
  esp    = v1268-0xc[32]
  ebp    = v1268-0x4[32]
  eip    = v1367[32]
  pf     = -v1360+0x1[1]
  sf     = v1361[1]
  zf     = v1362[1]
  af     = -v1365+0x1[1]
  cf     = -v1363+0x1[1]
  of     = v1366[1]
memory:
  addr=0x80495e8[32] value=v1292[32]
  addr=v1268-0x8[32] value=v1270[32]
  addr=v1268-0x4[32] value=v1269[32]
== Symbolic ==
registers:
  eax    = v14877[32]
  ebx    = 0x080495e8[32]
  esp    = {defs={0x08048580,0x08048583,0x08048584}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x08048591,0x08048594}, expr=(ite[32] (zerop[1] (add[32] v14877[32] 1[32])) 0x080485ac[32] 0x08048596[32])}
  pf     = {defs={0x08048591}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14877[32] 1[32])) (extract[1] 1[32] 2[32] (add[32] v14877[32] 1[32])) (extract[1] 2[32] 3[32] (add[32] v14877[32] 1[32])) (extract[1] 3[32] 4[32] (add[32] v14877[32] 1[32])) (extract[1] 4[32] 5[32] (add[32] v14877[32] 1[32])) (extract[1] 5[32] 6[32] (add[32] v14877[32] 1[32])) (extract[1] 6[32] 7[32] (add[32] v14877[32] 1[32])) (extract[1] 7[32] 8[32] (add[32] v14877[32] 1[32]))))}
  sf     = {defs={0x08048591}, expr=(extract[1] 31[32] 32[32] (add[32] v14877[32] 1[32]))}
  zf     = {defs={0x08048591}, expr=(zerop[1] (add[32] v14877[32] 1[32]))}
  af     = {defs={0x08048591}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14877[32]) (add[33] (uextend[33] 33[32] v14877[32]) 1[33]) 0[33])))}
  cf     = {defs={0x08048591}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14877[32]) (add[33] (uextend[33] 33[32] v14877[32]) 1[33]) 0[33])))}
  of     = {defs={0x08048591}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14877[32]) (add[33] (uextend[33] 33[32] v14877[32]) 1[33]) 0[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14877[32]) (add[33] (uextend[33] 33[32] v14877[32]) 1[33]) 0[33])))}
memory:
  addr=0x080495eb[32] value=(extract[8] 24[32] 32[32] v14877[32])
  addr=0x080495ea[32] value=(extract[8] 16[32] 24[32] v14877[32])
  addr=0x080495e9[32] value=(extract[8] 8[32] 16[32] v14877[32])
  addr=0x080495e8[32] value=(extract[8] 0[32] 8[32] v14877[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x08048580,0x08048583}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x08048580}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = 0x080495e8[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x08048596, 0x080485ac[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x8048596:lea    esi, [esi + 0x00]
== PartialSymbolic ==
registers:
  esi    = v1369[32]
  eip    = 0x8048599[32]
memory:
== Symbolic ==
registers:
  eip    = {defs={0x08048596}, expr=0x08048599[32]}
memory:
== Interval ==
registers:
  esi    = doubleword[32]
  eip    = 0x08048599[32]
memory:

0x8048599:lea    edi, [edi + 0x00000000]
== PartialSymbolic ==
registers:
  esi    = v1369[32]
  edi    = v1370[32]
  eip    = 0x80485a0[32]
memory:
== Symbolic ==
registers:
  eip    = {defs={0x08048599}, expr=0x080485a0[32]}
memory:
== Interval ==
registers:
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x080485a0[32]
memory:

0x80485a0:sub    ebx, 0x04
== PartialSymbolic ==
registers:
  ebx    = v1371-0x4[32]
  esi    = v1369[32]
  edi    = v1370[32]
  eip    = 0x80485a3[32]
  pf     = -v1386+0x1[1]
  sf     = v1387[1]
  zf     = v1388[1]
  af     = -v1391+0x1[1]
  cf     = -v1389+0x1[1]
  of     = v1392[1]
memory:
== Symbolic ==
registers:
  ebx    = {defs={0x080485a0}, expr=(add[32] ebx_0[32] -4[32])}
  eip    = {defs={0x080485a0}, expr=0x080485a3[32]}
  pf     = {defs={0x080485a0}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] ebx_0[32] -4[32])) (extract[1] 1[32] 2[32] (add[32] ebx_0[32] -4[32])) (extract[1] 2[32] 3[32] (add[32] ebx_0[32] -4[32])) (extract[1] 3[32] 4[32] (add[32] ebx_0[32] -4[32])) (extract[1] 4[32] 5[32] (add[32] ebx_0[32] -4[32])) (extract[1] 5[32] 6[32] (add[32] ebx_0[32] -4[32])) (extract[1] 6[32] 7[32] (add[32] ebx_0[32] -4[32])) (extract[1] 7[32] 8[32] (add[32] ebx_0[32] -4[32]))))}
  sf     = {defs={0x080485a0}, expr=(extract[1] 31[32] 32[32] (add[32] ebx_0[32] -4[32]))}
  zf     = {defs={0x080485a0}, expr=(zerop[1] (add[32] ebx_0[32] -4[32]))}
  af     = {defs={0x080485a0}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] ebx_0[32]) (add[33] (uextend[33] 33[32] ebx_0[32]) 4294967292[33]) 4294967291[33])))}
  cf     = {defs={0x080485a0}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] ebx_0[32]) (add[33] (uextend[33] 33[32] ebx_0[32]) 4294967292[33]) 4294967291[33])))}
  of     = {defs={0x080485a0}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] ebx_0[32]) (add[33] (uextend[33] 33[32] ebx_0[32]) 4294967292[33]) 4294967291[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] ebx_0[32]) (add[33] (uextend[33] 33[32] ebx_0[32]) 4294967292[33]) 4294967291[33])))}
memory:
== Interval ==
registers:
  ebx    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = 0x080485a3[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80485a3:call   eax
== PartialSymbolic ==
registers:
  eax    = v1394[32]
  ebx    = v1371-0x4[32]
  esp    = v1393-0x4[32]
  esi    = v1369[32]
  edi    = v1370[32]
  eip    = v1394[32]
  pf     = -v1386+0x1[1]
  sf     = v1387[1]
  zf     = v1388[1]
  af     = -v1391+0x1[1]
  cf     = -v1389+0x1[1]
  of     = v1392[1]
memory:
  addr=v1393-0x4[32] value=0x80485a5[32]
== Symbolic ==
registers:
  ebx    = {defs={0x080485a0}, expr=(add[32] ebx_0[32] -4[32])}
  esp    = {defs={0x080485a3}, expr=(add[32] esp_0[32] -4[32])}
  eip    = eax_0[32]
  pf     = {defs={0x080485a0}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] ebx_0[32] -4[32])) (extract[1] 1[32] 2[32] (add[32] ebx_0[32] -4[32])) (extract[1] 2[32] 3[32] (add[32] ebx_0[32] -4[32])) (extract[1] 3[32] 4[32] (add[32] ebx_0[32] -4[32])) (extract[1] 4[32] 5[32] (add[32] ebx_0[32] -4[32])) (extract[1] 5[32] 6[32] (add[32] ebx_0[32] -4[32])) (extract[1] 6[32] 7[32] (add[32] ebx_0[32] -4[32])) (extract[1] 7[32] 8[32] (add[32] ebx_0[32] -4[32]))))}
  sf     = {defs={0x080485a0}, expr=(extract[1] 31[32] 32[32] (add[32] ebx_0[32] -4[32]))}
  zf     = {defs={0x080485a0}, expr=(zerop[1] (add[32] ebx_0[32] -4[32]))}
  af     = {defs={0x080485a0}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] ebx_0[32]) (add[33] (uextend[33] 33[32] ebx_0[32]) 4294967292[33]) 4294967291[33])))}
  cf     = {defs={0x080485a0}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] ebx_0[32]) (add[33] (uextend[33] 33[32] ebx_0[32]) 4294967292[33]) 4294967291[33])))}
  of     = {defs={0x080485a0}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] ebx_0[32]) (add[33] (uextend[33] 33[32] ebx_0[32]) 4294967292[33]) 4294967291[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] ebx_0[32]) (add[33] (uextend[33] 33[32] ebx_0[32]) 4294967292[33]) 4294967291[33])))}
memory:
  addr={defs={0x080485a3}, expr=(add[32] esp_0[32] -1[32])} value={defs={0x080485a3}, expr=8[8]}
  addr={defs={0x080485a3}, expr=(add[32] esp_0[32] -2[32])} value={defs={0x080485a3}, expr=4[8]}
  addr={defs={0x080485a3}, expr=(add[32] esp_0[32] -3[32])} value={defs={0x080485a3}, expr=-123[8]}
  addr={defs={0x080485a3}, expr=(add[32] esp_0[32] -4[32])} value={defs={0x080485a3}, expr=-91[8]}
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  esi    = doubleword[32]
  edi    = doubleword[32]
  eip    = doubleword[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80485a5:mov    eax, DWORD PTR ds:[ebx]
== PartialSymbolic ==
registers:
  eax    = v1397[32]
  ebx    = v1396[32]
  eip    = 0x80485a7[32]
memory:
  addr=v1396[32] value=v1397[32]
== Symbolic ==
registers:
  eax    = v14890[32]
  eip    = {defs={0x080485a5}, expr=0x080485a7[32]}
memory:
  addr=(add[32] ebx_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14890[32])
  addr=(add[32] ebx_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14890[32])
  addr=(add[32] ebx_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14890[32])
  addr=ebx_0[32] value=(extract[8] 0[32] 8[32] v14890[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  eip    = 0x080485a7[32]
memory:

0x80485a7:cmp    eax, 0xff<-0x01>
== PartialSymbolic ==
registers:
  eax    = v1397[32]
  ebx    = v1396[32]
  eip    = 0x80485aa[32]
  pf     = -v1413+0x1[1]
  sf     = v1414[1]
  zf     = v1415[1]
  af     = -v1418+0x1[1]
  cf     = -v1416+0x1[1]
  of     = v1419[1]
memory:
  addr=v1396[32] value=v1397[32]
== Symbolic ==
registers:
  eax    = v14890[32]
  eip    = {defs={0x080485a7}, expr=0x080485aa[32]}
  pf     = {defs={0x080485a7}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14890[32] 1[32])) (extract[1] 1[32] 2[32] (add[32] v14890[32] 1[32])) (extract[1] 2[32] 3[32] (add[32] v14890[32] 1[32])) (extract[1] 3[32] 4[32] (add[32] v14890[32] 1[32])) (extract[1] 4[32] 5[32] (add[32] v14890[32] 1[32])) (extract[1] 5[32] 6[32] (add[32] v14890[32] 1[32])) (extract[1] 6[32] 7[32] (add[32] v14890[32] 1[32])) (extract[1] 7[32] 8[32] (add[32] v14890[32] 1[32]))))}
  sf     = {defs={0x080485a7}, expr=(extract[1] 31[32] 32[32] (add[32] v14890[32] 1[32]))}
  zf     = {defs={0x080485a7}, expr=(zerop[1] (add[32] v14890[32] 1[32]))}
  af     = {defs={0x080485a7}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14890[32]) (add[33] (uextend[33] 33[32] v14890[32]) 1[33]) 0[33])))}
  cf     = {defs={0x080485a7}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14890[32]) (add[33] (uextend[33] 33[32] v14890[32]) 1[33]) 0[33])))}
  of     = {defs={0x080485a7}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14890[32]) (add[33] (uextend[33] 33[32] v14890[32]) 1[33]) 0[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14890[32]) (add[33] (uextend[33] 33[32] v14890[32]) 1[33]) 0[33])))}
memory:
  addr=(add[32] ebx_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14890[32])
  addr=(add[32] ebx_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14890[32])
  addr=(add[32] ebx_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14890[32])
  addr=ebx_0[32] value=(extract[8] 0[32] 8[32] v14890[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  eip    = 0x080485aa[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80485aa:jne    0x080485a0<<Insn>>
== PartialSymbolic ==
registers:
  eax    = v1397[32]
  ebx    = v1396[32]
  eip    = v1420[32]
  pf     = -v1413+0x1[1]
  sf     = v1414[1]
  zf     = v1415[1]
  af     = -v1418+0x1[1]
  cf     = -v1416+0x1[1]
  of     = v1419[1]
memory:
  addr=v1396[32] value=v1397[32]
== Symbolic ==
registers:
  eax    = v14890[32]
  eip    = {defs={0x080485a7,0x080485aa}, expr=(ite[32] (invert[1] (zerop[1] (add[32] v14890[32] 1[32]))) 0x080485a0[32] 0x080485ac[32])}
  pf     = {defs={0x080485a7}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14890[32] 1[32])) (extract[1] 1[32] 2[32] (add[32] v14890[32] 1[32])) (extract[1] 2[32] 3[32] (add[32] v14890[32] 1[32])) (extract[1] 3[32] 4[32] (add[32] v14890[32] 1[32])) (extract[1] 4[32] 5[32] (add[32] v14890[32] 1[32])) (extract[1] 5[32] 6[32] (add[32] v14890[32] 1[32])) (extract[1] 6[32] 7[32] (add[32] v14890[32] 1[32])) (extract[1] 7[32] 8[32] (add[32] v14890[32] 1[32]))))}
  sf     = {defs={0x080485a7}, expr=(extract[1] 31[32] 32[32] (add[32] v14890[32] 1[32]))}
  zf     = {defs={0x080485a7}, expr=(zerop[1] (add[32] v14890[32] 1[32]))}
  af     = {defs={0x080485a7}, expr=(invert[1] (extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14890[32]) (add[33] (uextend[33] 33[32] v14890[32]) 1[33]) 0[33])))}
  cf     = {defs={0x080485a7}, expr=(invert[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14890[32]) (add[33] (uextend[33] 33[32] v14890[32]) 1[33]) 0[33])))}
  of     = {defs={0x080485a7}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14890[32]) (add[33] (uextend[33] 33[32] v14890[32]) 1[33]) 0[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14890[32]) (add[33] (uextend[33] 33[32] v14890[32]) 1[33]) 0[33])))}
memory:
  addr=(add[32] ebx_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14890[32])
  addr=(add[32] ebx_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14890[32])
  addr=(add[32] ebx_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14890[32])
  addr=ebx_0[32] value=(extract[8] 0[32] 8[32] v14890[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  eip    = 0x080485a0, 0x080485ac[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80485ac:pop    eax
== PartialSymbolic ==
registers:
  eax    = v1423[32]
  esp    = v1422+0x4[32]
  eip    = 0x80485ad[32]
memory:
  addr=v1422[32] value=v1423[32]
== Symbolic ==
registers:
  eax    = v14897[32]
  esp    = {defs={0x080485ac}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x080485ac}, expr=0x080485ad[32]}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14897[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14897[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14897[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14897[32])
== Interval ==
registers:
  eax    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x080485ad[32]
memory:

0x80485ad:pop    ebx
== PartialSymbolic ==
registers:
  eax    = v1423[32]
  ebx    = v1425[32]
  esp    = v1422+0x8[32]
  eip    = 0x80485ae[32]
memory:
  addr=v1422+0x4[32] value=v1425[32]
  addr=v1422[32] value=v1423[32]
== Symbolic ==
registers:
  eax    = v14897[32]
  ebx    = v14902[32]
  esp    = {defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 8[32])}
  eip    = {defs={0x080485ad}, expr=0x080485ae[32]}
memory:
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14902[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14902[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14902[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14902[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14897[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14897[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14897[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14897[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x080485ae[32]
memory:

0x80485ae:pop    ebp
== PartialSymbolic ==
registers:
  eax    = v1423[32]
  ebx    = v1425[32]
  esp    = v1422+0xc[32]
  ebp    = v1427[32]
  eip    = 0x80485af[32]
memory:
  addr=v1422+0x8[32] value=v1427[32]
  addr=v1422+0x4[32] value=v1425[32]
  addr=v1422[32] value=v1423[32]
== Symbolic ==
registers:
  eax    = v14897[32]
  ebx    = v14902[32]
  esp    = {defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] esp_0[32] 12[32])}
  ebp    = v14907[32]
  eip    = {defs={0x080485ae}, expr=0x080485af[32]}
memory:
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 11[32])} value=(extract[8] 24[32] 32[32] v14907[32])
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 10[32])} value=(extract[8] 16[32] 24[32] v14907[32])
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 9[32])} value=(extract[8] 8[32] 16[32] v14907[32])
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 8[32])} value=(extract[8] 0[32] 8[32] v14907[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14902[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14902[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14902[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14902[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14897[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14897[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14897[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14897[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080485af[32]
memory:

0x80485af:ret    
== PartialSymbolic ==
registers:
  eax    = v1423[32]
  ebx    = v1425[32]
  esp    = v1422+0x10[32]
  ebp    = v1427[32]
  eip    = v1429[32]
memory:
  addr=v1422+0xc[32] value=v1429[32]
  addr=v1422+0x8[32] value=v1427[32]
  addr=v1422+0x4[32] value=v1425[32]
  addr=v1422[32] value=v1423[32]
== Symbolic ==
registers:
  eax    = v14897[32]
  ebx    = v14902[32]
  esp    = {defs={0x080485ac,0x080485ad,0x080485ae,0x080485af}, expr=(add[32] esp_0[32] 16[32])}
  ebp    = v14907[32]
  eip    = v14912[32]
memory:
  addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] esp_0[32] 15[32])} value=(extract[8] 24[32] 32[32] v14912[32])
  addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] esp_0[32] 14[32])} value=(extract[8] 16[32] 24[32] v14912[32])
  addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] esp_0[32] 13[32])} value=(extract[8] 8[32] 16[32] v14912[32])
  addr={defs={0x080485ac,0x080485ad,0x080485ae}, expr=(add[32] esp_0[32] 12[32])} value=(extract[8] 0[32] 8[32] v14912[32])
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 11[32])} value=(extract[8] 24[32] 32[32] v14907[32])
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 10[32])} value=(extract[8] 16[32] 24[32] v14907[32])
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 9[32])} value=(extract[8] 8[32] 16[32] v14907[32])
  addr={defs={0x080485ac,0x080485ad}, expr=(add[32] esp_0[32] 8[32])} value=(extract[8] 0[32] 8[32] v14907[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14902[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14902[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14902[32])
  addr={defs={0x080485ac}, expr=(add[32] esp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14902[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14897[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14897[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14897[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14897[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = doubleword[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80485b0:push   ebp
== PartialSymbolic ==
registers:
  esp    = v1432-0x4[32]
  ebp    = v1433[32]
  eip    = 0x80485b1[32]
memory:
  addr=v1432-0x4[32] value=v1433[32]
== Symbolic ==
registers:
  esp    = {defs={0x080485b0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080485b0}, expr=0x080485b1[32]}
memory:
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080485b1[32]
memory:

0x80485b1:mov    ebp, esp
== PartialSymbolic ==
registers:
  esp    = v1432-0x4[32]
  ebp    = v1432-0x4[32]
  eip    = 0x80485b3[32]
memory:
  addr=v1432-0x4[32] value=v1433[32]
== Symbolic ==
registers:
  esp    = {defs={0x080485b0}, expr=(add[32] esp_0[32] -4[32])}
  ebp    = {defs={0x080485b0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080485b1}, expr=0x080485b3[32]}
memory:
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080485b3[32]
memory:

0x80485b3:push   ebx
== PartialSymbolic ==
registers:
  ebx    = v1434[32]
  esp    = v1432-0x8[32]
  ebp    = v1432-0x4[32]
  eip    = 0x80485b4[32]
memory:
  addr=v1432-0x8[32] value=v1434[32]
  addr=v1432-0x4[32] value=v1433[32]
== Symbolic ==
registers:
  esp    = {defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] -8[32])}
  ebp    = {defs={0x080485b0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080485b3}, expr=0x080485b4[32]}
memory:
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080485b4[32]
memory:

0x80485b4:push   eax
== PartialSymbolic ==
registers:
  eax    = v1435[32]
  ebx    = v1434[32]
  esp    = v1432-0xc[32]
  ebp    = v1432-0x4[32]
  eip    = 0x80485b5[32]
memory:
  addr=v1432-0xc[32] value=v1435[32]
  addr=v1432-0x8[32] value=v1434[32]
  addr=v1432-0x4[32] value=v1433[32]
== Symbolic ==
registers:
  esp    = {defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] -12[32])}
  ebp    = {defs={0x080485b0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = {defs={0x080485b4}, expr=0x080485b5[32]}
memory:
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] -9[32])} value=(extract[8] 24[32] 32[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] -10[32])} value=(extract[8] 16[32] 24[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] -11[32])} value=(extract[8] 8[32] 16[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] -12[32])} value=(extract[8] 0[32] 8[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080485b5[32]
memory:

0x80485b5:call   0x080485ba<<Insn>>
== PartialSymbolic ==
registers:
  eax    = v1435[32]
  ebx    = v1434[32]
  esp    = v1432-0x10[32]
  ebp    = v1432-0x4[32]
  eip    = 0x80485ba[32]
memory:
  addr=v1432-0x10[32] value=0x80485ba[32]
  addr=v1432-0xc[32] value=v1435[32]
  addr=v1432-0x8[32] value=v1434[32]
  addr=v1432-0x4[32] value=v1433[32]
== Symbolic ==
registers:
  esp    = {defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] esp_0[32] -16[32])}
  ebp    = {defs={0x080485b0}, expr=(add[32] esp_0[32] -4[32])}
  eip    = 0x080485ba[32]
memory:
  addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] esp_0[32] -13[32])} value={defs={0x080485b5}, expr=8[8]}
  addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] esp_0[32] -14[32])} value={defs={0x080485b5}, expr=4[8]}
  addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] esp_0[32] -15[32])} value={defs={0x080485b5}, expr=-123[8]}
  addr={defs={0x080485b0,0x080485b3,0x080485b4,0x080485b5}, expr=(add[32] esp_0[32] -16[32])} value={defs={0x080485b5}, expr=-70[8]}
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] -9[32])} value=(extract[8] 24[32] 32[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] -10[32])} value=(extract[8] 16[32] 24[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] -11[32])} value=(extract[8] 8[32] 16[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3,0x080485b4}, expr=(add[32] esp_0[32] -12[32])} value=(extract[8] 0[32] 8[32] eax_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] -5[32])} value=(extract[8] 24[32] 32[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] -6[32])} value=(extract[8] 16[32] 24[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] -7[32])} value=(extract[8] 8[32] 16[32] ebx_0[32])
  addr={defs={0x080485b0,0x080485b3}, expr=(add[32] esp_0[32] -8[32])} value=(extract[8] 0[32] 8[32] ebx_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -1[32])} value=(extract[8] 24[32] 32[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -2[32])} value=(extract[8] 16[32] 24[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -3[32])} value=(extract[8] 8[32] 16[32] ebp_0[32])
  addr={defs={0x080485b0}, expr=(add[32] esp_0[32] -4[32])} value=(extract[8] 0[32] 8[32] ebp_0[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080485ba[32]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80485ba:pop    ebx
== PartialSymbolic ==
registers:
  ebx    = v1438[32]
  esp    = v1437+0x4[32]
  eip    = 0x80485bb[32]
memory:
  addr=v1437[32] value=v1438[32]
== Symbolic ==
registers:
  ebx    = v14924[32]
  esp    = {defs={0x080485ba}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x080485ba}, expr=0x080485bb[32]}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14924[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14924[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14924[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14924[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x080485bb[32]
memory:

0x80485bb:add    ebx, 0x0000110e
== PartialSymbolic ==
registers:
  ebx    = v1438+0x110e[32]
  esp    = v1437+0x4[32]
  eip    = 0x80485c1[32]
  pf     = -v1454+0x1[1]
  sf     = v1455[1]
  zf     = v1456[1]
  af     = v1459[1]
  cf     = v1457[1]
  of     = v1460[1]
memory:
  addr=v1437[32] value=v1438[32]
== Symbolic ==
registers:
  ebx    = {defs={0x080485bb}, expr=(add[32] v14924[32] 4366[32])}
  esp    = {defs={0x080485ba}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x080485bb}, expr=0x080485c1[32]}
  pf     = {defs={0x080485bb}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14924[32] 4366[32])) (extract[1] 1[32] 2[32] (add[32] v14924[32] 4366[32])) (extract[1] 2[32] 3[32] (add[32] v14924[32] 4366[32])) (extract[1] 3[32] 4[32] (add[32] v14924[32] 4366[32])) (extract[1] 4[32] 5[32] (add[32] v14924[32] 4366[32])) (extract[1] 5[32] 6[32] (add[32] v14924[32] 4366[32])) (extract[1] 6[32] 7[32] (add[32] v14924[32] 4366[32])) (extract[1] 7[32] 8[32] (add[32] v14924[32] 4366[32]))))}
  sf     = {defs={0x080485bb}, expr=(extract[1] 31[32] 32[32] (add[32] v14924[32] 4366[32]))}
  zf     = {defs={0x080485bb}, expr=(zerop[1] (add[32] v14924[32] 4366[32]))}
  af     = {defs={0x080485bb}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14924[32]) (add[33] (uextend[33] 33[32] v14924[32]) 4366[33]) 4366[33]))}
  cf     = {defs={0x080485bb}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14924[32]) (add[33] (uextend[33] 33[32] v14924[32]) 4366[33]) 4366[33]))}
  of     = {defs={0x080485bb}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14924[32]) (add[33] (uextend[33] 33[32] v14924[32]) 4366[33]) 4366[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14924[32]) (add[33] (uextend[33] 33[32] v14924[32]) 4366[33]) 4366[33])))}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14924[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14924[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14924[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14924[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x080485c1[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:

0x80485c1:call   0x08048390<__do_global_dtors_aux>
== PartialSymbolic ==
registers:
  ebx    = v1438+0x110e[32]
  esp    = v1437[32]
  eip    = 0x8048390[32]
  pf     = -v1454+0x1[1]
  sf     = v1455[1]
  zf     = v1456[1]
  af     = v1459[1]
  cf     = v1457[1]
  of     = v1460[1]
memory:
  addr=v1437[32] value=0x80485c6[32]
  addr=v1437[32] value=v1438[32]
== Symbolic ==
registers:
  ebx    = {defs={0x080485bb}, expr=(add[32] v14924[32] 4366[32])}
  eip    = 0x08048390[32]
  pf     = {defs={0x080485bb}, expr=(invert[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[32] v14924[32] 4366[32])) (extract[1] 1[32] 2[32] (add[32] v14924[32] 4366[32])) (extract[1] 2[32] 3[32] (add[32] v14924[32] 4366[32])) (extract[1] 3[32] 4[32] (add[32] v14924[32] 4366[32])) (extract[1] 4[32] 5[32] (add[32] v14924[32] 4366[32])) (extract[1] 5[32] 6[32] (add[32] v14924[32] 4366[32])) (extract[1] 6[32] 7[32] (add[32] v14924[32] 4366[32])) (extract[1] 7[32] 8[32] (add[32] v14924[32] 4366[32]))))}
  sf     = {defs={0x080485bb}, expr=(extract[1] 31[32] 32[32] (add[32] v14924[32] 4366[32]))}
  zf     = {defs={0x080485bb}, expr=(zerop[1] (add[32] v14924[32] 4366[32]))}
  af     = {defs={0x080485bb}, expr=(extract[1] 4[32] 5[32] (bv-xor[33] (uextend[33] 33[32] v14924[32]) (add[33] (uextend[33] 33[32] v14924[32]) 4366[33]) 4366[33]))}
  cf     = {defs={0x080485bb}, expr=(extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14924[32]) (add[33] (uextend[33] 33[32] v14924[32]) 4366[33]) 4366[33]))}
  of     = {defs={0x080485bb}, expr=(bv-xor[1] (extract[1] 32[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v14924[32]) (add[33] (uextend[33] 33[32] v14924[32]) 4366[33]) 4366[33])) (extract[1] 31[32] 32[32] (bv-xor[33] (uextend[33] 33[32] v14924[32]) (add[33] (uextend[33] 33[32] v14924[32]) 4366[33]) 4366[33])))}
memory:
  addr={defs={0x080485ba,0x080485c1}, expr=(add[32] esp_0[32] 3[32])} value={defs={0x080485c1}, expr=8[8]}
  addr={defs={0x080485ba,0x080485c1}, expr=(add[32] esp_0[32] 2[32])} value={defs={0x080485c1}, expr=4[8]}
  addr={defs={0x080485ba,0x080485c1}, expr=(add[32] esp_0[32] 1[32])} value={defs={0x080485c1}, expr=-123[8]}
  addr={defs={0x080485ba,0x080485c1}, expr=esp_0[32]} value={defs={0x080485c1}, expr=-58[8]}
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14924[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14924[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14924[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14924[32])
== Interval ==
registers:
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x08048390[32]
  pf     = 0..1[1]
  sf     = 0..1[1]
  zf     = 0..1[1]
  af     = 0..1[1]
  cf     = 0..1[1]
  of     = 0..1[1]
memory:
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x80485c6:pop    eax
== PartialSymbolic ==
registers:
  eax    = v1463[32]
  esp    = v1462+0x4[32]
  eip    = 0x80485c7[32]
memory:
  addr=v1462[32] value=v1463[32]
== Symbolic ==
registers:
  eax    = v14931[32]
  esp    = {defs={0x080485c6}, expr=(add[32] esp_0[32] 4[32])}
  eip    = {defs={0x080485c6}, expr=0x080485c7[32]}
memory:
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14931[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14931[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14931[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14931[32])
== Interval ==
registers:
  eax    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x080485c7[32]
memory:

0x80485c7:pop    ebx
== PartialSymbolic ==
registers:
  eax    = v1463[32]
  ebx    = v1465[32]
  esp    = v1462+0x8[32]
  eip    = 0x80485c8[32]
memory:
  addr=v1462+0x4[32] value=v1465[32]
  addr=v1462[32] value=v1463[32]
== Symbolic ==
registers:
  eax    = v14931[32]
  ebx    = v14936[32]
  esp    = {defs={0x080485c6,0x080485c7}, expr=(add[32] esp_0[32] 8[32])}
  eip    = {defs={0x080485c7}, expr=0x080485c8[32]}
memory:
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14936[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14936[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14936[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14936[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14931[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14931[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14931[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14931[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  eip    = 0x080485c8[32]
memory:

0x80485c8:leave  
== PartialSymbolic ==
registers:
  eax    = v1463[32]
  ebx    = v1465[32]
  esp    = v1467+0x4[32]
  ebp    = v1468[32]
  eip    = 0x80485c9[32]
memory:
  addr=v1467[32] value=v1468[32]
  addr=v1462+0x4[32] value=v1465[32]
  addr=v1462[32] value=v1463[32]
== Symbolic ==
registers:
  eax    = v14931[32]
  ebx    = v14936[32]
  esp    = {defs={0x080485c8}, expr=(add[32] ebp_0[32] 4[32])}
  ebp    = v14942[32]
  eip    = {defs={0x080485c8}, expr=0x080485c9[32]}
memory:
  addr=(add[32] ebp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14942[32])
  addr=(add[32] ebp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14942[32])
  addr=(add[32] ebp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14942[32])
  addr=ebp_0[32] value=(extract[8] 0[32] 8[32] v14942[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14936[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14936[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14936[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14936[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14931[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14931[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14931[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14931[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = 0x080485c9[32]
memory:

0x80485c9:ret    
== PartialSymbolic ==
registers:
  eax    = v1463[32]
  ebx    = v1465[32]
  esp    = v1467+0x8[32]
  ebp    = v1468[32]
  eip    = v1530[32]
memory:
  addr=v1467+0x4[32] value=v1530[32]
  addr=v1467[32] value=v1468[32]
  addr=v1462+0x4[32] value=v1465[32]
  addr=v1462[32] value=v1463[32]
== Symbolic ==
registers:
  eax    = v14931[32]
  ebx    = v14936[32]
  esp    = {defs={0x080485c8,0x080485c9}, expr=(add[32] ebp_0[32] 8[32])}
  ebp    = v14942[32]
  eip    = v14947[32]
memory:
  addr={defs={0x080485c8}, expr=(add[32] ebp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14947[32])
  addr={defs={0x080485c8}, expr=(add[32] ebp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14947[32])
  addr={defs={0x080485c8}, expr=(add[32] ebp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14947[32])
  addr={defs={0x080485c8}, expr=(add[32] ebp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14947[32])
  addr=(add[32] ebp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14942[32])
  addr=(add[32] ebp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14942[32])
  addr=(add[32] ebp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14942[32])
  addr=ebp_0[32] value=(extract[8] 0[32] 8[32] v14942[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 7[32])} value=(extract[8] 24[32] 32[32] v14936[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 6[32])} value=(extract[8] 16[32] 24[32] v14936[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 5[32])} value=(extract[8] 8[32] 16[32] v14936[32])
  addr={defs={0x080485c6}, expr=(add[32] esp_0[32] 4[32])} value=(extract[8] 0[32] 8[32] v14936[32])
  addr=(add[32] esp_0[32] 3[32]) value=(extract[8] 24[32] 32[32] v14931[32])
  addr=(add[32] esp_0[32] 2[32]) value=(extract[8] 16[32] 24[32] v14931[32])
  addr=(add[32] esp_0[32] 1[32]) value=(extract[8] 8[32] 16[32] v14931[32])
  addr=esp_0[32] value=(extract[8] 0[32] 8[32] v14931[32])
== Interval ==
registers:
  eax    = doubleword[32]
  ebx    = doubleword[32]
  esp    = doubleword[32]
  ebp    = doubleword[32]
  eip    = doubleword[32]
memory:
analyzed headers: 1
